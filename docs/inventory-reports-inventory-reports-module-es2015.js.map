{"version":3,"sources":["./src/app/distribution/inventory-reports/area-reports/area-reports.component.html","./src/app/distribution/inventory-reports/company-reports/company-reports.component.html","./src/app/distribution/inventory-reports/inventory-reports.component.html","./src/app/distribution/inventory-reports/product-reports/product-reports.component.html","./src/app/distribution/inventory-reports/stock-reports/stock-ledger/stock-ledger.component.html","./src/app/distribution/inventory-reports/stock-reports/stock-position/stock-position.component.html","./src/app/distribution/inventory-reports/stock-reports/stock-reports.component.html","./src/app/distribution/inventory-reports/stock-reports/stock-statement/stock-statement.component.html","./src/app/distribution/inventory-reports/area-reports/area-reports.component.scss","./src/app/distribution/inventory-reports/area-reports/area-reports.component.ts","./src/app/distribution/inventory-reports/company-reports/company-reports.component.scss","./src/app/distribution/inventory-reports/company-reports/company-reports.component.ts","./src/app/distribution/inventory-reports/inventory-reports-routing.module.ts","./src/app/distribution/inventory-reports/inventory-reports.component.scss","./src/app/distribution/inventory-reports/inventory-reports.component.ts","./src/app/distribution/inventory-reports/inventory-reports.module.ts","./src/app/distribution/inventory-reports/inventory-reports.service.ts","./src/app/distribution/inventory-reports/product-reports/product-reports.component.scss","./src/app/distribution/inventory-reports/product-reports/product-reports.component.ts","./src/app/distribution/inventory-reports/stock-reports/stock-ledger/stock-ledger.component.scss","./src/app/distribution/inventory-reports/stock-reports/stock-ledger/stock-ledger.component.ts","./src/app/distribution/inventory-reports/stock-reports/stock-position/stock-position.component.scss","./src/app/distribution/inventory-reports/stock-reports/stock-position/stock-position.component.ts","./src/app/distribution/inventory-reports/stock-reports/stock-reports.component.scss","./src/app/distribution/inventory-reports/stock-reports/stock-reports.component.ts","./src/app/distribution/inventory-reports/stock-reports/stock-statement/stock-statement.component.scss","./src/app/distribution/inventory-reports/stock-reports/stock-statement/stock-statement.component.ts","./src/app/shared/http-services/inventory-reports/inventory-http.service.ts"],"names":[],"mappings":"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","file":"inventory-reports-inventory-reports-module-es2015.js","sourcesContent":["export default \"<div class=\\\"m-5 button-icons\\\">    \\n    \\n    <div class=\\\"row mx-0 mt-3\\\" style=\\\"column-gap: 20px;\\\">\\n\\n        <button class=\\\"btn btn-info p-4 col-md-2 mb-2\\\" *ngFor=\\\"let item of menuArray\\\">\\n    \\n            <div><i class=\\\"bi bi-geo-alt\\\"></i></div>                    \\n            <div class=\\\"text-center\\\" style=\\\"white-space: normal\\\">{{item?.menuName}} </div>\\n\\n        </button>\\n               \\n    \\n    </div>\\n\\n    \\n</div>\"","export default \"<div class=\\\"m-5 button-icons\\\">    \\n    \\n    <div class=\\\"row mx-0 mt-3\\\" style=\\\"column-gap: 20px;\\\">\\n\\n        <button class=\\\"btn btn-info p-4 col-md-2 mb-2\\\" *ngFor=\\\"let item of menuArray\\\">\\n    \\n            <div><i class=\\\"fas fa-arrow-dowbi bi-buildings\\\"></i></div>                    \\n            <div class=\\\"text-center\\\" style=\\\"white-space: normal\\\">{{item?.menuName}} </div>\\n\\n        </button>\\n               \\n    \\n    </div>\\n\\n    \\n</div>\"","export default \"<router-outlet></router-outlet>\"","export default \"<div class=\\\"m-5 button-icons\\\">    \\n    \\n    <div class=\\\"row mx-0 mt-3\\\" style=\\\"column-gap: 20px;\\\">\\n\\n        <button class=\\\"btn btn-info p-4 col-md-2 mb-2\\\" *ngFor=\\\"let item of menuArray\\\">\\n    \\n            <div><i class=\\\"bi bi-box\\\"></i></div>                    \\n            <div class=\\\"text-center\\\" style=\\\"white-space: normal\\\">{{item?.menuName}} </div>\\n\\n        </button>\\n               \\n    \\n    </div>\\n\\n    \\n</div>\"","export default \"<div class=\\\"pharma-finance\\\">\\n    <div class=\\\"heading-container\\\">\\n      <h4 class=\\\"pharmacyHeading\\\" style=\\\"text-align: center;\\\">Stock Ledger</h4>\\n      <!-- please check stock-statement component for stock-position code componenets are interchanged -->\\n    </div>\\n    <br>\\n  \\n    <mat-accordion>\\n      <mat-expansion-panel class=\\\"ledger_mat\\\" [expanded]=\\\"step === 0\\\" (opened)=\\\"setStep(0)\\\" hideToggle>\\n        <!-- [expanded]=\\\"step === 0\\\" -->\\n        <form [formGroup]=\\\"stockLedgerRepost\\\">\\n          <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"16px\\\" class=\\\"CashReceiptControls\\\">\\n            <mat-form-field fxFlex=\\\"20\\\" appearance=\\\"outline\\\" fxFlex.xs=\\\"30\\\" class=\\\"e_mat_date\\\">\\n                <mat-label>From Date</mat-label>\\n                <input matInput [matDatepicker]=\\\"fromDatePicker\\\" formControlName=\\\"fromDate\\\" [matDatepickerFilter]=\\\"dateFilter\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"fromDatePicker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #fromDatePicker></mat-datepicker>\\n                <mat-error class=\\\"error-msg\\\">\\n                  <span >From Date is Required...!</span>\\n                </mat-error>\\n              </mat-form-field>\\n  \\n            <mat-form-field fxFlex=\\\"20\\\" appearance=\\\"outline\\\" fxFlex.xs=\\\"30\\\" class=\\\"e_mat_date\\\">\\n                <mat-label>To Date</mat-label>\\n                <input matInput [matDatepicker]=\\\"toDatePicker\\\" formControlName=\\\"toDate\\\" [matDatepickerFilter]=\\\"dateFilter\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"toDatePicker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #toDatePicker></mat-datepicker>\\n                <mat-error class=\\\"error-msg\\\">\\n                  <span >To Date is Required...!</span>\\n                </mat-error>\\n            </mat-form-field>\\n  \\n            <mat-form-field fxFlex=\\\"20\\\" fxFlex.sm=\\\"28\\\" appearance=\\\"outline\\\">\\n              <mat-label>Report Option</mat-label>\\n              <mat-select formControlName=\\\"accopyType\\\" (selectionChange)=\\\"typeChange($event.value)\\\">\\n                <mat-option value=1>Product Wise</mat-option>\\n                <mat-option value=2>Batch Wise</mat-option>\\n              </mat-select>\\n              <mat-error class=\\\"error-msg\\\">\\n                <span >Type is Required...!</span>\\n              </mat-error>\\n            </mat-form-field>\\n            <div fxFlex=\\\"20\\\" fxFlex.xs=\\\"30\\\" *ngIf=\\\"stockLedgerRepost.get('accopyType')?.value === '2'\\\" >\\n              <!-- <div fxFlex=\\\"20\\\" fxFlex.xs=\\\"30\\\"> -->\\n                <app-autocomplete [definition]=\\\"customProductAutoCompleteDef\\\" [control]=\\\"ProductName\\\"\\n                [optionsTableDefinition]=\\\"customProductOptsTable\\\"></app-autocomplete>\\n              <!-- </div> -->\\n            </div>\\n            <div fxFlex=\\\"100\\\" class=\\\"mt-1\\\" *ngIf=\\\"stockLedgerRepost.get('accopyType')?.value === '1'\\\" >\\n              <app-auto-select (outPutEmitter)=\\\"receiveGroupData($event)\\\" [optionsTableDefinition]=\\\"customProductsOptsTable\\\" [filterKeys]=\\\"prodFilterKeys\\\" [dataSource]=\\\"proddropdown\\\"></app-auto-select>\\n            </div>\\n            <div fxFlex=\\\"100\\\" *ngIf=\\\"batchWise\\\">\\n              <app-auto-select (outPutEmitter)=\\\"receiveGroupData($event)\\\" [optionsTableDefinition]=\\\"customAccountsOptsTable\\\" [filterKeys]=\\\"filterKeys\\\" [dataSource]=\\\"batchewisestock\\\"></app-auto-select>\\n            </div>\\n            <!-- <div fxFlex=\\\"100\\\" class=\\\"mt-1\\\" *ngIf=\\\"stockLedgerRepost.get('accopyType')?.value === '2'\\\" >\\n              <app-auto-select (outPutEmitter)=\\\"receiveGroupData($event)\\\" [optionsTableDefinition]=\\\"customProductsOptsTable\\\" [filterKeys]=\\\"prodFilterKeys\\\" [dataSource]=\\\"proddropdown\\\"></app-auto-select>\\n            </div> -->\\n            <!-- <mat-form-field fxFlex=\\\"100\\\" appearance=\\\"outline\\\" *ngIf=\\\"stockLedgerRepost.get('accopyType')?.value === '1'\\\">\\n              <mat-label> Search with product Name</mat-label>\\n            \\n              <mat-select formControlName=\\\"accId\\\" multiple>\\n                <div class=\\\"search-container\\\">\\n                  <mat-form-field appearance=\\\"fill\\\" class=\\\"search-field\\\">\\n                    <mat-label>Search</mat-label>\\n                    <input matInput (keyup)=\\\"filterOptions($event.target.value)\\\" placeholder=\\\"Type to search\\\">\\n                  </mat-form-field>\\n                </div>\\n                <mat-checkbox [checked]=\\\"isAllSelected\\\" [indeterminate]=\\\"isIndeterminate\\\"\\n                  (change)=\\\"toggleSelectAll($event.checked)\\\">\\n                  Select All\\n                </mat-checkbox>\\n            \\n                <div class=\\\"dropdown-table header\\\">\\n                  <span>Company Name</span>\\n                  <span>Shot Name</span>\\n                  <span>Address1</span>\\n                  <span>Address1</span>\\n                  <span>Group Name</span>\\n                </div>\\n            \\n                <mat-option *ngFor=\\\"let option of filteredOptions\\\" [value]=\\\"option\\\">\\n                  <div class=\\\"dropdown-table row\\\">\\n                    <span>{{ option.compName }}</span>\\n                    <span>{{ option.compShName }}</span>\\n                    <span>{{ option.address1 }}</span>\\n                    <span>{{ option.address2 }}</span>\\n                    <span>{{ option.compGroupName }}</span>\\n                  </div>\\n                </mat-option>\\n              </mat-select>\\n              <mat-error class=\\\"error-msg\\\">\\n                <span >Company option is Required...!</span>\\n              </mat-error>\\n            </mat-form-field> -->\\n\\n            <!-- <mat-form-field fxFlex=\\\"100\\\" appearance=\\\"outline\\\" *ngIf=\\\"stockLedgerRepost.get('accopyType')?.value === '2'\\\">\\n                <mat-label>Company Group Option</mat-label>\\n              \\n                <mat-select formControlName=\\\"accId\\\" multiple>\\n                  <div class=\\\"search-container\\\">\\n                    <mat-form-field appearance=\\\"fill\\\" class=\\\"search-field\\\">\\n                      <mat-label>Search</mat-label>\\n                      <input matInput (keyup)=\\\"GroupfilterOptions($event.target.value)\\\" placeholder=\\\"Type to search\\\">\\n                    </mat-form-field>\\n                  </div>\\n                  <mat-checkbox [checked]=\\\"isAllSelected\\\" [indeterminate]=\\\"isIndeterminate\\\"\\n                    (change)=\\\"toggleSelectAllgroups($event.checked)\\\">\\n                    Select All\\n                  </mat-checkbox>\\n              \\n                  <div class=\\\"dropdown-table header\\\">\\n                    <span>CompanyGroup Name</span>\\n                  </div>\\n              \\n                  <mat-option *ngFor=\\\"let option of groupFilteredOptions\\\" [value]=\\\"option\\\">\\n                    <div class=\\\"dropdown-table row\\\">\\n                      <span>{{ option.compGroupName }}</span>\\n                    </div>\\n                  </mat-option>\\n                </mat-select>\\n                <mat-error class=\\\"error-msg\\\">\\n                  <span >Account option is Required...!</span>\\n                </mat-error>\\n            </mat-form-field> -->\\n  \\n            <!-- Buttons -->\\n          </div>\\n          <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"16px\\\" class=\\\"button-group mt-2 justify-content-end button-group\\\">\\n            <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\"  (click)=\\\"generateReport()\\\">Get</button>\\n            <button type=\\\"button\\\" mat-raised-button color=\\\"warn\\\" (click)=\\\"resetForm()\\\">Reset</button>\\n            <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" class=\\\"my-1\\\" (click)=\\\"goback()\\\">Back</button>\\n            <div class=\\\"action-icons\\\">\\n              <!-- Excel Export Button -->\\n              <button mat-icon-button>\\n                <img src=\\\"assets/new_xl.png\\\" alt=\\\"Excel\\\" class=\\\"icon-img\\\" />\\n              </button>\\n              \\n        \\n              <!-- PDF Export Button -->\\n              <button mat-icon-button >\\n                <img src=\\\"assets/new_pdf.png\\\" alt=\\\"PDF\\\" class=\\\"icon-img\\\" />\\n              </button>\\n            </div>\\n          </div>\\n        </form>\\n      </mat-expansion-panel>\\n    </mat-accordion>\\n  </div>\\n\\n  \\n<div class=\\\"mt-2\\\">\\n  <div class=\\\"master-table\\\" id=\\\"table-scroll\\\" *ngIf=\\\"showTable\\\">\\n    <!-- <app-alert [id]=\\\"'dataTableAlertId'\\\"></app-alert> -->\\n    <app-registers-table [dataSource]=\\\"dataSource\\\"></app-registers-table>\\n  </div>\\n</div>\"","export default \"\\n<div class=\\\"pharma-finance\\\">\\n  <div class=\\\"heading-container\\\">\\n    <h4 class=\\\"pharmacyHeading\\\" style=\\\"text-align: center;\\\">Stock Statement</h4>\\n  </div>\\n  <br>\\n  <!-- Stock Statement code is in stock position component and stock position code is in stock statement component. components are inter changed. -->\\n\\n  <mat-accordion>\\n    <mat-expansion-panel class=\\\"account_mat\\\" [expanded]=\\\"step === 0\\\" (opened)=\\\"setStep(0)\\\" hideToggle>\\n      <!-- [expanded]=\\\"step === 0\\\" -->\\n      <form [formGroup]=\\\"stockStatementRepost\\\">\\n        <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"16px\\\" class=\\\"CashReceiptControls\\\">\\n          <mat-form-field fxFlex=\\\"20\\\" fxFlex.sm=\\\"24\\\" fxFlex.xs=\\\"30\\\" class=\\\"e_mat_date\\\" appearance=\\\"outline\\\">\\n              <mat-label>From Date</mat-label>\\n              <input matInput [matDatepicker]=\\\"fromDatePicker\\\" formControlName=\\\"fromDate\\\" [matDatepickerFilter]=\\\"dateFilter\\\">\\n              <mat-datepicker-toggle matSuffix [for]=\\\"fromDatePicker\\\"></mat-datepicker-toggle>\\n              <mat-datepicker #fromDatePicker></mat-datepicker>\\n              <mat-error class=\\\"error-msg\\\">\\n                <span >From Date is Required...!</span>\\n              </mat-error>\\n            </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"20\\\" fxFlex.sm=\\\"24\\\" fxFlex.xs=\\\"30\\\" class=\\\"e_mat_date\\\" appearance=\\\"outline\\\">\\n              <mat-label>To Date</mat-label>\\n              <input matInput [matDatepicker]=\\\"toDatePicker\\\" formControlName=\\\"toDate\\\" [matDatepickerFilter]=\\\"dateFilter\\\">\\n              <mat-datepicker-toggle matSuffix [for]=\\\"toDatePicker\\\"></mat-datepicker-toggle>\\n              <mat-datepicker #toDatePicker></mat-datepicker>\\n              <mat-error class=\\\"error-msg\\\">\\n                <span >To Date is Required...!</span>\\n              </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"20\\\" fxFlex.xs=\\\"30\\\" fxFlex.sm=\\\"30\\\" appearance=\\\"outline\\\">\\n            <mat-label>Report Option</mat-label>\\n            <mat-select formControlName=\\\"accopyType\\\" (selectionChange)=\\\"typeChange($event.value)\\\">\\n              <mat-option value=1>Companywise</mat-option>\\n              <mat-option value=2>CompanyGroupwise</mat-option>\\n            </mat-select>\\n            <mat-error class=\\\"error-msg\\\">\\n              <span >Type is Required...!</span>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <!-- <mat-form-field fxFlex=\\\"100\\\" class=\\\"mt-2\\\" appearance=\\\"outline\\\" *ngIf=\\\"stockStatementRepost.get('accopyType')?.value === '1'\\\">\\n            <mat-label>Company Option</mat-label>\\n          \\n            <mat-select (selectionChange)=\\\"comp($event)\\\" formControlName=\\\"accId\\\" panelClass=\\\"account_select\\\" multiple>\\n              <mat-select-trigger>\\n                <ng-container *ngIf=\\\"selectedAccounts?.length > 0\\\">\\n                  {{ selectedAccounts[0]?.compName }}\\n                  <span *ngIf=\\\"selectedAccounts.length > 1\\\" class=\\\"example-additional-selection\\\">\\n                    (+{{ selectedAccounts.length - 1 }} {{ selectedAccounts.length === 2 ? 'other' : 'others' }})\\n                  </span>\\n                </ng-container>\\n              </mat-select-trigger>\\n              <div class=\\\"search-container\\\">\\n                <mat-form-field appearance=\\\"fill\\\" class=\\\"search-field mat_date account_search\\\">\\n                  <mat-label>Search</mat-label>\\n                  <input matInput (input)=\\\"filterOptions($event.target.value)\\\" placeholder=\\\"Type to search\\\">\\n                </mat-form-field>\\n              </div>\\n              <mat-checkbox class=\\\"d-block ml-2 mb-0\\\" [checked]=\\\"isAllSelected\\\" [indeterminate]=\\\"isIndeterminate\\\"\\n                (change)=\\\"toggleSelectAll($event.checked)\\\">\\n                Select All\\n              </mat-checkbox>\\n          \\n              <div class=\\\"row mx-0\\\">\\n                <div class=\\\"col-md-12 col-xl-8 pr-0\\\" style=\\\"max-height: 250px;overflow: auto;\\\">\\n                  <mat-option class=\\\"mat_header\\\">\\n                    <div fxLayout=\\\"row\\\" class=\\\"dropdown-table\\\">\\n                      <div fxFlex=\\\"20\\\" class=\\\"header\\\">Company Name</div>\\n                      <div fxFlex=\\\"12\\\" class=\\\"header\\\">Shot Name</div>\\n                      <div fxFlex=\\\"20\\\" class=\\\"header\\\">Address1</div>\\n                      <div fxFlex=\\\"20\\\" class=\\\"header\\\">Address2</div>\\n                      <div fxFlex=\\\"20\\\" class=\\\"header\\\">Group Name</div>\\n                    </div>\\n                  </mat-option>\\n              \\n                  <mat-option class=\\\"mat_opt\\\" *ngFor=\\\"let option of filteredOptions\\\" [value]=\\\"option\\\">\\n                    <div fxLayout=\\\"row\\\">\\n                      <div fxFlex=\\\"20\\\" class=\\\"mat_option\\\" title=\\\"{{ option.compName }}\\\">{{ option.compName }}</div>\\n                      <div fxFlex=\\\"12\\\" class=\\\"mat_option\\\">{{ option.compShName }}</div>\\n                      <div fxFlex=\\\"20\\\" class=\\\"mat_option\\\" title=\\\"{{ option.address1 }}\\\">{{ option.address1 }}</div>\\n                      <div fxFlex=\\\"20\\\" class=\\\"mat_option\\\" title=\\\"{{ option.address2}}\\\">{{ option.address2 }}</div>\\n                      <div fxFlex=\\\"20\\\" class=\\\"mat_option\\\">{{ option.compGroupName }}</div>\\n                    </div>\\n                  </mat-option>\\n                </div>\\n                <div class=\\\"col-md-12 col-xl-4 pr-0\\\" style=\\\"max-height: 250px;overflow: auto;\\\">\\n                  <div class=\\\"m-0 mat_header text-white font-weight-bold p-2\\\">\\n                    <span>Selected List</span>\\n                    <mat-checkbox class=\\\"ml-3 mat_checkbox\\\" (change)=\\\"clearSelectedItems($event.checked)\\\" [checked]=\\\"false\\\"\\n                      style=\\\"pointer-events: auto;\\\">Unselect All</mat-checkbox>\\n                  </div>\\n                  <ul class=\\\"mb-0\\\" *ngIf=\\\"stockStatementRepost.get('accId')?.value.length > 0\\\" >\\n                    <li *ngFor=\\\"let account of stockStatementRepost.get('accId')?.value\\\">{{ account.compName }} ({{ account.accShName }} - {{\\n                      account.cityName\\n                      }})</li>\\n                  </ul>\\n                  <div class=\\\"text-danger font-weight-bold\\\" *ngIf=\\\"stockStatementRepost.get('accId')?.value.length == 0\\\" >\\n                    No company is selected.\\n                  </div>\\n                </div>\\n              </div>\\n            </mat-select>\\n            <mat-error class=\\\"error-msg\\\">\\n              <span >Company option is Required...!</span>\\n            </mat-error>\\n          </mat-form-field> -->\\n          <div fxFlex=\\\"100\\\" class=\\\"mt-1\\\" *ngIf=\\\"stockStatementRepost.get('accopyType')?.value === '1'\\\" >\\n            <app-auto-select (outPutEmitter)=\\\"receiveData($event)\\\" [optionsTableDefinition]=\\\"customAccountsOptsTable\\\" [filterKeys]=\\\"filterKeys\\\" [dataSource]=\\\"dropdownOptions\\\"></app-auto-select>\\n          </div>\\n\\n          <!-- <mat-form-field fxFlex=\\\"100\\\" appearance=\\\"outline\\\" *ngIf=\\\"stockStatementRepost.get('accopyType')?.value === '2'\\\">\\n              <mat-label>Company Group Option</mat-label>\\n            \\n              <mat-select formControlName=\\\"accId\\\" multiple>\\n                <div class=\\\"search-container\\\">\\n                  <mat-form-field appearance=\\\"fill\\\" class=\\\"search-field mat_date\\\">\\n                    <mat-label>Search</mat-label>\\n                    <input matInput (keyup)=\\\"GroupfilterOptions($event.target.value)\\\" placeholder=\\\"Type to search\\\">\\n                  </mat-form-field>\\n                </div>\\n                <mat-checkbox [checked]=\\\"isAllSelected\\\" [indeterminate]=\\\"isIndeterminate\\\"\\n                  (change)=\\\"toggleSelectAllgroups($event.checked)\\\">\\n                  Select All\\n                </mat-checkbox>\\n            \\n                <div class=\\\"mat_header\\\">\\n                  <div class=\\\"header text-white p-2\\\">CompanyGroup Name</div>\\n        \\n                </div>\\n            \\n                <mat-option class=\\\"mat_option\\\" *ngFor=\\\"let option of groupFilteredOptions\\\" [value]=\\\"option\\\">\\n                  <div fxLayout=\\\" row\\\">\\n                    <span class=\\\"mat_opt\\\">{{ option.compGroupName }}</span>\\n                   \\n                  </div>\\n                </mat-option>\\n              </mat-select>\\n              <mat-error class=\\\"error-msg\\\">\\n                <span >Account option is Required...!</span>\\n              </mat-error>\\n            </mat-form-field> -->\\n            <div fxFlex=\\\"100\\\" class=\\\"mt-1\\\" *ngIf=\\\"stockStatementRepost.get('accopyType')?.value === '2'\\\" >\\n              <app-auto-select (outPutEmitter)=\\\"receiveGroupData($event)\\\" [optionsTableDefinition]=\\\"customCmpGroupsOptsTable\\\" [filterKeys]=\\\"groupfilterKeys\\\" [dataSource]=\\\"groupdropdown\\\"></app-auto-select>\\n            </div>\\n          </div>\\n        <!-- Buttons -->\\n        <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"16px\\\" class=\\\"button-group\\\">\\n          <div fxFlex=\\\"100\\\" class=\\\"d-sm-flex justify-content-end\\\">\\n            <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\"\\n              (click)=\\\"generateReport()\\\">Get</button>\\n            <button type=\\\"button\\\" mat-raised-button color=\\\"warn\\\" (click)=\\\"resetForm()\\\">Reset</button>\\n            <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" class=\\\"my-1\\\" (click)=\\\"goback()\\\">Back</button>\\n            <div class=\\\"action-icons\\\" *ngIf=\\\"isshowExcel\\\">\\n              <!-- Excel Export Button -->\\n              <button mat-icon-button  (click)=\\\"exportToExcel(stockStatementRepost.value)\\\">\\n                <img src=\\\"assets/new_xl.png\\\" alt=\\\"Excel\\\" class=\\\"icon-img\\\" />\\n              </button>\\n              \\n        \\n              <!-- PDF Export Button -->\\n              <button mat-icon-button >\\n                <img src=\\\"assets/new_pdf.png\\\" alt=\\\"PDF\\\" class=\\\"icon-img\\\" />\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n      </form>\\n    </mat-expansion-panel>\\n  </mat-accordion>\\n</div>\\n\\n\\n<div class=\\\"mt-2\\\">\\n<div class=\\\"master-table\\\" id=\\\"table-scroll\\\" *ngIf=\\\"showTable\\\">\\n  <!-- <app-alert [id]=\\\"'dataTableAlertId'\\\"></app-alert> -->\\n  <app-registers-table [dataSource]=\\\"dataSource\\\"></app-registers-table>\\n</div>\\n</div>\\n\\n\"","export default \"<div class=\\\"m-5 button-icons\\\">    \\n    \\n    <div class=\\\"row mx-0 mt-3\\\" style=\\\"column-gap: 20px;\\\">\\n\\n        <button (click)=\\\"report(item?.menuPath)\\\" class=\\\"btn btn-info p-4 col-md-2 mb-2\\\" *ngFor=\\\"let item of menuArray\\\">\\n    \\n            <div><i class=\\\"bi bi-file-earmark-bar-graph\\\"></i></div>                    \\n            <div class=\\\"text-center\\\" style=\\\"white-space: normal\\\">{{item?.menuName}} </div>\\n\\n        </button>\\n               \\n    \\n    </div>\\n\\n    \\n</div>\"","export default \"\\n<div class=\\\"pharma-finance\\\">\\n    <div class=\\\"heading-container\\\">\\n      <h4 class=\\\"pharmacyHeading\\\" style=\\\"text-align: center;\\\">Stock Position</h4>\\n<!-- please check stock-position component for stock-statement code componenets are interchanged -->\\n    </div>\\n    <br>\\n  \\n    <mat-accordion>\\n      <mat-expansion-panel class=\\\"pt-3\\\" [expanded]=\\\"step === 0\\\" (opened)=\\\"setStep(0)\\\" hideToggle>\\n        <!-- [expanded]=\\\"step === 0\\\" -->\\n        <form [formGroup]=\\\"stockPositionRepost\\\">\\n          <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"16px\\\" class=\\\"CashReceiptControls\\\">\\n            <!-- <mat-form-field fxFlex=\\\"20\\\" appearance=\\\"outline\\\">\\n                <mat-label>From Date</mat-label>\\n                <input matInput [matDatepicker]=\\\"fromDatePicker\\\" formControlName=\\\"fromDate\\\" [matDatepickerFilter]=\\\"dateFilter\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"fromDatePicker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #fromDatePicker></mat-datepicker>\\n                <mat-error class=\\\"error-msg\\\">\\n                  <span >From Date is Required...!</span>\\n                </mat-error>\\n              </mat-form-field>\\n  \\n            <mat-form-field fxFlex=\\\"20\\\" appearance=\\\"outline\\\">\\n                <mat-label>To Date</mat-label>\\n                <input matInput [matDatepicker]=\\\"toDatePicker\\\" formControlName=\\\"toDate\\\" [matDatepickerFilter]=\\\"dateFilter\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"toDatePicker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #toDatePicker></mat-datepicker>\\n                <mat-error class=\\\"error-msg\\\">\\n                  <span >To Date is Required...!</span>\\n                </mat-error>\\n            </mat-form-field> -->\\n  \\n            <mat-form-field fxFlex=\\\"20\\\" appearance=\\\"outline\\\">\\n              <mat-label>Report Option</mat-label>\\n              <mat-select formControlName=\\\"accopyType\\\" (selectionChange)=\\\"typeChange($event.value)\\\">\\n                <mat-option value=1>Detailed</mat-option>\\n                <mat-option value=2>Product Abstract</mat-option>\\n                <mat-option value=3>Company Abstract</mat-option>\\n              </mat-select>\\n              <mat-error class=\\\"error-msg\\\">\\n                <span >Type is Required...!</span>\\n              </mat-error>\\n            </mat-form-field>\\n\\n            <mat-form-field fxFlex=\\\"20\\\" appearance=\\\"outline\\\">\\n                <mat-label>Include Nill Stocks</mat-label>\\n                <mat-select formControlName=\\\"accopyType\\\" (selectionChange)=\\\"stockOptionChange($event.value)\\\">\\n                  <mat-option value=1>Yes</mat-option>\\n                  <mat-option value=2>No</mat-option>\\n                </mat-select>\\n                <!-- <mat-error class=\\\"error-msg\\\">\\n                  <span >Type is Required...!</span>\\n                </mat-error> -->\\n              </mat-form-field>\\n  \\n            <!-- <mat-form-field fxFlex=\\\"100\\\" appearance=\\\"outline\\\">\\n              <mat-label>Company Option</mat-label>\\n            \\n              <mat-select formControlName=\\\"accId\\\" multiple>\\n                <div class=\\\"search-container\\\">\\n                  <mat-form-field appearance=\\\"fill\\\" class=\\\"search-field\\\">\\n                    <mat-label>Search</mat-label>\\n                    <input matInput (keyup)=\\\"filterOptions($event.target.value)\\\" placeholder=\\\"Type to search\\\">\\n                  </mat-form-field>\\n                </div>\\n                <mat-checkbox [checked]=\\\"isAllSelected\\\" [indeterminate]=\\\"isIndeterminate\\\"\\n                  (change)=\\\"toggleSelectAll($event.checked)\\\">\\n                  Select All\\n                </mat-checkbox>\\n            \\n                <div class=\\\"dropdown-table header\\\">\\n                  <span>Company Name</span>\\n                  <span>Shot Name</span>\\n                  <span>Address1</span>\\n                  <span>Address1</span>\\n                  <span>Group Name</span>\\n                </div>\\n            \\n                <mat-option *ngFor=\\\"let option of filteredOptions\\\" [value]=\\\"option\\\">\\n                  <div class=\\\"dropdown-table row\\\">\\n                    <span>{{ option.compName }}</span>\\n                    <span>{{ option.compShName }}</span>\\n                    <span>{{ option.address1 }}</span>\\n                    <span>{{ option.address2 }}</span>\\n                    <span>{{ option.compGroupName }}</span>\\n                  </div>\\n                </mat-option>\\n              </mat-select>\\n              <mat-error class=\\\"error-msg\\\">\\n                <span >Company option is Required...!</span>\\n              </mat-error>\\n            </mat-form-field> -->\\n            <div fxFlex=\\\"100\\\" class=\\\"mt-1\\\" >\\n              <app-auto-select (outPutEmitter)=\\\"receiveData($event)\\\" [optionsTableDefinition]=\\\"customAccountsOptsTable\\\" [filterKeys]=\\\"filterKeys\\\" [dataSource]=\\\"dropdownOptions\\\"></app-auto-select>\\n            </div>\\n\\n       \\n  \\n            <!-- Buttons -->\\n            <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"16px\\\" class=\\\"button-group\\\">\\n              <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\"  (click)=\\\"generateReport()\\\">Get</button>\\n              <button type=\\\"button\\\" mat-raised-button color=\\\"warn\\\" (click)=\\\"resetForm()\\\">Reset</button>\\n              <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" class=\\\"my-1\\\" (click)=\\\"goback()\\\">Back</button>\\n              <div class=\\\"action-icons\\\" *ngIf=\\\"isShowExcelpdf\\\">\\n                <!-- Excel Export Button -->\\n                <button mat-icon-button (click)=\\\"exportToExcel(stockPositionRepost.value)\\\">\\n                  <img src=\\\"assets/new_xl.png\\\" alt=\\\"Excel\\\" class=\\\"icon-img\\\" />\\n                </button>\\n                \\n          \\n                <!-- PDF Export Button -->\\n                <button mat-icon-button (click)=\\\"exportToPdf()\\\">\\n                  <img src=\\\"assets/new_pdf.png\\\" alt=\\\"PDF\\\" class=\\\"icon-img\\\" />\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n        </form>\\n      </mat-expansion-panel>\\n    </mat-accordion>\\n  </div>\\n\\n  \\n<div class=\\\"mt-2\\\">\\n  <div class=\\\"master-table\\\" id=\\\"table-scroll\\\" *ngIf=\\\"showTable\\\">\\n    <!-- <app-alert [id]=\\\"'dataTableAlertId'\\\"></app-alert> -->\\n    <app-registers-table [dataSource]=\\\"dataSource\\\"></app-registers-table>\\n  </div>\\n</div>\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rpc3RyaWJ1dGlvbi9pbnZlbnRvcnktcmVwb3J0cy9hcmVhLXJlcG9ydHMvYXJlYS1yZXBvcnRzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-area-reports',\n  templateUrl: './area-reports.component.html',\n  styleUrls: ['./area-reports.component.scss']\n})\nexport class AreaReportsComponent implements OnInit {\n  authDetails: any;\n  menuArray: Menu[];\n\n  constructor() { }\n\n  ngOnInit() {\n    // this.authDetails= JSON.parse(localStorage.getItem(\"menuItems\"));\n    // this.menuArray = this.authDetails[4].menus[3].menus;\n    this.authDetails= JSON.parse(localStorage.getItem(\"menuItems\"));\n    this.authDetails.filter(x=>{\n      if(x.menuName == 'Inventory Reports'){\n        var menus = x.menus;\n        menus.filter(y =>{\n          if(y.menuName == 'Area Reports'){\n          this.menuArray = y.menus;\n          }\n        })\n      }\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rpc3RyaWJ1dGlvbi9pbnZlbnRvcnktcmVwb3J0cy9jb21wYW55LXJlcG9ydHMvY29tcGFueS1yZXBvcnRzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-company-reports',\n  templateUrl: './company-reports.component.html',\n  styleUrls: ['./company-reports.component.scss']\n})\nexport class CompanyReportsComponent implements OnInit {\n  authDetails: any;\n  menuArray: Menu[];\n\n  constructor() { }\n\n  ngOnInit() {\n    this.authDetails= JSON.parse(localStorage.getItem(\"menuItems\"));\n    this.authDetails.filter(x=>{\n      if(x.menuName == 'Inventory Reports'){\n        var menus = x.menus;\n        menus.filter(y =>{\n          if(y.menuName == 'Company Reports'){\n          this.menuArray = y.menus;\n          }\n        })\n      }\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { InventoryReportsComponent } from './inventory-reports.component';\nimport { StockReportsComponent } from './stock-reports/stock-reports.component';\nimport { CompanyReportsComponent } from './company-reports/company-reports.component';\nimport { ProductReportsComponent } from './product-reports/product-reports.component';\nimport { AreaReportsComponent } from './area-reports/area-reports.component';\nimport { StockPositionComponent } from './stock-reports/stock-position/stock-position.component';\nimport { StockStatementComponent } from './stock-reports/stock-statement/stock-statement.component';\nimport { StockLedgerComponent } from './stock-reports/stock-ledger/stock-ledger.component';\n\n\nconst routes: Routes = [\n  {path:'', component:InventoryReportsComponent,\n    children:[\n      {path:'stockReports', component:StockReportsComponent},\n      {path:'stockReports/stockStatement', component:StockPositionComponent},\n      {path:'stockReports/stockPosition', component:StockStatementComponent},\n      {path:'stockReports/stockLedger', component:StockLedgerComponent},\n      {path:'companyReports', component:CompanyReportsComponent},\n      {path:'productReports', component:ProductReportsComponent},\n      {path:'areaReports', component:AreaReportsComponent}\n    ]\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class InventoryReportsRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rpc3RyaWJ1dGlvbi9pbnZlbnRvcnktcmVwb3J0cy9pbnZlbnRvcnktcmVwb3J0cy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-inventory-reports',\n  templateUrl: './inventory-reports.component.html',\n  styleUrls: ['./inventory-reports.component.scss']\n})\nexport class InventoryReportsComponent implements OnInit {\n  authDetails: any;\n  menuArray: Menu[];\n\n  constructor(private route:Router) { }\n\n  ngOnInit() {    \n}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { InventoryReportsRoutingModule } from './inventory-reports-routing.module';\nimport { InventoryReportsComponent } from './inventory-reports.component';\nimport { StockReportsComponent } from './stock-reports/stock-reports.component';\nimport { CompanyReportsComponent } from './company-reports/company-reports.component';\nimport { ProductReportsComponent } from './product-reports/product-reports.component';\nimport { AreaReportsComponent } from './area-reports/area-reports.component';\nimport { StockPositionComponent } from './stock-reports/stock-position/stock-position.component';\nimport { StockStatementComponent } from './stock-reports/stock-statement/stock-statement.component';\nimport { StockLedgerComponent } from './stock-reports/stock-ledger/stock-ledger.component';\n\n\n@NgModule({\n  declarations: [InventoryReportsComponent, StockReportsComponent, CompanyReportsComponent, ProductReportsComponent, AreaReportsComponent, StockPositionComponent, StockStatementComponent, StockLedgerComponent],\n  imports: [\n    CommonModule,\n    InventoryReportsRoutingModule,\n    SharedModule\n  ]\n})\nexport class InventoryReportsModule { }\n","import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport ResponseUtils from 'src/app/shared/utils/response-utils';\nimport { InventoryHttpService } from 'src/app/shared/http-services/inventory-reports/inventory-http.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InventoryReportsService {\n\n  constructor(private httpService: InventoryHttpService) { }\n\n  getCompanyList() {\n      return this.httpService.getCompanies().pipe(map(data => {\n        if (ResponseUtils.isStatus200(data) || ResponseUtils.isStatus404(data)) {\n          return ResponseUtils.getPayload(data);\n        }\n        return null;\n      }));\n    }\n    getGroupCompanyList() {\n      return this.httpService.getCompanyGroups().pipe(map(data => {\n        if (ResponseUtils.isStatus200(data) || ResponseUtils.isStatus404(data)) {\n          return ResponseUtils.getPayload(data);\n        }\n        return null;\n      }));\n    }\n\n    getstockStstement(data:any){\n      return this.httpService.getStockStatemt(data).pipe(map(data=>{\n        if (ResponseUtils.isStatus200(data) || ResponseUtils.isStatus404(data)) {\n          return ResponseUtils.getPayload(data);\n        }\n        return null;\n      }))\n    };\n    getstockPosition(data:any){\n      return this.httpService.getStockPosition(data).pipe(map(data=>{\n        if (ResponseUtils.isStatus200(data) || ResponseUtils.isStatus404(data)) {\n          return ResponseUtils.getPayload(data);\n        }\n        return null;\n      }))\n    };\n\n    getstockLedger(data:any){\n      return this.httpService.getStockLedger(data).pipe(map(data=>{\n        if (ResponseUtils.isStatus200(data) || ResponseUtils.isStatus404(data)) {\n          return ResponseUtils.getPayload(data);\n        }\n        return null;\n      }))\n    };\n\n    getproductsList(data:any){\n      return this.httpService.getProducts(data).pipe(map(data=>{\n        if (ResponseUtils.isStatus200(data) || ResponseUtils.isStatus404(data)) {\n          return ResponseUtils.getPayload(data);\n        }\n        return null;\n      }))\n      \n    };\n\n    gettockPositionExcel(data:any){\n      return this.httpService.getStockPositionExcel(data).pipe(map(data=>{\n        if (ResponseUtils.isStatus200(data) || ResponseUtils.isStatus404(data)) {\n          return ResponseUtils.getPayload(data);\n        }\n        return null;\n      }))\n    };\n\n    gettockStatementExcel(data:any){\n      return this.httpService.getStockStatementExcel(data).pipe(map(data=>{\n        if (ResponseUtils.isStatus200(data) || ResponseUtils.isStatus404(data)) {\n          return ResponseUtils.getPayload(data);\n        }\n        return null;\n      }))\n    };\n\n    GetBatchesByProductId(data:any){\n      return this.httpService.GetBatchesByProductId(data).pipe(map(data=>{\n        if(ResponseUtils.isStatus200(data) || ResponseUtils.isStatus404(data)){\n          return ResponseUtils.getPayload(data);\n        }\n        return null;\n      }))\n    }\n\n    GetBatchWiseStockLedger(data:any){\n      return this.httpService.GetBatchWiseStockLedger(data).pipe(map(data=>{\n        if(ResponseUtils.isStatus200(data) || ResponseUtils.isStatus404(data)){\n          return ResponseUtils.getPayload(data);\n        }\n        return null;\n      }))\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rpc3RyaWJ1dGlvbi9pbnZlbnRvcnktcmVwb3J0cy9wcm9kdWN0LXJlcG9ydHMvcHJvZHVjdC1yZXBvcnRzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-product-reports',\n  templateUrl: './product-reports.component.html',\n  styleUrls: ['./product-reports.component.scss']\n})\nexport class ProductReportsComponent implements OnInit {\n  authDetails: any;\n  menuArray: Menu[];\n\n  constructor() { }\n\n  ngOnInit() {\n    this.authDetails= JSON.parse(localStorage.getItem(\"menuItems\"));\n    this.authDetails.filter(x=>{\n      if(x.menuName == 'Inventory Reports'){\n        var menus = x.menus;\n        menus.filter(y =>{\n          if(y.menuName == 'Product Reports'){\n          this.menuArray = y.menus;\n          }\n        })\n      }\n    });\n  }\n\n}\n","export default \".pharmacyHeading {\\n  color: #2f8bbd;\\n  font-size: 24px;\\n  font-family: \\\"Monospace\\\", sans-serif;\\n  font-weight: bold;\\n  margin: 0;\\n  text-align: right;\\n}\\n\\n.pharma-finance {\\n  padding: 16px;\\n}\\n\\n.CashReceiptControls {\\n  width: 100%;\\n}\\n\\nbutton.mat-raised-button {\\n  border-radius: 63px;\\n  min-width: 101px;\\n  height: 48px;\\n  margin: 6px;\\n}\\n\\n.mat-form-field {\\n  width: 100%;\\n}\\n\\n.mat-select-panel {\\n  max-height: 200px;\\n  overflow: auto;\\n}\\n\\n.dropdown-table {\\n  display: grid;\\n  grid-template-columns: 2fr 2fr 3fr 2fr 2fr 2fr;\\n  /* Adjust column widths */\\n  align-items: center;\\n  gap: 16px;\\n  padding: 8px;\\n}\\n\\n.dropdown-table.header {\\n  font-weight: bold;\\n  background-color: #f5f5f5;\\n  border-bottom: 1px solid #ddd;\\n}\\n\\n.dropdown-table.row {\\n  background-color: #fff;\\n  border-bottom: 1px solid #ddd;\\n}\\n\\n.dropdown-table.row:nth-child(even) {\\n  background-color: #fafafa;\\n}\\n\\n.dropdown-table span {\\n  overflow: hidden;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  padding: 4px;\\n}\\n\\nmat-checkbox {\\n  margin: 8px 0;\\n}\\n\\n.search-container {\\n  padding: 8px;\\n}\\n\\n.search-field {\\n  width: 30%;\\n}\\n\\n.action-icons {\\n  display: flex;\\n  justify-content: flex-end;\\n  /* Align icons to the right */\\n  gap: 16px;\\n  /* Space between buttons */\\n  margin-bottom: 8px;\\n  /* Space below the buttons */\\n}\\n\\n.icon-img {\\n  width: 37px;\\n  height: 38px;\\n  -o-object-fit: contain;\\n  object-fit: contain;\\n  margin: 3px;\\n}\\n\\n::ng-deep .ledger_mat .mat-expansion-panel-body {\\n  padding: 14px 16px 24px 16px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGlzdHJpYnV0aW9uL2ludmVudG9yeS1yZXBvcnRzL3N0b2NrLXJlcG9ydHMvc3RvY2stbGVkZ2VyL0M6XFxVc2Vyc1xcVVNFUlxcRG93bmxvYWRzXFxlQnVzaW5lc3MuVWkvc3JjXFxhcHBcXGRpc3RyaWJ1dGlvblxcaW52ZW50b3J5LXJlcG9ydHNcXHN0b2NrLXJlcG9ydHNcXHN0b2NrLWxlZGdlclxcc3RvY2stbGVkZ2VyLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9kaXN0cmlidXRpb24vaW52ZW50b3J5LXJlcG9ydHMvc3RvY2stcmVwb3J0cy9zdG9jay1sZWRnZXIvc3RvY2stbGVkZ2VyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksY0FBQTtFQUNBLGVBQUE7RUFDQSxvQ0FBQTtFQUNBLGlCQUFBO0VBQ0EsU0FBQTtFQUNBLGlCQUFBO0FDQ0o7O0FERUU7RUFDRSxhQUFBO0FDQ0o7O0FERUU7RUFDRSxXQUFBO0FDQ0o7O0FERUU7RUFDRSxtQkFBQTtFQUNBLGdCQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7QUNDSjs7QURFRTtFQUNFLFdBQUE7QUNDSjs7QURFRTtFQUNFLGlCQUFBO0VBQ0EsY0FBQTtBQ0NKOztBREVFO0VBQ0UsYUFBQTtFQUNBLDhDQUFBO0VBQWdELHlCQUFBO0VBQ2hELG1CQUFBO0VBQ0EsU0FBQTtFQUNBLFlBQUE7QUNFSjs7QURDRTtFQUNFLGlCQUFBO0VBQ0EseUJBQUE7RUFDQSw2QkFBQTtBQ0VKOztBRENFO0VBQ0Usc0JBQUE7RUFDQSw2QkFBQTtBQ0VKOztBRENFO0VBQ0UseUJBQUE7QUNFSjs7QURDRTtFQUNFLGdCQUFBO0VBQ0EsbUJBQUE7RUFDQSx1QkFBQTtFQUNBLFlBQUE7QUNFSjs7QURDRTtFQUNFLGFBQUE7QUNFSjs7QURBRTtFQUNFLFlBQUE7QUNHSjs7QURBRTtFQUNFLFVBQUE7QUNHSjs7QURERTtFQUNFLGFBQUE7RUFDQSx5QkFBQTtFQUEyQiw2QkFBQTtFQUMzQixTQUFBO0VBQVcsMEJBQUE7RUFDWCxrQkFBQTtFQUFvQiw0QkFBQTtBQ094Qjs7QURKRTtFQUNFLFdBQUE7RUFDQSxZQUFBO0VBQ0Esc0JBQUE7RUFDQSxtQkFBQTtFQUNBLFdBQUE7QUNPSjs7QURKRTtFQUNFLDRCQUFBO0FDT0oiLCJmaWxlIjoic3JjL2FwcC9kaXN0cmlidXRpb24vaW52ZW50b3J5LXJlcG9ydHMvc3RvY2stcmVwb3J0cy9zdG9jay1sZWRnZXIvc3RvY2stbGVkZ2VyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnBoYXJtYWN5SGVhZGluZyB7XG4gICAgY29sb3I6ICMyZjhiYmQ7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIGZvbnQtZmFtaWx5OiAnTW9ub3NwYWNlJywgc2Fucy1zZXJpZjtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBtYXJnaW46IDA7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gIH1cbiAgXG4gIC5waGFybWEtZmluYW5jZSB7XG4gICAgcGFkZGluZzogMTZweDtcbiAgfVxuICBcbiAgLkNhc2hSZWNlaXB0Q29udHJvbHMge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIFxuICBidXR0b24ubWF0LXJhaXNlZC1idXR0b24ge1xuICAgIGJvcmRlci1yYWRpdXM6IDYzcHg7XG4gICAgbWluLXdpZHRoOiAxMDFweDtcbiAgICBoZWlnaHQ6IDQ4cHg7XG4gICAgbWFyZ2luOiA2cHhcbiAgfVxuICBcbiAgLm1hdC1mb3JtLWZpZWxkIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuICBcbiAgLm1hdC1zZWxlY3QtcGFuZWwge1xuICAgIG1heC1oZWlnaHQ6IDIwMHB4O1xuICAgIG92ZXJmbG93OiBhdXRvO1xuICB9XG4gIFxuICAuZHJvcGRvd24tdGFibGUge1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAyZnIgMmZyIDNmciAyZnIgMmZyIDJmcjsgLyogQWRqdXN0IGNvbHVtbiB3aWR0aHMgKi9cbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGdhcDogMTZweDtcbiAgICBwYWRkaW5nOiA4cHg7XG4gIH1cbiAgXG4gIC5kcm9wZG93bi10YWJsZS5oZWFkZXIge1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjU7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkZGQ7XG4gIH1cbiAgXG4gIC5kcm9wZG93bi10YWJsZS5yb3cge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkZGQ7XG4gIH1cbiAgXG4gIC5kcm9wZG93bi10YWJsZS5yb3c6bnRoLWNoaWxkKGV2ZW4pIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmFmYWZhO1xuICB9XG4gIFxuICAuZHJvcGRvd24tdGFibGUgc3BhbiB7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICAgIHBhZGRpbmc6IDRweDtcbiAgfVxuICBcbiAgbWF0LWNoZWNrYm94IHtcbiAgICBtYXJnaW46IDhweCAwO1xuICB9XG4gIC5zZWFyY2gtY29udGFpbmVyIHtcbiAgICBwYWRkaW5nOiA4cHg7XG4gIH1cbiAgXG4gIC5zZWFyY2gtZmllbGQge1xuICAgIHdpZHRoOiAzMCU7XG4gIH1cbiAgLmFjdGlvbi1pY29ucyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kOyAvKiBBbGlnbiBpY29ucyB0byB0aGUgcmlnaHQgKi9cbiAgICBnYXA6IDE2cHg7IC8qIFNwYWNlIGJldHdlZW4gYnV0dG9ucyAqL1xuICAgIG1hcmdpbi1ib3R0b206IDhweDsgLyogU3BhY2UgYmVsb3cgdGhlIGJ1dHRvbnMgKi9cbiAgfVxuICBcbiAgLmljb24taW1nIHtcbiAgICB3aWR0aDogMzdweDtcbiAgICBoZWlnaHQ6IDM4cHg7XG4gICAgLW8tb2JqZWN0LWZpdDogY29udGFpbjtcbiAgICBvYmplY3QtZml0OiBjb250YWluO1xuICAgIG1hcmdpbjogM3B4O1xuICB9XG5cbiAgOjpuZy1kZWVwIC5sZWRnZXJfbWF0IC5tYXQtZXhwYW5zaW9uLXBhbmVsLWJvZHkge1xuICAgIHBhZGRpbmc6IDE0cHggMTZweCAyNHB4IDE2cHg7XG4gIH0iLCIucGhhcm1hY3lIZWFkaW5nIHtcbiAgY29sb3I6ICMyZjhiYmQ7XG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgZm9udC1mYW1pbHk6IFwiTW9ub3NwYWNlXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBtYXJnaW46IDA7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuXG4ucGhhcm1hLWZpbmFuY2Uge1xuICBwYWRkaW5nOiAxNnB4O1xufVxuXG4uQ2FzaFJlY2VpcHRDb250cm9scyB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG5idXR0b24ubWF0LXJhaXNlZC1idXR0b24ge1xuICBib3JkZXItcmFkaXVzOiA2M3B4O1xuICBtaW4td2lkdGg6IDEwMXB4O1xuICBoZWlnaHQ6IDQ4cHg7XG4gIG1hcmdpbjogNnB4O1xufVxuXG4ubWF0LWZvcm0tZmllbGQge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLm1hdC1zZWxlY3QtcGFuZWwge1xuICBtYXgtaGVpZ2h0OiAyMDBweDtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi5kcm9wZG93bi10YWJsZSB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMmZyIDJmciAzZnIgMmZyIDJmciAyZnI7XG4gIC8qIEFkanVzdCBjb2x1bW4gd2lkdGhzICovXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGdhcDogMTZweDtcbiAgcGFkZGluZzogOHB4O1xufVxuXG4uZHJvcGRvd24tdGFibGUuaGVhZGVyIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjU7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGRkO1xufVxuXG4uZHJvcGRvd24tdGFibGUucm93IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkZGQ7XG59XG5cbi5kcm9wZG93bi10YWJsZS5yb3c6bnRoLWNoaWxkKGV2ZW4pIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZhZmFmYTtcbn1cblxuLmRyb3Bkb3duLXRhYmxlIHNwYW4ge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgcGFkZGluZzogNHB4O1xufVxuXG5tYXQtY2hlY2tib3gge1xuICBtYXJnaW46IDhweCAwO1xufVxuXG4uc2VhcmNoLWNvbnRhaW5lciB7XG4gIHBhZGRpbmc6IDhweDtcbn1cblxuLnNlYXJjaC1maWVsZCB7XG4gIHdpZHRoOiAzMCU7XG59XG5cbi5hY3Rpb24taWNvbnMge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICAvKiBBbGlnbiBpY29ucyB0byB0aGUgcmlnaHQgKi9cbiAgZ2FwOiAxNnB4O1xuICAvKiBTcGFjZSBiZXR3ZWVuIGJ1dHRvbnMgKi9cbiAgbWFyZ2luLWJvdHRvbTogOHB4O1xuICAvKiBTcGFjZSBiZWxvdyB0aGUgYnV0dG9ucyAqL1xufVxuXG4uaWNvbi1pbWcge1xuICB3aWR0aDogMzdweDtcbiAgaGVpZ2h0OiAzOHB4O1xuICAtby1vYmplY3QtZml0OiBjb250YWluO1xuICBvYmplY3QtZml0OiBjb250YWluO1xuICBtYXJnaW46IDNweDtcbn1cblxuOjpuZy1kZWVwIC5sZWRnZXJfbWF0IC5tYXQtZXhwYW5zaW9uLXBhbmVsLWJvZHkge1xuICBwYWRkaW5nOiAxNHB4IDE2cHggMjRweCAxNnB4O1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\n// import { FinanceReportsService } from '../finance-reports.service';\nimport { Router } from '@angular/router';\nimport { InventoryReportsService } from '../../inventory-reports.service';\nimport { DatePipe } from '@angular/common';\nimport { AppConst, PurchasePrefix } from 'src/app/shared/app-constants';\nimport { OptionsTableDefinition } from 'src/app/shared/components/auto-select/auto-select.component';\nimport { AutoCompleteDefinition } from 'src/app/shared/components/autocomplete/autocomplete.component';\nimport { InwardService } from 'src/app/distribution/in-ward/in-ward.service';\nimport { of } from 'rxjs';\n\n@Component({\n  selector: 'app-stock-ledger',\n  templateUrl: './stock-ledger.component.html',\n  styleUrls: ['./stock-ledger.component.scss']\n})\nexport class StockLedgerComponent implements OnInit {\n    stockLedgerRepost: FormGroup;\n    step: number = 0;\n    accountSelectionControl: FormControl;\n    dropdownOptions:any=[];\n    proddropdown:any=[];\n    filteredOptions:any=[];\n    groupFilteredOptions:any=[];\n    showAutoCompleteData:boolean = false;\n    // Updated with additional columns\n    // dropdownOptions = [\n    //   { id: 1, name: 'Account A', address: '123 Main St', city: 'New York', state: 'NY' },\n    //   { id: 2, name: 'Account B', address: '456 Elm St', city: 'Los Angeles', state: 'CA' },\n    //   { id: 3, name: 'Account C', address: '789 Oak St', city: 'Chicago', state: 'IL' },\n    //   { id: 4, name: 'Account D', address: '101 Pine St', city: 'Houston', state: 'TX' }\n    // ];\n    // dropdownOptions = [\n    //   { id: 1, name: 'A', address: '1', city: 'N', state: 'N' },\n    //   { id: 2, name: 'B', address: '4', city: 'L', state: 'C' },\n    //   ...\n    // ];\n  \n    isAllSelected = false;\n    isIndeterminate = false;\n    financialYearStart: Date;\n    financialYearEnd: Date;\n    today: string;\n    showTable: boolean = false;\n    dataSource: any;\n    ProductName = new FormControl('');\n\n    customProductAutoCompleteDef:  AutoCompleteDefinition = {\n      label:  'Product Name',\n      isRequired:  true,\n      dataSourceFn:  (name) => this.showAutoComplete(name),\n      minCount:  2,\n      keyString:  'prodName'\n    };\n  batches: any;\n  batchewisestock: any;\n  batchWise: boolean = false;\n\n    constructor(private fb: FormBuilder, private router:Router,private StockRepService:InventoryReportsService,public datepipe: DatePipe,\n    private inwardService:  InwardService,) {\n      this.today = new Date().toISOString().split('T')[0];\n      this.stockLedgerRepost = this.fb.group({\n        fromDate: [this.today, Validators.required],\n        toDate: [this.today, Validators.required],\n        accopyType: [''],\n        accId:[[], Validators.required],\n        // prodId:  [''],\n        compId:  [0],\n      });\n    }\n  \n    customProductOptsTable:  OptionsTableDefinition = {\n        panelWidth:  900,\n        columns:  [\n          { name:  'Product Name', value:  (obj) => obj['prodName'] ? obj['prodName'] :  '', fxFlex:  20,fxFlex1:20, isKeyColumn:  true },\n          { name:  'Product Pack', value:  (obj) => obj['prodPackName'] ? obj['prodPackName'] :  '', fxFlex:  16 , fxFlex1:16},\n          { name:  'HSN Code', value:  (obj) => obj['hsncode'] ? obj['hsncode'] :  '', fxFlex:  16, fxFlex1:16 },\n          { name:  'Tax%', value:  (obj) => obj['tax'] ? obj['tax']:  '', fxFlex:  16, fxFlex1:16 },\n          { name:  'Sh.Name', value:  (obj) => obj['prodShName'] ? obj['prodShName'] :  '', fxFlex:  16,fxFlex1:16 },\n          { name:  'CompanyName', value:  (obj) => obj['compName']? obj['compName'] :  '', fxFlex:  14, fxFlex1:14 }    ]\n      };\n\n    ngOnInit(): void {\n      // this.getCompanies();\n      // this.getCompaniesGroups();\n      this.lowerSearch = \"\"\n      this.getProducts();\n      this.calculateFinancialYearDates();\n      // this.createForm();\n      this.ProductName.valueChanges.subscribe(data=>{\n      // console.log(this.stockLedgerRepost.get('prodId').value.prodId);\n      if(this.ProductName.value.prodId > 0){\n        this.GetBatchesByProductId();\n      }\n      if(this.ProductName.value == \"\"){\n        this.batchWise = false;\n      }\n      if(data && this.ProductName.dirty){\n        this.showAutoCompleteData = true;\n      }\n      })\n    }    \n\n    customProductsOptsTable: OptionsTableDefinition = {\n          panelWidth: 800,\n          columns: [\n            {\n              name: 'Select All', value: (obj) => obj[''],\n              fxFlex: 10,\n              fxFlex1: 10\n            },\n            { name: 'Product Name', value: (obj) => obj['prodName'] ? obj['prodName'] : '', fxFlex: 34,fxFlex1:34, isKeyColumn: true },\n            { name: 'Shot Name', value: (obj) => obj['prodShName'] ? obj['prodShName'] : '', fxFlex: 14,fxFlex1:14 },\n            { name: 'Prod PackName', value: (obj) => obj['prodPackName'] ? obj['prodPackName'] : '', fxFlex: 16,fxFlex1:16 },\n            { name: 'Prod GroupName', value: (obj) => obj['prodGroupName'] ? obj['prodGroupName'] : '', fxFlex: 24,fxFlex1:24 },\n            { name: 'Tax', value: (obj) => obj['tax'] ? obj['tax'] : '', fxFlex: 12,fxFlex1:12 },\n            // { name: 'Mobile', value: (obj) => obj['mobile'] ? obj['mobile'] : '', fxFlex: 14,fxFlex1:14},\n          ]\n        };\n\n        prodFilterKeys = ['prodName', 'prodShName', 'prodGroupName'];\n    \n      customAccountsOptsTable: OptionsTableDefinition = {\n        panelWidth: 800,\n        columns: [\n          {\n            name: 'Select All', value: (obj) => obj[''],\n            fxFlex: 10,\n            fxFlex1: 10\n          },\n          { name: 'Company Name', value: (obj) => obj['comp_Name'] ? obj['comp_Name'] : '', fxFlex: 14,fxFlex1:14, isKeyColumn: true },\n          { name: 'Product Name', value: (obj) => obj['prod_Name'] ? obj['prod_Name'] : '', fxFlex: 14,fxFlex1:14 },\n          { name: 'Short Name', value: (obj) => obj['p_Sh_Name'] ? obj['p_Sh_Name'] : '', fxFlex: 14,fxFlex1:14 },\n          { name: 'Product Pack', value: (obj) => obj['prod_Pack'] ? obj['prod_Pack'] : '', fxFlex: 16,fxFlex1:16 },\n          { name: 'Batch', value: (obj) => obj['batch'] ? obj['batch'] : '', fxFlex: 24,fxFlex1:24 },\n          { name: 'Recd.Qty', value: (obj) => obj['recd_Qty'] ? obj['recd_Qty'] : '', fxFlex: 12,fxFlex1:12 },\n          { name: 'Supplier', value: (obj) => obj['supplier'] ? obj['supplier'] : '', fxFlex: 14,fxFlex1:14},\n        ]\n      };\n  \n      filterKeys = ['comp_Name', 'p_Sh_Name', 'prod_Name', 'batch'];\n\n    setStep(index: number): void {\n      this.step = index;\n    }\n    getProducts(){\n     let payload={\n      compId:0,\n      prodName:this.lowerSearch\n      };\n      this.StockRepService.getproductsList(payload).subscribe(res=>{\n        this.proddropdown=res;\n        this.filteredOptions = [...this.dropdownOptions];\n      })\n    };\n    getCompaniesGroups(){\n      this.StockRepService.getGroupCompanyList().subscribe(res=>{\n        this.proddropdown=res;\n        this.groupFilteredOptions = [...this.proddropdown];\n      })\n    };\n  \n    generateReport(): void {\n      // let toDate = this.stockLedgerRepost.value.toDate.split(\"T\")\n      let accId = [];\n       if(this.stockLedgerRepost.value.accId.length > 0){ \n        if(this.stockLedgerRepost.value.accopyType == 1){\n          accId = this.stockLedgerRepost.value.accId.map(item => item.prodId).toString();\n        }\n        else if(this.stockLedgerRepost.value.accopyType == 2){\n          accId = this.stockLedgerRepost.value.accId.map(item => item.compGroupId).toString();\n        }\n       }\n       const payload={\n        // \"stmntOption\": Number(this.stockLedgerRepost.controls.accopyType.value),\n        \"products\": this.selectedProducts ? this.selectedProducts.toString() :\"\",\n        \"fromDate\": this.datepipe.transform(this.stockLedgerRepost.value.fromDate, AppConst.DATE_FORMAT), \n        // this.stockLedgerRepost.value.fromDate,\n        \"toDate\": this.datepipe.transform(this.stockLedgerRepost.value.toDate,AppConst.DATE_FORMAT),\n        \"finSDate\": this.datepipe.transform(this.financialYearStart,AppConst.DATE_FORMAT),\n        \"finEDate\": this.datepipe.transform(this.financialYearEnd,AppConst.DATE_FORMAT)\n      }\n      this.showTable = false;\n  \n      this.StockRepService.getstockLedger(payload).subscribe(res =>{\n        if(res){\n          this.showTable = true;\n          // this.stockLedgerRepost.get('accopyType').setValue([\"0\"]);\n          this.dataSource = JSON.parse(res);\n        }\n      });\n    }\n    lowerSearch:any=\"\";\n    filterOptions(searchValue: string): void {\n       this.lowerSearch = searchValue.toLowerCase();\n      this.filteredOptions = this.dropdownOptions.filter(option => \n        option.compName.toLowerCase().includes(this.lowerSearch) ||\n        option.compShName.toLowerCase().includes(this.lowerSearch) ||\n        option.address1.toLowerCase().includes(this.lowerSearch) ||\n        option.address2.toLowerCase().includes(this.lowerSearch) ||\n        option.compGroupName.toString().includes(this.lowerSearch)\n        );\n    }\n    // GroupfilterOptions(searchValue: string): void {\n    //   const lowerSearch = searchValue.toLowerCase();\n    //   this.groupFilteredOptions = this.groupdropdown.filter(option => \n    //     option.compGroupName.toLowerCase().includes(lowerSearch)\n    //     );\n    // }\n  \n    resetForm(): void {\n      this.stockLedgerRepost.reset();\n      this.dataSource=[];\n      this.ProductName.setValue('');\n      this.batchWise = false;\n      this.showTable = false;\n    }\n    selectedProducts:any;\n    receiveGroupData(data){\n      this.selectedProducts =[];\n     data.forEach(x=>{\n      this.selectedProducts.push(x.prodId);\n     });\n    }\n  \n    toggleSelectAll(checked: boolean): void {\n      if (checked) {\n        this.stockLedgerRepost.get('accId').setValue(this.dropdownOptions);\n      } else {\n        this.stockLedgerRepost.get('accId').setValue([]);\n      }\n      this.updateSelectAllState();\n    }\n    toggleSelectAllgroups(checked: boolean): void {\n      if (checked) {\n        this.stockLedgerRepost.get('accId').setValue(this.proddropdown);\n      } else {\n        this.stockLedgerRepost.get('accId').setValue([]);\n      }\n      this.updateSelectAllgroupState();\n    }\n  \n    onOptionChange(): void {\n      this.updateSelectAllState();\n    }\n  \n    updateSelectAllState(): void {\n      const selectedOptions = this.stockLedgerRepost.get('accId').value || [];\n      this.isAllSelected = selectedOptions.length === this.dropdownOptions.length;\n      this.isIndeterminate =\n        selectedOptions.length > 0 && selectedOptions.length < this.dropdownOptions.length;\n    }\n    updateSelectAllgroupState(): void {\n      const selectedOptions = this.stockLedgerRepost.get('accId').value || [];\n      this.isAllSelected = selectedOptions.length === this.proddropdown.length;\n      this.isIndeterminate =\n        selectedOptions.length > 0 && selectedOptions.length < this.proddropdown.length;\n    }\n  \n    // Calculate the start and end date of the current financial year\n    calculateFinancialYearDates() {\n      const currentDate = new Date();\n      const currentYear = currentDate.getFullYear();\n  \n      // Assuming financial year starts from 1st April and ends on 31st March\n      if (currentDate.getMonth() < 3) {\n        // If current month is before April, use last year's financial year\n        this.financialYearStart = new Date(currentYear - 1, 3, 1); // 1st April of previous year\n        this.financialYearEnd = new Date(currentYear, 2, 31); // 31st March of current year\n      } else {\n        // If current month is from April onwards, use current year's financial year\n        this.financialYearStart = new Date(currentYear, 3, 1); // 1st April of current year\n        this.financialYearEnd = new Date(currentYear + 1, 2, 31); // 31st March of next year\n      }\n    }\n  \n    // Datepicker filter to disable dates outside the financial year\n    dateFilter = (date: Date | null): boolean => {\n      if (!date) return false;\n      return date >= this.financialYearStart && date <= this.financialYearEnd;\n    };\n  \n    typeChange(value){\n        // Based on the condition, set 'name' field required or not\n        const nameControl = this.stockLedgerRepost.get('accId');\n        if (+value == 1) {\n          nameControl.setValue([]);\n          nameControl.setValidators([Validators.required]);  // Set as required\n          this.batchWise = false\n        } else {\n          nameControl.setValue([]);\n          nameControl.clearValidators();  // Remove the required validator\n        }\n  \n        if(+value == 2 ){\n          this.stockLedgerRepost.get('compId').setValue(0)\n        }\n\n         // Always call updateValueAndValidity after changing the validators\n          nameControl.updateValueAndValidity();\n    }\n  \n    goback(){\n      this.router.navigate(['pharma/inventoryReports/stockReports']);\n    }\n\n  showAutoComplete(name){\n    if(this.showAutoCompleteData){\n      return this.inwardService.getCustomProductByName(name,this.stockLedgerRepost.controls.compId.value, PurchasePrefix)\n    }else{\n      return of([])\n    }\n  }\n\n    GetBatchesByProductId(){\n      this.batches = [];\n      const payload = {\n        productId: this.ProductName.value.prodId,\n        finSDate: this.datepipe.transform(this.financialYearStart,AppConst.DATE_FORMAT),\n        finEdate: this.datepipe.transform(this.financialYearEnd,AppConst.DATE_FORMAT)\n      }\n      this.StockRepService.GetBatchesByProductId(payload).subscribe(r=>{\n        if(r){\n          this.batches = r;\n          this.GetBatchWiseStockLedger();\n        }\n      })\n    }\n    \n    GetBatchWiseStockLedger(){\n      this.batchewisestock = [];\n      const payload = {\n        productId: this.ProductName.value.prodId,\n        batches: this.batches.toString(),\n        fromDate: this.datepipe.transform(this.stockLedgerRepost.value.fromDate, AppConst.DATE_FORMAT), \n        toDate: this.datepipe.transform(this.stockLedgerRepost.value.toDate,AppConst.DATE_FORMAT),\n        finSDate: this.datepipe.transform(this.financialYearStart,AppConst.DATE_FORMAT),\n        finEdate: this.datepipe.transform(this.financialYearEnd,AppConst.DATE_FORMAT)\n      }\n      this.StockRepService.GetBatchWiseStockLedger(payload).subscribe(r=>{\n        if(r){\n          this.batchewisestock = r;\n          this.batchWise = true;\n        }\n      })\n    }\n\n}\n","export default \".pharmacyHeading {\\n  color: #2f8bbd;\\n  font-size: 24px;\\n  font-family: \\\"Monospace\\\", sans-serif;\\n  font-weight: bold;\\n  margin: 0;\\n  text-align: center;\\n}\\n\\n.pharma-finance {\\n  padding: 16px;\\n}\\n\\n.CashReceiptControls {\\n  width: 100%;\\n}\\n\\nbutton.mat-raised-button {\\n  border-radius: 63px;\\n  min-width: 101px;\\n  height: 48px;\\n  margin: 6px;\\n}\\n\\n.mat-form-field {\\n  width: 100%;\\n}\\n\\n.dropdown-table .header {\\n  font-weight: bold;\\n  background-color: #006476;\\n  border-bottom: 1px solid #ddd;\\n  color: white;\\n  padding: 0 5px;\\n}\\n\\n.mat_header {\\n  padding-right: 0px !important;\\n  pointer-events: none !important;\\n  cursor: none;\\n  background: #006476;\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: -1px;\\n  z-index: 1;\\n}\\n\\n::ng-deep .mat_header .mat-pseudo-checkbox {\\n  visibility: hidden !important;\\n  pointer-events: none !important;\\n}\\n\\n::ng-deep .mat_header.mat-active {\\n  background: #006476 !important;\\n}\\n\\n.mat_opt {\\n  padding-right: 0 !important;\\n}\\n\\n.mat_option {\\n  overflow: hidden;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  padding: 0 5px;\\n}\\n\\nmat-checkbox {\\n  margin: 8px 0;\\n}\\n\\n::ng-deep .account_mat .mat-expansion-panel-body {\\n  padding: 14px 16px 24px 16px;\\n}\\n\\n::ng-deep .account_select {\\n  max-height: unset !important;\\n}\\n\\n::ng-deep .account_search .mat-form-field-flex {\\n  padding-top: 11px !important;\\n  padding-bottom: 0px !important;\\n}\\n\\n::ng-deep .account_search .mat-form-field-label-wrapper {\\n  top: -1.1em !important;\\n}\\n\\n::ng-deep .mat_checkbox label {\\n  margin-bottom: 0;\\n}\\n\\n@media screen and (max-width: 1200px) {\\n  .mat_opt, .mat_header, .mat_option {\\n    line-height: unset !important;\\n    height: unset !important;\\n    white-space: normal !important;\\n    -webkit-text-emphasis: unset !important;\\n            text-emphasis: unset !important;\\n    overflow: unset !important;\\n    word-wrap: break-word;\\n  }\\n}\\n\\n.action-icons {\\n  display: flex;\\n  justify-content: flex-end;\\n  /* Align icons to the right */\\n  gap: 16px;\\n  /* Space between buttons */\\n  margin-bottom: 8px;\\n  /* Space below the buttons */\\n}\\n\\n.icon-img {\\n  width: 37px;\\n  height: 38px;\\n  -o-object-fit: contain;\\n  object-fit: contain;\\n  margin: 3px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGlzdHJpYnV0aW9uL2ludmVudG9yeS1yZXBvcnRzL3N0b2NrLXJlcG9ydHMvc3RvY2stcG9zaXRpb24vQzpcXFVzZXJzXFxVU0VSXFxEb3dubG9hZHNcXGVCdXNpbmVzcy5VaS9zcmNcXGFwcFxcZGlzdHJpYnV0aW9uXFxpbnZlbnRvcnktcmVwb3J0c1xcc3RvY2stcmVwb3J0c1xcc3RvY2stcG9zaXRpb25cXHN0b2NrLXBvc2l0aW9uLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9kaXN0cmlidXRpb24vaW52ZW50b3J5LXJlcG9ydHMvc3RvY2stcmVwb3J0cy9zdG9jay1wb3NpdGlvbi9zdG9jay1wb3NpdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQUE7RUFDQSxlQUFBO0VBQ0Esb0NBQUE7RUFDQSxpQkFBQTtFQUNBLFNBQUE7RUFDQSxrQkFBQTtBQ0NGOztBREVBO0VBQ0UsYUFBQTtBQ0NGOztBREVBO0VBQ0UsV0FBQTtBQ0NGOztBREVBO0VBQ0UsbUJBQUE7RUFDQSxnQkFBQTtFQUNBLFlBQUE7RUFDQSxXQUFBO0FDQ0Y7O0FERUE7RUFDRSxXQUFBO0FDQ0Y7O0FERUE7RUFDRSxpQkFBQTtFQUNBLHlCQUFBO0VBQ0EsNkJBQUE7RUFDQSxZQUFBO0VBQ0EsY0FBQTtBQ0NGOztBREVBO0VBQ0UsNkJBQUE7RUFDQSwrQkFBQTtFQUNBLFlBQUE7RUFDQSxtQkFBQTtFQUNBLHdCQUFBO0VBQUEsZ0JBQUE7RUFDQSxTQUFBO0VBQ0EsVUFBQTtBQ0NGOztBREVBO0VBQ0UsNkJBQUE7RUFDQSwrQkFBQTtBQ0NGOztBREVBO0VBQ0UsOEJBQUE7QUNDRjs7QURFQTtFQUNFLDJCQUFBO0FDQ0Y7O0FERUE7RUFDRSxnQkFBQTtFQUNBLG1CQUFBO0VBQ0EsdUJBQUE7RUFDQSxjQUFBO0FDQ0Y7O0FERUE7RUFDRSxhQUFBO0FDQ0Y7O0FERUE7RUFDRSw0QkFBQTtBQ0NGOztBREVBO0VBQ0ksNEJBQUE7QUNDSjs7QURFQTtFQUNFLDRCQUFBO0VBQ0EsOEJBQUE7QUNDRjs7QURFQTtFQUNFLHNCQUFBO0FDQ0Y7O0FER0E7RUFDRSxnQkFBQTtBQ0FGOztBREdBO0VBQ0E7SUFDRSw2QkFBQTtJQUNBLHdCQUFBO0lBQ0EsOEJBQUE7SUFDQSx1Q0FBQTtZQUFBLCtCQUFBO0lBQ0EsMEJBQUE7SUFDQSxxQkFBQTtFQ0FBO0FBQ0Y7O0FERUE7RUFDRSxhQUFBO0VBQ0EseUJBQUE7RUFBMkIsNkJBQUE7RUFDM0IsU0FBQTtFQUFXLDBCQUFBO0VBQ1gsa0JBQUE7RUFBb0IsNEJBQUE7QUNHdEI7O0FEQUE7RUFDRSxXQUFBO0VBQ0EsWUFBQTtFQUNBLHNCQUFBO0VBQ0EsbUJBQUE7RUFDQSxXQUFBO0FDR0YiLCJmaWxlIjoic3JjL2FwcC9kaXN0cmlidXRpb24vaW52ZW50b3J5LXJlcG9ydHMvc3RvY2stcmVwb3J0cy9zdG9jay1wb3NpdGlvbi9zdG9jay1wb3NpdGlvbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5waGFybWFjeUhlYWRpbmcge1xuICBjb2xvcjogIzJmOGJiZDtcbiAgZm9udC1zaXplOiAyNHB4O1xuICBmb250LWZhbWlseTogJ01vbm9zcGFjZScsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBtYXJnaW46IDA7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLnBoYXJtYS1maW5hbmNlIHtcbiAgcGFkZGluZzogMTZweDtcbn1cblxuLkNhc2hSZWNlaXB0Q29udHJvbHMge1xuICB3aWR0aDogMTAwJTtcbn1cblxuYnV0dG9uLm1hdC1yYWlzZWQtYnV0dG9uIHtcbiAgYm9yZGVyLXJhZGl1czogNjNweDtcbiAgbWluLXdpZHRoOiAxMDFweDtcbiAgaGVpZ2h0OiA0OHB4O1xuICBtYXJnaW46IDZweFxufVxuXG4ubWF0LWZvcm0tZmllbGQge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmRyb3Bkb3duLXRhYmxlIC5oZWFkZXIge1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwNjQ3NjtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkZGQ7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgcGFkZGluZzogMCA1cHg7XG59XG5cbi5tYXRfaGVhZGVye1xuICBwYWRkaW5nLXJpZ2h0OiAwcHggIWltcG9ydGFudDtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmUgIWltcG9ydGFudDtcbiAgY3Vyc29yOiBub25lO1xuICBiYWNrZ3JvdW5kOiAjMDA2NDc2O1xuICBwb3NpdGlvbjogc3RpY2t5O1xuICB0b3A6IC0xcHg7XG4gIHotaW5kZXg6IDE7XG59XG5cbjo6bmctZGVlcCAubWF0X2hlYWRlciAubWF0LXBzZXVkby1jaGVja2JveHtcbiAgdmlzaWJpbGl0eTogaGlkZGVuICFpbXBvcnRhbnQ7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lICFpbXBvcnRhbnQ7XG59XG5cbjo6bmctZGVlcCAubWF0X2hlYWRlci5tYXQtYWN0aXZlIHtcbiAgYmFja2dyb3VuZDogIzAwNjQ3NiAhaW1wb3J0YW50O1xufVxuXG4ubWF0X29wdHtcbiAgcGFkZGluZy1yaWdodDogMCAhaW1wb3J0YW50O1xufVxuXG4ubWF0X29wdGlvbiB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICBwYWRkaW5nOiAwIDVweDtcbn1cblxubWF0LWNoZWNrYm94IHtcbiAgbWFyZ2luOiA4cHggMDtcbn1cblxuOjpuZy1kZWVwIC5hY2NvdW50X21hdCAubWF0LWV4cGFuc2lvbi1wYW5lbC1ib2R5IHtcbiAgcGFkZGluZzogMTRweCAxNnB4IDI0cHggMTZweDtcbn1cblxuOjpuZy1kZWVwIC5hY2NvdW50X3NlbGVjdCB7XG4gICAgbWF4LWhlaWdodDogdW5zZXQgIWltcG9ydGFudDtcbn1cblxuOjpuZy1kZWVwIC5hY2NvdW50X3NlYXJjaCAubWF0LWZvcm0tZmllbGQtZmxleCB7XG4gIHBhZGRpbmctdG9wOiAxMXB4ICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmctYm90dG9tOiAwcHggIWltcG9ydGFudDtcbn1cblxuOjpuZy1kZWVwIC5hY2NvdW50X3NlYXJjaCAubWF0LWZvcm0tZmllbGQtbGFiZWwtd3JhcHBlciB7XG4gIHRvcDogLTEuMWVtICFpbXBvcnRhbnQ7XG59XG5cblxuOjpuZy1kZWVwIC5tYXRfY2hlY2tib3ggbGFiZWwge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMjAwcHgpIHtcbi5tYXRfb3B0LCAubWF0X2hlYWRlciwgLm1hdF9vcHRpb257XG4gIGxpbmUtaGVpZ2h0OiB1bnNldCAhaW1wb3J0YW50O1xuICBoZWlnaHQ6IHVuc2V0ICFpbXBvcnRhbnQ7XG4gIHdoaXRlLXNwYWNlOiBub3JtYWwgIWltcG9ydGFudDtcbiAgdGV4dC1lbXBoYXNpczogdW5zZXQgIWltcG9ydGFudDtcbiAgb3ZlcmZsb3c6IHVuc2V0ICFpbXBvcnRhbnQ7XG4gIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbn1cbn1cbi5hY3Rpb24taWNvbnMge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kOyAvKiBBbGlnbiBpY29ucyB0byB0aGUgcmlnaHQgKi9cbiAgZ2FwOiAxNnB4OyAvKiBTcGFjZSBiZXR3ZWVuIGJ1dHRvbnMgKi9cbiAgbWFyZ2luLWJvdHRvbTogOHB4OyAvKiBTcGFjZSBiZWxvdyB0aGUgYnV0dG9ucyAqL1xufVxuXG4uaWNvbi1pbWcge1xuICB3aWR0aDogMzdweDtcbiAgaGVpZ2h0OiAzOHB4O1xuICAtby1vYmplY3QtZml0OiBjb250YWluO1xuICBvYmplY3QtZml0OiBjb250YWluO1xuICBtYXJnaW46IDNweDtcbn0iLCIucGhhcm1hY3lIZWFkaW5nIHtcbiAgY29sb3I6ICMyZjhiYmQ7XG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgZm9udC1mYW1pbHk6IFwiTW9ub3NwYWNlXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBtYXJnaW46IDA7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLnBoYXJtYS1maW5hbmNlIHtcbiAgcGFkZGluZzogMTZweDtcbn1cblxuLkNhc2hSZWNlaXB0Q29udHJvbHMge1xuICB3aWR0aDogMTAwJTtcbn1cblxuYnV0dG9uLm1hdC1yYWlzZWQtYnV0dG9uIHtcbiAgYm9yZGVyLXJhZGl1czogNjNweDtcbiAgbWluLXdpZHRoOiAxMDFweDtcbiAgaGVpZ2h0OiA0OHB4O1xuICBtYXJnaW46IDZweDtcbn1cblxuLm1hdC1mb3JtLWZpZWxkIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5kcm9wZG93bi10YWJsZSAuaGVhZGVyIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDY0NzY7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGRkO1xuICBjb2xvcjogd2hpdGU7XG4gIHBhZGRpbmc6IDAgNXB4O1xufVxuXG4ubWF0X2hlYWRlciB7XG4gIHBhZGRpbmctcmlnaHQ6IDBweCAhaW1wb3J0YW50O1xuICBwb2ludGVyLWV2ZW50czogbm9uZSAhaW1wb3J0YW50O1xuICBjdXJzb3I6IG5vbmU7XG4gIGJhY2tncm91bmQ6ICMwMDY0NzY7XG4gIHBvc2l0aW9uOiBzdGlja3k7XG4gIHRvcDogLTFweDtcbiAgei1pbmRleDogMTtcbn1cblxuOjpuZy1kZWVwIC5tYXRfaGVhZGVyIC5tYXQtcHNldWRvLWNoZWNrYm94IHtcbiAgdmlzaWJpbGl0eTogaGlkZGVuICFpbXBvcnRhbnQ7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lICFpbXBvcnRhbnQ7XG59XG5cbjo6bmctZGVlcCAubWF0X2hlYWRlci5tYXQtYWN0aXZlIHtcbiAgYmFja2dyb3VuZDogIzAwNjQ3NiAhaW1wb3J0YW50O1xufVxuXG4ubWF0X29wdCB7XG4gIHBhZGRpbmctcmlnaHQ6IDAgIWltcG9ydGFudDtcbn1cblxuLm1hdF9vcHRpb24ge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgcGFkZGluZzogMCA1cHg7XG59XG5cbm1hdC1jaGVja2JveCB7XG4gIG1hcmdpbjogOHB4IDA7XG59XG5cbjo6bmctZGVlcCAuYWNjb3VudF9tYXQgLm1hdC1leHBhbnNpb24tcGFuZWwtYm9keSB7XG4gIHBhZGRpbmc6IDE0cHggMTZweCAyNHB4IDE2cHg7XG59XG5cbjo6bmctZGVlcCAuYWNjb3VudF9zZWxlY3Qge1xuICBtYXgtaGVpZ2h0OiB1bnNldCAhaW1wb3J0YW50O1xufVxuXG46Om5nLWRlZXAgLmFjY291bnRfc2VhcmNoIC5tYXQtZm9ybS1maWVsZC1mbGV4IHtcbiAgcGFkZGluZy10b3A6IDExcHggIWltcG9ydGFudDtcbiAgcGFkZGluZy1ib3R0b206IDBweCAhaW1wb3J0YW50O1xufVxuXG46Om5nLWRlZXAgLmFjY291bnRfc2VhcmNoIC5tYXQtZm9ybS1maWVsZC1sYWJlbC13cmFwcGVyIHtcbiAgdG9wOiAtMS4xZW0gIWltcG9ydGFudDtcbn1cblxuOjpuZy1kZWVwIC5tYXRfY2hlY2tib3ggbGFiZWwge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMjAwcHgpIHtcbiAgLm1hdF9vcHQsIC5tYXRfaGVhZGVyLCAubWF0X29wdGlvbiB7XG4gICAgbGluZS1oZWlnaHQ6IHVuc2V0ICFpbXBvcnRhbnQ7XG4gICAgaGVpZ2h0OiB1bnNldCAhaW1wb3J0YW50O1xuICAgIHdoaXRlLXNwYWNlOiBub3JtYWwgIWltcG9ydGFudDtcbiAgICB0ZXh0LWVtcGhhc2lzOiB1bnNldCAhaW1wb3J0YW50O1xuICAgIG92ZXJmbG93OiB1bnNldCAhaW1wb3J0YW50O1xuICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbiAgfVxufVxuLmFjdGlvbi1pY29ucyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gIC8qIEFsaWduIGljb25zIHRvIHRoZSByaWdodCAqL1xuICBnYXA6IDE2cHg7XG4gIC8qIFNwYWNlIGJldHdlZW4gYnV0dG9ucyAqL1xuICBtYXJnaW4tYm90dG9tOiA4cHg7XG4gIC8qIFNwYWNlIGJlbG93IHRoZSBidXR0b25zICovXG59XG5cbi5pY29uLWltZyB7XG4gIHdpZHRoOiAzN3B4O1xuICBoZWlnaHQ6IDM4cHg7XG4gIC1vLW9iamVjdC1maXQ6IGNvbnRhaW47XG4gIG9iamVjdC1maXQ6IGNvbnRhaW47XG4gIG1hcmdpbjogM3B4O1xufSJdfQ== */\"","\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\n// import { FinanceReportsService } from '../finance-reports.service';\nimport { Router } from '@angular/router';\nimport { InventoryReportsService } from '../../inventory-reports.service';\nimport { DatePipe } from '@angular/common';\nimport { AppConst } from 'src/app/shared/app-constants';\nimport { OptionsTableDefinition } from 'src/app/shared/components/auto-select/auto-select.component';\n\n@Component({\n  selector: 'app-stock-position',\n  templateUrl: './stock-position.component.html',\n  styleUrls: ['./stock-position.component.scss']\n})\nexport class StockPositionComponent implements OnInit {\n    stockStatementRepost: FormGroup;\n    step: number = 0;\n    accountSelectionControl: FormControl;\n    dropdownOptions:any=[];\n    groupdropdown:any=[];\n    filteredOptions:any=[];\n    groupFilteredOptions:any=[];\n    // Updated with additional columns\n    // dropdownOptions = [\n    //   { id: 1, name: 'Account A', address: '123 Main St', city: 'New York', state: 'NY' },\n    //   { id: 2, name: 'Account B', address: '456 Elm St', city: 'Los Angeles', state: 'CA' },\n    //   { id: 3, name: 'Account C', address: '789 Oak St', city: 'Chicago', state: 'IL' },\n    //   { id: 4, name: 'Account D', address: '101 Pine St', city: 'Houston', state: 'TX' }\n    // ];\n    // dropdownOptions = [\n    //   { id: 1, name: 'A', address: '1', city: 'N', state: 'N' },\n    //   { id: 2, name: 'B', address: '4', city: 'L', state: 'C' },\n    //   ...\n    // ];\n  \n    isAllSelected = false;\n    isIndeterminate = false;\n    financialYearStart: Date;\n    financialYearEnd: Date;\n    today: string;\n    showTable: boolean = false;\n    dataSource: any;\n    isshowExcel:boolean=false;\n  selectedAccounts: any [] = [];\n    constructor(private fb: FormBuilder, private router:Router,private StockRepService:InventoryReportsService,public datepipe: DatePipe\n    ) {\n      this.today = new Date().toISOString().split('T')[0];\n      this.stockStatementRepost = this.fb.group({\n        fromDate: [this.today, Validators.required],\n        toDate: [this.today, Validators.required],\n        accopyType: [''],\n        accId:[[], Validators.required]\n      });\n    }\n  \n    ngOnInit(): void {\n      this.getCompanies();\n      this.getCompaniesGroups();\n      this.calculateFinancialYearDates();\n      // this.createForm();\n      this.stockStatementRepost.get('accId').valueChanges.subscribe((selectedValues) => {\n        if (selectedValues.length > 0) {\n          // Preserve previously selected accounts even after filtering\n          this.selectedAccounts = this.dropdownOptions.filter(account =>\n            selectedValues.some((selected) => selected.compName === account.compName)\n          );\n        //   const commonObjects = this.filteredOptions.filter(person1 =>\n        //     this.selectedAccounts.some(person2 => person2.compId === person1.compId)\n        //   );\n        //   if(svalues.length > 0){\n        //     svalues.forEach(x=>{\n        //       const duplival = this.selectedAccounts.find(y=>y.compId == x.compId);\n        //       if(!duplival){\n        //       this.selectedAccounts.push(x);\n        //       }\n        //     })\n          }\n        //  else {\n        //   this.selectedAccounts = [];\n        // }\n      });\n    }\n\n    customAccountsOptsTable: OptionsTableDefinition = {\n      panelWidth: 800,\n      columns: [\n        {\n          name: 'Select All', value: (obj) => obj[''],\n          fxFlex: 10,\n          fxFlex1: 0\n        },\n        { name: 'Company Name', value: (obj) => obj['compName'] ? obj['compName'] : '', fxFlex: 34,fxFlex1:34, isKeyColumn: true },\n        { name: 'Shot Name', value: (obj) => obj['compShName'] ? obj['compShName'] : '', fxFlex: 14,fxFlex1:14 },\n        { name: 'Address1', value: (obj) => obj['address1'] ? obj['address1'] : '', fxFlex: 16,fxFlex1:16 },\n        { name: 'Address2', value: (obj) => obj['address2'] ? obj['address2'] : '', fxFlex: 24,fxFlex1:24 },\n        { name: 'Company Group Name', value: (obj) => obj['compGroupName'] ? obj['compGroupName'] : '', fxFlex: 12,fxFlex1:12 },\n        // { name: 'Mobile', value: (obj) => obj['mobile'] ? obj['mobile'] : '', fxFlex: 14,fxFlex1:14},\n      ]\n    };\n    filterKeys = ['compName', 'compShName', 'compGroupName'];\n\n    customCmpGroupsOptsTable: OptionsTableDefinition = {\n      panelWidth: 500,\n      columns: [\n        {\n          name: 'Select All', value: (obj) => obj[''],\n          fxFlex: 10,\n          fxFlex1: 0\n        },\n        { name: 'Company Group Name', value: (obj) => obj['compGroupName'] ? obj['compGroupName'] : '', fxFlex: 34,fxFlex1:34, isKeyColumn: true },\n        // { name: 'Shot Name', value: (obj) => obj['compShName'] ? obj['compShName'] : '', fxFlex: 14,fxFlex1:14 },\n        // { name: 'Address1', value: (obj) => obj['address1'] ? obj['address1'] : '', fxFlex: 16,fxFlex1:16 },\n        // { name: 'Address2', value: (obj) => obj['address2'] ? obj['address2'] : '', fxFlex: 24,fxFlex1:24 },\n        // { name: 'Company Group Name', value: (obj) => obj['compGroupName'] ? obj['compGroupName'] : '', fxFlex: 12,fxFlex1:12 },\n        // { name: 'Mobile', value: (obj) => obj['mobile'] ? obj['mobile'] : '', fxFlex: 14,fxFlex1:14},\n      ]\n    };\n    groupfilterKeys = ['compGroupName'];\n    \n    selectedCompanies:any;\n    receiveData(data){\n      this.selectedCompanies =[];\n     data.forEach(x=>{\n      this.selectedCompanies.push(x.compId);\n     });\n    }\n\n    receiveGroupData(data){\n      this.selectedCompanies =[];\n     data.forEach(x=>{\n      this.selectedCompanies.push(x.compGroupId);\n     });\n    }\n    setStep(index: number): void {\n      this.step = index;\n    }\n    getCompanies(){\n      this.StockRepService.getCompanyList().subscribe(res=>{\n        console.log(res);\n        this.dropdownOptions=res;\n        this.filteredOptions = res;\n      })\n    };\n    getCompaniesGroups(){\n      this.StockRepService.getGroupCompanyList().subscribe(res=>{\n        console.log(res);\n        this.groupdropdown=res;\n        this.groupFilteredOptions = [...this.groupdropdown];\n      })\n    };\n    accountType:any;\n    generateReport(): void {\n      console.log('Selected Accounts:', this.stockStatementRepost.value);\n      // let toDate = this.stockStatementRepost.value.toDate.split(\"T\")\n      let accId = [];\n      this.accountType = Number(this.stockStatementRepost.controls.accopyType.value)\n      //  if(this.stockStatementRepost.value.accId.length > 0){ \n      //   if(this.stockStatementRepost.value.accopyType == 1){\n      //     accId = this.stockStatementRepost.value.accId.map(item => item.compId).toString();\n      //   }\n      //   else if(this.stockStatementRepost.value.accopyType == 2){\n      //     accId = this.stockStatementRepost.value.accId.map(item => item.compGroupId).toString();\n      //   }\n      //  }\n\n      const acctype =  +this.stockStatementRepost.get('accopyType').value;\n      if(acctype == 1){\n        if(this.selectedCompanies.length == 0 ){\n          return \n        }\n      }\n       const payload={\n        \"stmntOption\": Number(this.stockStatementRepost.controls.accopyType.value),\n        \"compGrps\":this.selectedCompanies ? this.selectedCompanies.toString() :\"\",\n        \"fromDate\": this.datepipe.transform(this.stockStatementRepost.value.fromDate, AppConst.DATE_FORMAT), \n        // this.stockStatementRepost.value.fromDate,\n        \"toDate\": this.datepipe.transform(this.stockStatementRepost.value.toDate,AppConst.DATE_FORMAT),\n        \"finSDate\": this.datepipe.transform(this.financialYearStart,AppConst.DATE_FORMAT),\n        \"finEDate\": this.datepipe.transform(this.financialYearEnd,AppConst.DATE_FORMAT)\n      }\n      console.log('payload', payload);\n      this.showTable = false;\n  \n      this.StockRepService.getstockStstement(payload).subscribe(res =>{\n        if(res){\n          this.showTable = true;\n          this.isshowExcel = true;\n          this.stockStatementRepost.get('accopyType').setValue([\"0\"]);\n          console.log('res', res);\n          this.dataSource = JSON.parse(res);\n        }\n      });\n    }\n\n    downloadFile(filePath:any) {\n      const link = document.createElement('a');\n      link.href = filePath.resultObject; // The path returned by your API\n      link.download = filePath.resultObject.split('/').pop() || 'download.xlsx'; // Extract filename or use default\n      link.target = '_blank';\n    \n      // Append link to the body\n      document.body.appendChild(link);\n    \n      // Trigger the click\n      link.click();\n    \n      // Remove the link from the DOM\n      document.body.removeChild(link);\n    }\n\n    exportToExcel(data: any) {\n      const payload={\n        \"stmntOption\": this.accountType ? this.accountType:0,\n        \"compGrps\":this.selectedCompanies ? this.selectedCompanies.toString() :\"\",\n        \"fromDate\": this.datepipe.transform(this.stockStatementRepost.value.fromDate, AppConst.DATE_FORMAT), \n        \"toDate\": this.datepipe.transform(this.stockStatementRepost.value.toDate,AppConst.DATE_FORMAT),\n        \"finSDate\": this.datepipe.transform(this.financialYearStart,AppConst.DATE_FORMAT),\n        \"finEDate\": this.datepipe.transform(this.financialYearEnd,AppConst.DATE_FORMAT)\n      }\n  \n      this.StockRepService.gettockStatementExcel(payload).subscribe(\n        (res: any) => {\n          const base64String = res;\n          const fileName = 'StockStatementReport.xlsx'; // Desired file name\n          // Decode Base64 to binary data\n          const binaryData = atob(base64String);\n          const byteNumbers = new Array(binaryData.length);\n          for (let i = 0; i < binaryData.length; i++) {\n            byteNumbers[i] = binaryData.charCodeAt(i);\n          }\n          const byteArray = new Uint8Array(byteNumbers);\n          // Create a Blob from the binary data\n          const blob = new Blob([byteArray], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n          // Create a URL for the Blob\n          const url = window.URL.createObjectURL(blob);\n          // Create an anchor element and trigger the download\n          const anchor = document.createElement('a');\n          anchor.href = url;\n          anchor.download = fileName;\n          anchor.click();\n  \n          // Clean up the URL\n          window.URL.revokeObjectURL(url);\n        },\n        (err) => {\n          console.error('Error generating Excel file:', err);\n        }\n      );\n    }\n  \n    // filterOptions(searchValue: string): void {\n    //   const lowerSearch = searchValue.toLowerCase();\n    //   this.filteredOptions = this.dropdownOptions.filter(option => \n    //     option.compName.toLowerCase().includes(lowerSearch) ||\n    //     option.compShName.toLowerCase().includes(lowerSearch) ||\n    //     option.address1.toLowerCase().includes(lowerSearch) ||\n    //     option.address2.toLowerCase().includes(lowerSearch) ||\n    //     option.compGroupName.toString().includes(lowerSearch)\n    //     );\n    //     const commonObjects = this.filteredOptions.filter(person1 =>\n    //       this.selectedAccounts.some(person2 => person2.compId === person1.compId)\n    //     );\n    //     this.stockStatementRepost.get('accId').setValue(commonObjects);\n    // }\n\n\n    filterOptions(searchValue: string): void {\n      const lowerSearch = searchValue.toLowerCase();\n      this.filteredOptions = this.dropdownOptions.filter(option => {\n        const compName = option.compName ? option.compName.toLowerCase() : '';\n        const compShName = option.compShName ? option.compShName.toLowerCase() : '';\n        const address1 = option.address1 ? option.address1.toLowerCase() : '';\n        const address2 = option.address2 ? option.address2.toLowerCase() : '';\n        const compGroupName = option.compGroupName ? option.compGroupName.toString() : '';\n    \n        return compName.includes(lowerSearch) ||\n               compShName.includes(lowerSearch) ||\n               address1.includes(lowerSearch) ||\n               address2.includes(lowerSearch)||\n               compGroupName.includes(lowerSearch);\n\n      });\n\n    }\n  GroupfilterOptions(searchValue: string): void {\n    const lowerSearch = searchValue.toLowerCase();\n    this.groupFilteredOptions = this.groupdropdown.filter(option => {\n      const cmpGroupname = option.compGroupName ? option.compGroupName.toLowerCase() : '';\n      return cmpGroupname.includes(lowerSearch)\n    }\n    );\n  }\n  \n    resetForm(): void {\n      this.stockStatementRepost.reset();\n      this.dataSource=[];\n    }\n  \n   \n  \n    toggleSelectAll(checked: boolean): void {\n      if (checked) {\n        this.stockStatementRepost.get('accId').setValue(this.dropdownOptions);\n      } else {\n        this.stockStatementRepost.get('accId').setValue([]);\n      }\n      this.updateSelectAllState();\n    }\n    toggleSelectAllgroups(checked: boolean): void {\n      if (checked) {\n        this.stockStatementRepost.get('accId').setValue(this.groupdropdown);\n      } else {\n        this.stockStatementRepost.get('accId').setValue([]);\n      }\n      this.updateSelectAllgroupState();\n    }\n  \n    onOptionChange(): void {\n      this.updateSelectAllState();\n    }\n  \n    updateSelectAllState(): void {\n      const selectedOptions = this.stockStatementRepost.get('accId').value || [];\n      this.isAllSelected = selectedOptions.length === this.dropdownOptions.length;\n      this.isIndeterminate =\n        selectedOptions.length > 0 && selectedOptions.length < this.dropdownOptions.length;\n    }\n    updateSelectAllgroupState(): void {\n      const selectedOptions = this.stockStatementRepost.get('accId').value || [];\n      this.isAllSelected = selectedOptions.length === this.groupdropdown.length;\n      this.isIndeterminate =\n        selectedOptions.length > 0 && selectedOptions.length < this.groupdropdown.length;\n    }\n  \n    // Calculate the start and end date of the current financial year\n    calculateFinancialYearDates() {\n      const currentDate = new Date();\n      const currentYear = currentDate.getFullYear();\n  \n      // Assuming financial year starts from 1st April and ends on 31st March\n      if (currentDate.getMonth() < 3) {\n        // If current month is before April, use last year's financial year\n        this.financialYearStart = new Date(currentYear - 1, 3, 1); // 1st April of previous year\n        this.financialYearEnd = new Date(currentYear, 2, 31); // 31st March of current year\n      } else {\n        // If current month is from April onwards, use current year's financial year\n        this.financialYearStart = new Date(currentYear, 3, 1); // 1st April of current year\n        this.financialYearEnd = new Date(currentYear + 1, 2, 31); // 31st March of next year\n      }\n    }\n  \n    // Datepicker filter to disable dates outside the financial year\n    dateFilter = (date: Date | null): boolean => {\n      if (!date) return false;\n      return date >= this.financialYearStart && date <= this.financialYearEnd;\n    };\n  \n    typeChange(value){\n     console.log(value);\n        // Based on the condition, set 'name' field required or not\n        const nameControl = this.stockStatementRepost.get('accId');\n        if (+value == 1) {\n          nameControl.setValue([]);\n          nameControl.setValidators([Validators.required]);  // Set as required\n        } else {\n          nameControl.setValue([]);\n          nameControl.clearValidators();  // Remove the required validator\n        }\n  \n         // Always call updateValueAndValidity after changing the validators\n          nameControl.updateValueAndValidity();\n    }\n  \n    goback(){\n      this.router.navigate(['pharma/inventoryReports/stockReports']);\n    }\n\n    clearSelectedItems(isChecked: boolean): void {\n      if (isChecked) {\n        // Clear selected items\n        this.stockStatementRepost.get('accId').setValue([]);\n        this.selectedAccounts = [];\n      }\n    }\n  \n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rpc3RyaWJ1dGlvbi9pbnZlbnRvcnktcmVwb3J0cy9zdG9jay1yZXBvcnRzL3N0b2NrLXJlcG9ydHMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-stock-reports',\n  templateUrl: './stock-reports.component.html',\n  styleUrls: ['./stock-reports.component.scss']\n})\nexport class StockReportsComponent implements OnInit {\n  authDetails: any;\n  menuArray: Menu[];\n\n  constructor(private router:Router,) { }\n\n  ngOnInit() {\n    this.authDetails= JSON.parse(localStorage.getItem(\"menuItems\"));\n    this.authDetails.filter(x=>{\n      if(x.menuName == 'Inventory Reports'){\n        var menus = x.menus;\n        menus.filter(y =>{\n          if(y.menuName == 'Stock Reports'){\n          this.menuArray = y.menus;\n          }\n        })\n      }\n    });\n  }\n\n\n  report(data:any){\n    var r  = data.split(\"ebusiness\");\n    r = r[1];\n    console.log(r);\n    this.router.navigate([r]);\n  //   debugger;\n  //  console.log(data);\n  //  this.router.navigate(['.pharma/inventoryReports/stockReports/stockPosition']);\n  }\n\n}\n","export default \".pharmacyHeading {\\n  color: #2f8bbd;\\n  font-size: 24px;\\n  font-family: \\\"Monospace\\\", sans-serif;\\n  font-weight: bold;\\n  margin: 0;\\n  text-align: right;\\n}\\n\\n.pharma-finance {\\n  padding: 16px;\\n}\\n\\n.CashReceiptControls {\\n  width: 100%;\\n}\\n\\nbutton.mat-raised-button {\\n  border-radius: 63px;\\n  min-width: 101px;\\n  height: 48px;\\n  margin: 6px;\\n}\\n\\n.mat-form-field {\\n  width: 100%;\\n}\\n\\n.mat-select-panel {\\n  max-height: 200px;\\n  overflow: auto;\\n}\\n\\n.dropdown-table {\\n  display: grid;\\n  grid-template-columns: 2fr 2fr 3fr 2fr 2fr 2fr;\\n  /* Adjust column widths */\\n  align-items: center;\\n  gap: 16px;\\n  padding: 8px;\\n}\\n\\n.dropdown-table.header {\\n  font-weight: bold;\\n  background-color: #f5f5f5;\\n  border-bottom: 1px solid #ddd;\\n}\\n\\n.dropdown-table.row {\\n  background-color: #fff;\\n  border-bottom: 1px solid #ddd;\\n}\\n\\n.dropdown-table.row:nth-child(even) {\\n  background-color: #fafafa;\\n}\\n\\n.dropdown-table span {\\n  overflow: hidden;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  padding: 4px;\\n}\\n\\nmat-checkbox {\\n  margin: 8px 0;\\n}\\n\\n.search-container {\\n  padding: 8px;\\n}\\n\\n.search-field {\\n  width: 30%;\\n}\\n\\n.action-icons {\\n  display: flex;\\n  justify-content: flex-end;\\n  /* Align icons to the right */\\n  gap: 16px;\\n  /* Space between buttons */\\n  margin-bottom: 8px;\\n  /* Space below the buttons */\\n}\\n\\n.icon-img {\\n  width: 37px;\\n  height: 38px;\\n  -o-object-fit: contain;\\n  object-fit: contain;\\n  margin: 3px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGlzdHJpYnV0aW9uL2ludmVudG9yeS1yZXBvcnRzL3N0b2NrLXJlcG9ydHMvc3RvY2stc3RhdGVtZW50L0M6XFxVc2Vyc1xcVVNFUlxcRG93bmxvYWRzXFxlQnVzaW5lc3MuVWkvc3JjXFxhcHBcXGRpc3RyaWJ1dGlvblxcaW52ZW50b3J5LXJlcG9ydHNcXHN0b2NrLXJlcG9ydHNcXHN0b2NrLXN0YXRlbWVudFxcc3RvY2stc3RhdGVtZW50LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9kaXN0cmlidXRpb24vaW52ZW50b3J5LXJlcG9ydHMvc3RvY2stcmVwb3J0cy9zdG9jay1zdGF0ZW1lbnQvc3RvY2stc3RhdGVtZW50LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksY0FBQTtFQUNBLGVBQUE7RUFDQSxvQ0FBQTtFQUNBLGlCQUFBO0VBQ0EsU0FBQTtFQUNBLGlCQUFBO0FDQ0o7O0FERUU7RUFDRSxhQUFBO0FDQ0o7O0FERUU7RUFDRSxXQUFBO0FDQ0o7O0FERUU7RUFDRSxtQkFBQTtFQUNBLGdCQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7QUNDSjs7QURFRTtFQUNFLFdBQUE7QUNDSjs7QURFRTtFQUNFLGlCQUFBO0VBQ0EsY0FBQTtBQ0NKOztBREVFO0VBQ0UsYUFBQTtFQUNBLDhDQUFBO0VBQWdELHlCQUFBO0VBQ2hELG1CQUFBO0VBQ0EsU0FBQTtFQUNBLFlBQUE7QUNFSjs7QURDRTtFQUNFLGlCQUFBO0VBQ0EseUJBQUE7RUFDQSw2QkFBQTtBQ0VKOztBRENFO0VBQ0Usc0JBQUE7RUFDQSw2QkFBQTtBQ0VKOztBRENFO0VBQ0UseUJBQUE7QUNFSjs7QURDRTtFQUNFLGdCQUFBO0VBQ0EsbUJBQUE7RUFDQSx1QkFBQTtFQUNBLFlBQUE7QUNFSjs7QURDRTtFQUNFLGFBQUE7QUNFSjs7QURBRTtFQUNFLFlBQUE7QUNHSjs7QURBRTtFQUNFLFVBQUE7QUNHSjs7QURERTtFQUNFLGFBQUE7RUFDQSx5QkFBQTtFQUEyQiw2QkFBQTtFQUMzQixTQUFBO0VBQVcsMEJBQUE7RUFDWCxrQkFBQTtFQUFvQiw0QkFBQTtBQ094Qjs7QURKRTtFQUNFLFdBQUE7RUFDQSxZQUFBO0VBQ0Esc0JBQUE7RUFDQSxtQkFBQTtFQUNBLFdBQUE7QUNPSiIsImZpbGUiOiJzcmMvYXBwL2Rpc3RyaWJ1dGlvbi9pbnZlbnRvcnktcmVwb3J0cy9zdG9jay1yZXBvcnRzL3N0b2NrLXN0YXRlbWVudC9zdG9jay1zdGF0ZW1lbnQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucGhhcm1hY3lIZWFkaW5nIHtcbiAgICBjb2xvcjogIzJmOGJiZDtcbiAgICBmb250LXNpemU6IDI0cHg7XG4gICAgZm9udC1mYW1pbHk6ICdNb25vc3BhY2UnLCBzYW5zLXNlcmlmO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIG1hcmdpbjogMDtcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgfVxuICBcbiAgLnBoYXJtYS1maW5hbmNlIHtcbiAgICBwYWRkaW5nOiAxNnB4O1xuICB9XG4gIFxuICAuQ2FzaFJlY2VpcHRDb250cm9scyB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbiAgXG4gIGJ1dHRvbi5tYXQtcmFpc2VkLWJ1dHRvbiB7XG4gICAgYm9yZGVyLXJhZGl1czogNjNweDtcbiAgICBtaW4td2lkdGg6IDEwMXB4O1xuICAgIGhlaWdodDogNDhweDtcbiAgICBtYXJnaW46IDZweFxuICB9XG4gIFxuICAubWF0LWZvcm0tZmllbGQge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIFxuICAubWF0LXNlbGVjdC1wYW5lbCB7XG4gICAgbWF4LWhlaWdodDogMjAwcHg7XG4gICAgb3ZlcmZsb3c6IGF1dG87XG4gIH1cbiAgXG4gIC5kcm9wZG93bi10YWJsZSB7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDJmciAyZnIgM2ZyIDJmciAyZnIgMmZyOyAvKiBBZGp1c3QgY29sdW1uIHdpZHRocyAqL1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgZ2FwOiAxNnB4O1xuICAgIHBhZGRpbmc6IDhweDtcbiAgfVxuICBcbiAgLmRyb3Bkb3duLXRhYmxlLmhlYWRlciB7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjVmNTtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2RkZDtcbiAgfVxuICBcbiAgLmRyb3Bkb3duLXRhYmxlLnJvdyB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2RkZDtcbiAgfVxuICBcbiAgLmRyb3Bkb3duLXRhYmxlLnJvdzpudGgtY2hpbGQoZXZlbikge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmYWZhZmE7XG4gIH1cbiAgXG4gIC5kcm9wZG93bi10YWJsZSBzcGFuIHtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gICAgcGFkZGluZzogNHB4O1xuICB9XG4gIFxuICBtYXQtY2hlY2tib3gge1xuICAgIG1hcmdpbjogOHB4IDA7XG4gIH1cbiAgLnNlYXJjaC1jb250YWluZXIge1xuICAgIHBhZGRpbmc6IDhweDtcbiAgfVxuICBcbiAgLnNlYXJjaC1maWVsZCB7XG4gICAgd2lkdGg6IDMwJTtcbiAgfVxuICAuYWN0aW9uLWljb25zIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7IC8qIEFsaWduIGljb25zIHRvIHRoZSByaWdodCAqL1xuICAgIGdhcDogMTZweDsgLyogU3BhY2UgYmV0d2VlbiBidXR0b25zICovXG4gICAgbWFyZ2luLWJvdHRvbTogOHB4OyAvKiBTcGFjZSBiZWxvdyB0aGUgYnV0dG9ucyAqL1xuICB9XG4gIFxuICAuaWNvbi1pbWcge1xuICAgIHdpZHRoOiAzN3B4O1xuICAgIGhlaWdodDogMzhweDtcbiAgICAtby1vYmplY3QtZml0OiBjb250YWluO1xuICAgIG9iamVjdC1maXQ6IGNvbnRhaW47XG4gICAgbWFyZ2luOiAzcHg7XG4gIH0iLCIucGhhcm1hY3lIZWFkaW5nIHtcbiAgY29sb3I6ICMyZjhiYmQ7XG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgZm9udC1mYW1pbHk6IFwiTW9ub3NwYWNlXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBtYXJnaW46IDA7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuXG4ucGhhcm1hLWZpbmFuY2Uge1xuICBwYWRkaW5nOiAxNnB4O1xufVxuXG4uQ2FzaFJlY2VpcHRDb250cm9scyB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG5idXR0b24ubWF0LXJhaXNlZC1idXR0b24ge1xuICBib3JkZXItcmFkaXVzOiA2M3B4O1xuICBtaW4td2lkdGg6IDEwMXB4O1xuICBoZWlnaHQ6IDQ4cHg7XG4gIG1hcmdpbjogNnB4O1xufVxuXG4ubWF0LWZvcm0tZmllbGQge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLm1hdC1zZWxlY3QtcGFuZWwge1xuICBtYXgtaGVpZ2h0OiAyMDBweDtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi5kcm9wZG93bi10YWJsZSB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMmZyIDJmciAzZnIgMmZyIDJmciAyZnI7XG4gIC8qIEFkanVzdCBjb2x1bW4gd2lkdGhzICovXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGdhcDogMTZweDtcbiAgcGFkZGluZzogOHB4O1xufVxuXG4uZHJvcGRvd24tdGFibGUuaGVhZGVyIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjU7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGRkO1xufVxuXG4uZHJvcGRvd24tdGFibGUucm93IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkZGQ7XG59XG5cbi5kcm9wZG93bi10YWJsZS5yb3c6bnRoLWNoaWxkKGV2ZW4pIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZhZmFmYTtcbn1cblxuLmRyb3Bkb3duLXRhYmxlIHNwYW4ge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgcGFkZGluZzogNHB4O1xufVxuXG5tYXQtY2hlY2tib3gge1xuICBtYXJnaW46IDhweCAwO1xufVxuXG4uc2VhcmNoLWNvbnRhaW5lciB7XG4gIHBhZGRpbmc6IDhweDtcbn1cblxuLnNlYXJjaC1maWVsZCB7XG4gIHdpZHRoOiAzMCU7XG59XG5cbi5hY3Rpb24taWNvbnMge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICAvKiBBbGlnbiBpY29ucyB0byB0aGUgcmlnaHQgKi9cbiAgZ2FwOiAxNnB4O1xuICAvKiBTcGFjZSBiZXR3ZWVuIGJ1dHRvbnMgKi9cbiAgbWFyZ2luLWJvdHRvbTogOHB4O1xuICAvKiBTcGFjZSBiZWxvdyB0aGUgYnV0dG9ucyAqL1xufVxuXG4uaWNvbi1pbWcge1xuICB3aWR0aDogMzdweDtcbiAgaGVpZ2h0OiAzOHB4O1xuICAtby1vYmplY3QtZml0OiBjb250YWluO1xuICBvYmplY3QtZml0OiBjb250YWluO1xuICBtYXJnaW46IDNweDtcbn0iXX0= */\"","\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\n// import { FinanceReportsService } from '../finance-reports.service';\nimport { Router } from '@angular/router';\nimport { InventoryReportsService } from '../../inventory-reports.service';\nimport { DatePipe } from '@angular/common';\nimport { AppConst } from 'src/app/shared/app-constants';\nimport { OptionsTableDefinition } from 'src/app/shared/components/auto-select/auto-select.component';\n@Component({\n  selector: 'app-stock-statement',\n  templateUrl: './stock-statement.component.html',\n  styleUrls: ['./stock-statement.component.scss']\n})\nexport class StockStatementComponent implements OnInit {\n    stockPositionRepost: FormGroup;\n    step: number = 0;\n    accountSelectionControl: FormControl;\n    dropdownOptions:any=[];\n    groupdropdown:any=[];\n    filteredOptions:any=[];\n    groupFilteredOptions:any=[];\n    isAllSelected = false;\n    isIndeterminate = false;\n    financialYearStart: Date;\n    financialYearEnd: Date;\n    today: string;\n    showTable: boolean = false;\n    dataSource: any;\n    isShowExcelpdf:boolean=false;\n    constructor(private fb: FormBuilder, private router:Router,private StockRepService:InventoryReportsService,public datepipe: DatePipe\n    ) {\n      this.today = new Date().toISOString().split('T')[0];\n      this.stockPositionRepost = this.fb.group({\n        fromDate: [this.today, Validators.required],\n        toDate: [this.today, Validators.required],\n        accopyType: [''],\n        accId:[[], Validators.required]\n      });\n    }\n  \n    ngOnInit(): void {\n      this.getCompanies();\n      // this.getCompaniesGroups();\n      this.calculateFinancialYearDates();\n      // this.createForm();\n    }\n\n      customAccountsOptsTable: OptionsTableDefinition = {\n        panelWidth: 800,\n        columns: [\n          {\n            name: 'Select All', value: (obj) => obj[''],\n            fxFlex: 10,\n            fxFlex1: 0\n          },\n          { name: 'Company Name', value: (obj) => obj['compName'] ? obj['compName'] : '', fxFlex: 34,fxFlex1:34, isKeyColumn: true },\n          { name: 'Shot Name', value: (obj) => obj['compShName'] ? obj['compShName'] : '', fxFlex: 14,fxFlex1:14 },\n          { name: 'Address1', value: (obj) => obj['address1'] ? obj['address1'] : '', fxFlex: 16,fxFlex1:16 },\n          { name: 'Address2', value: (obj) => obj['address2'] ? obj['address2'] : '', fxFlex: 24,fxFlex1:24 },\n          { name: 'Company Group Name', value: (obj) => obj['compGroupName'] ? obj['compGroupName'] : '', fxFlex: 12,fxFlex1:12 },\n          // { name: 'Mobile', value: (obj) => obj['mobile'] ? obj['mobile'] : '', fxFlex: 14,fxFlex1:14},\n        ]\n      };\n      filterKeys = ['compName', 'compShName', 'compGroupName'];\n    \n  \n    setStep(index: number): void {\n      this.step = index;\n    }\n    selectedCompanies:any;\n    receiveData(data){\n      this.selectedCompanies =[];\n     data.forEach(x=>{\n      this.selectedCompanies.push(x.compId);\n     });\n    }\n    getCompanies(){\n      this.StockRepService.getCompanyList().subscribe(res=>{\n        console.log(res);\n        this.dropdownOptions=res;\n        // this.filteredOptions = [...this.dropdownOptions];\n      })\n    };\n    getCompaniesGroups(){\n      this.StockRepService.getGroupCompanyList().subscribe(res=>{\n        console.log(res);\n        this.groupdropdown=res;\n        this.groupFilteredOptions = [...this.groupdropdown];\n      })\n    };\n  \n    generateReport(): void {\n      console.log('Selected Companies:', this.stockPositionRepost.value);\n      // let toDate = this.stockPositionRepost.value.toDate.split(\"T\")\n      let accId = [];\n      //  if(this.stockPositionRepost.value.accId.length > 0){ \n      //     accId = this.stockPositionRepost.value.accId.map(item => item.compId).toString();\n      //  }\n       if(this.selectedCompanies.length == 0 ){\n        return \n      }\n       const payload={\n        \"reportOption\": Number(this.stockPositionRepost.controls.accopyType.value),\n        \"companies\": this.selectedCompanies ? this.selectedCompanies.toString() :\"\",\n        // \"fromDate\": this.datepipe.transform(this.stockPositionRepost.value.fromDate, AppConst.DATE_FORMAT), \n        // this.stockPositionRepost.value.fromDate,\n        // \"toDate\": this.datepipe.transform(this.stockPositionRepost.value.toDate,AppConst.DATE_FORMAT),\n        \"finSDate\": this.datepipe.transform(this.financialYearStart,AppConst.DATE_FORMAT),\n        \"finEDate\": this.datepipe.transform(this.financialYearEnd,AppConst.DATE_FORMAT)\n      }\n      console.log('payload', payload);\n      this.showTable = false;\n  \n      this.StockRepService.getstockPosition(payload).subscribe(res =>{\n        if(res){\n          this.showTable = true;\n          this.isShowExcelpdf=true;\n          console.log('res', res);\n          this.dataSource = JSON.parse(res);\n          this.dropdownOptions =[];\n        }\n      });\n    }\n  exportToExcel(data: any) {\n    let reBody = {\n      companies: this.selectedCompanies ? this.selectedCompanies.toString() : \"\",\n      reportOption: Number(this.stockPositionRepost.controls.accopyType.value),\n      finSDate: this.datepipe.transform(this.financialYearStart, AppConst.DATE_FORMAT),\n      finEDate: this.datepipe.transform(this.financialYearEnd, AppConst.DATE_FORMAT)\n    };\n\n    this.StockRepService.gettockPositionExcel(reBody).subscribe(\n      (res: any) => {\n        const base64String = res;\n        const fileName = 'StockPositionReport.xlsx'; // Desired file name\n        // Decode Base64 to binary data\n        const binaryData = atob(base64String);\n        const byteNumbers = new Array(binaryData.length);\n        for (let i = 0; i < binaryData.length; i++) {\n          byteNumbers[i] = binaryData.charCodeAt(i);\n        }\n        const byteArray = new Uint8Array(byteNumbers);\n        // Create a Blob from the binary data\n        const blob = new Blob([byteArray], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n        // Create a URL for the Blob\n        const url = window.URL.createObjectURL(blob);\n        // Create an anchor element and trigger the download\n        const anchor = document.createElement('a');\n        anchor.href = url;\n        anchor.download = fileName;\n        anchor.click();\n\n        // Clean up the URL\n        window.URL.revokeObjectURL(url);\n      },\n      (err) => {\n        console.error('Error generating Excel file:', err);\n      }\n    );\n  }\n\n  exportToPdf(){\n\n  }\n  \n    filterOptions(searchValue: string): void {\n      const lowerSearch = searchValue.toLowerCase();\n\n      this.filteredOptions = this.dropdownOptions.filter(option => {\n        const compName = option.compName ? option.compName.toLowerCase() : '';\n        const compShName = option.compShName ? option.compShName.toLowerCase() : '';\n        const address1 = option.address1 ? option.address1.toLowerCase() : '';\n        const address2 = option.address2 ? option.address2.toLowerCase() : '';\n        const compGroupName = option.compGroupName ? option.compGroupName.toString() : '';\n    \n        return compName.includes(lowerSearch) ||\n               compShName.includes(lowerSearch) ||\n               address1.includes(lowerSearch) ||\n               address2.includes(lowerSearch)||\n               compGroupName.includes(lowerSearch);\n\n      });\n      // this.filteredOptions = this.dropdownOptions.filter(option => \n      //   option.compName.toLowerCase().includes(lowerSearch) ||\n      //   option.compShName.toLowerCase().includes(lowerSearch) ||\n      //   option.address1.toLowerCase().includes(lowerSearch) ||\n      //   option.address2.toLowerCase().includes(lowerSearch) ||\n      //   option.compGroupName.toString().includes(lowerSearch)\n      //   );\n    }\n    GroupfilterOptions(searchValue: string): void {\n      const lowerSearch = searchValue.toLowerCase();\n      this.groupFilteredOptions = this.groupdropdown.filter(option => \n        option.compGroupName.toLowerCase().includes(lowerSearch)\n        );\n    }\n  \n    resetForm(): void {\n      this.stockPositionRepost.reset();\n      this.dataSource=[];\n      this.dropdownOptions = [];\n    }\n  \n   \n  \n    toggleSelectAll(checked: boolean): void {\n      if (checked) {\n        this.stockPositionRepost.get('accId').setValue(this.dropdownOptions);\n      } else {\n        this.stockPositionRepost.get('accId').setValue([]);\n      }\n      this.updateSelectAllState();\n    }\n    toggleSelectAllgroups(checked: boolean): void {\n      if (checked) {\n        this.stockPositionRepost.get('accId').setValue(this.groupdropdown);\n      } else {\n        this.stockPositionRepost.get('accId').setValue([]);\n      }\n      this.updateSelectAllgroupState();\n    }\n  \n    onOptionChange(): void {\n      this.updateSelectAllState();\n    }\n  \n    updateSelectAllState(): void {\n      const selectedOptions = this.stockPositionRepost.get('accId').value || [];\n      this.isAllSelected = selectedOptions.length === this.dropdownOptions.length;\n      this.isIndeterminate =\n        selectedOptions.length > 0 && selectedOptions.length < this.dropdownOptions.length;\n    }\n    updateSelectAllgroupState(): void {\n      const selectedOptions = this.stockPositionRepost.get('accId').value || [];\n      this.isAllSelected = selectedOptions.length === this.groupdropdown.length;\n      this.isIndeterminate =\n        selectedOptions.length > 0 && selectedOptions.length < this.groupdropdown.length;\n    }\n  \n    // Calculate the start and end date of the current financial year\n    calculateFinancialYearDates() {\n      const currentDate = new Date();\n      const currentYear = currentDate.getFullYear();\n  \n      // Assuming financial year starts from 1st April and ends on 31st March\n      if (currentDate.getMonth() < 3) {\n        // If current month is before April, use last year's financial year\n        this.financialYearStart = new Date(currentYear - 1, 3, 1); // 1st April of previous year\n        this.financialYearEnd = new Date(currentYear, 2, 31); // 31st March of current year\n      } else {\n        // If current month is from April onwards, use current year's financial year\n        this.financialYearStart = new Date(currentYear, 3, 1); // 1st April of current year\n        this.financialYearEnd = new Date(currentYear + 1, 2, 31); // 31st March of next year\n      }\n    }\n  \n    // Datepicker filter to disable dates outside the financial year\n    dateFilter = (date: Date | null): boolean => {\n      if (!date) return false;\n      return date >= this.financialYearStart && date <= this.financialYearEnd;\n    };\n  \n    typeChange(value){\n     console.log(value);\n        // Based on the condition, set 'name' field required or not\n        const nameControl = this.stockPositionRepost.get('accId');\n        if (+value == 1) {\n          nameControl.setValue([]);\n          nameControl.setValidators([Validators.required]);  // Set as required\n        } else {\n          nameControl.setValue([]);\n          nameControl.clearValidators();  // Remove the required validator\n        }\n  \n         // Always call updateValueAndValidity after changing the validators\n          nameControl.updateValueAndValidity();\n    }\n  \n    goback(){\n      this.router.navigate(['pharma/inventoryReports/stockReports']);\n    }\n  \n\n\n\n}\n","import { Injectable } from '@angular/core';\n// import { CoreHttpService } from '../core/core-http.service';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { APIConst } from '../../app-constants';\nimport { HttpService } from '../../services/http.service';\nimport { ThrowStmt } from '@angular/compiler';\nimport { platform } from 'os';\n@Injectable({\n  providedIn: 'root'\n})\nexport class InventoryHttpService {\n\n   constructor(private httpService:HttpService) { }\n\n getCompanies(): Observable<any> {\n    return this.httpService.doGet(APIConst.companiesMaster);\n  }\n\n  getCompanyGroups(): Observable<any> {\n    return this.httpService.doGet(APIConst.companiesGroups);\n  }\n\n  getStockStatemt(payload:any):Observable<any>{\n    return this.httpService.doPost(APIConst.stockStatement,payload);\n  }\n\n  getStockPosition(payload:any):Observable<any>{\n    return this.httpService.doPost(APIConst.stockPosition,payload);\n  }\n\n  getStockLedger(payload:any):Observable<any>{\n    return this.httpService.doPost(APIConst.stockLedger, payload);\n  }\n\n  getProducts(payload:any):Observable<any>{\n    return this.httpService.doPost(APIConst.GETCUSTOMPRODUCTS , payload);\n  }\n  getStockPositionExcel(payload:any):Observable<any>{\n   return this.httpService.doPost(APIConst.stockPositionExcel, payload);\n  }\n  getStockStatementExcel(payload:any):Observable<any>{\n    return this.httpService.doPost(APIConst.stockStatementExcel, payload);\n   }\n   GetBatchesByProductId(payload:any):Observable<any>{\n    return this.httpService.doGet(APIConst.batchesByProductId, payload);\n   }\n   GetBatchWiseStockLedger(payload:any):Observable<any>{\n    return this.httpService.doGet(APIConst.batchWiseStockLedger, payload);\n   }\n}\n"],"sourceRoot":"webpack:///"}