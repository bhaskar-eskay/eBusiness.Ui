{"version":3,"sources":["src/app/distribution/inventory-reports/area-reports/area-reports.component.html","src/app/distribution/inventory-reports/company-reports/company-reports.component.html","src/app/distribution/inventory-reports/inventory-reports.component.html","src/app/distribution/inventory-reports/product-reports/product-reports.component.html","src/app/distribution/inventory-reports/stock-reports/stock-ledger/stock-ledger.component.html","src/app/distribution/inventory-reports/stock-reports/stock-position/stock-position.component.html","src/app/distribution/inventory-reports/stock-reports/stock-reports.component.html","src/app/distribution/inventory-reports/stock-reports/stock-statement/stock-statement.component.html","src/app/distribution/inventory-reports/area-reports/area-reports.component.scss","src/app/distribution/inventory-reports/area-reports/area-reports.component.ts","src/app/distribution/inventory-reports/company-reports/company-reports.component.scss","src/app/distribution/inventory-reports/company-reports/company-reports.component.ts","src/app/distribution/inventory-reports/inventory-reports-routing.module.ts","src/app/distribution/inventory-reports/inventory-reports.component.scss","src/app/distribution/inventory-reports/inventory-reports.component.ts","src/app/distribution/inventory-reports/inventory-reports.module.ts","src/app/distribution/inventory-reports/inventory-reports.service.ts","src/app/distribution/inventory-reports/product-reports/product-reports.component.scss","src/app/distribution/inventory-reports/product-reports/product-reports.component.ts","src/app/distribution/inventory-reports/stock-reports/stock-ledger/stock-ledger.component.scss","src/app/distribution/inventory-reports/stock-reports/stock-ledger/stock-ledger.component.ts","src/app/distribution/inventory-reports/stock-reports/stock-position/stock-position.component.scss","src/app/distribution/inventory-reports/stock-reports/stock-position/stock-position.component.ts","src/app/distribution/inventory-reports/stock-reports/stock-reports.component.scss","src/app/distribution/inventory-reports/stock-reports/stock-reports.component.ts","src/app/distribution/inventory-reports/stock-reports/stock-statement/stock-statement.component.scss","src/app/distribution/inventory-reports/stock-reports/stock-statement/stock-statement.component.ts","src/app/shared/http-services/inventory-reports/inventory-http.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"m-5 button-icons\\\">    \\n    \\n    <div class=\\\"row mx-0 mt-3\\\" style=\\\"column-gap: 20px;\\\">\\n\\n        <button class=\\\"btn btn-info p-4 col-md-2 mb-2\\\" *ngFor=\\\"let item of menuArray\\\">\\n    \\n            <div><i class=\\\"bi bi-geo-alt\\\"></i></div>                    \\n            <div class=\\\"text-center\\\" style=\\\"white-space: normal\\\">{{item?.menuName}} </div>\\n\\n        </button>\\n               \\n    \\n    </div>\\n\\n    \\n</div>\"","export default \"<div class=\\\"m-5 button-icons\\\">    \\n    \\n    <div class=\\\"row mx-0 mt-3\\\" style=\\\"column-gap: 20px;\\\">\\n\\n        <button class=\\\"btn btn-info p-4 col-md-2 mb-2\\\" *ngFor=\\\"let item of menuArray\\\">\\n    \\n            <div><i class=\\\"fas fa-arrow-dowbi bi-buildings\\\"></i></div>                    \\n            <div class=\\\"text-center\\\" style=\\\"white-space: normal\\\">{{item?.menuName}} </div>\\n\\n        </button>\\n               \\n    \\n    </div>\\n\\n    \\n</div>\"","export default \"<router-outlet></router-outlet>\"","export default \"<div class=\\\"m-5 button-icons\\\">    \\n    \\n    <div class=\\\"row mx-0 mt-3\\\" style=\\\"column-gap: 20px;\\\">\\n\\n        <button class=\\\"btn btn-info p-4 col-md-2 mb-2\\\" *ngFor=\\\"let item of menuArray\\\">\\n    \\n            <div><i class=\\\"bi bi-box\\\"></i></div>                    \\n            <div class=\\\"text-center\\\" style=\\\"white-space: normal\\\">{{item?.menuName}} </div>\\n\\n        </button>\\n               \\n    \\n    </div>\\n\\n    \\n</div>\"","export default \"<div class=\\\"pharma-finance\\\">\\n    <div class=\\\"heading-container\\\">\\n      <h4 class=\\\"pharmacyHeading\\\" style=\\\"text-align: center;\\\">Stock Ledger</h4>\\n      <!-- please check stock-statement component for stock-position code componenets are interchanged -->\\n    </div>\\n    <br>\\n  \\n    <mat-accordion>\\n      <mat-expansion-panel class=\\\"ledger_mat\\\" [expanded]=\\\"step === 0\\\" (opened)=\\\"setStep(0)\\\" hideToggle>\\n        <!-- [expanded]=\\\"step === 0\\\" -->\\n        <form [formGroup]=\\\"stockLedgerRepost\\\">\\n          <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"16px\\\" class=\\\"CashReceiptControls\\\">\\n            <mat-form-field fxFlex=\\\"20\\\" appearance=\\\"outline\\\" fxFlex.xs=\\\"30\\\" class=\\\"e_mat_date\\\">\\n                <mat-label>From Date</mat-label>\\n                <input matInput [matDatepicker]=\\\"fromDatePicker\\\" formControlName=\\\"fromDate\\\" [matDatepickerFilter]=\\\"dateFilter\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"fromDatePicker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #fromDatePicker></mat-datepicker>\\n                <mat-error class=\\\"error-msg\\\">\\n                  <span >From Date is Required...!</span>\\n                </mat-error>\\n              </mat-form-field>\\n  \\n            <mat-form-field fxFlex=\\\"20\\\" appearance=\\\"outline\\\" fxFlex.xs=\\\"30\\\" class=\\\"e_mat_date\\\">\\n                <mat-label>To Date</mat-label>\\n                <input matInput [matDatepicker]=\\\"toDatePicker\\\" formControlName=\\\"toDate\\\" [matDatepickerFilter]=\\\"dateFilter\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"toDatePicker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #toDatePicker></mat-datepicker>\\n                <mat-error class=\\\"error-msg\\\">\\n                  <span >To Date is Required...!</span>\\n                </mat-error>\\n            </mat-form-field>\\n  \\n            <mat-form-field fxFlex=\\\"20\\\" fxFlex.sm=\\\"28\\\" appearance=\\\"outline\\\">\\n              <mat-label>Report Option</mat-label>\\n              <mat-select formControlName=\\\"accopyType\\\" (selectionChange)=\\\"typeChange($event.value)\\\">\\n                <mat-option value=1>Product Wise</mat-option>\\n                <mat-option value=2>Batch Wise</mat-option>\\n              </mat-select>\\n              <mat-error class=\\\"error-msg\\\">\\n                <span >Type is Required...!</span>\\n              </mat-error>\\n            </mat-form-field>\\n            <div fxFlex=\\\"20\\\" fxFlex.xs=\\\"30\\\" *ngIf=\\\"stockLedgerRepost.get('accopyType')?.value === '2'\\\" >\\n              <!-- <div fxFlex=\\\"20\\\" fxFlex.xs=\\\"30\\\"> -->\\n                <app-autocomplete [definition]=\\\"customProductAutoCompleteDef\\\" [control]=\\\"ProductName\\\"\\n                [optionsTableDefinition]=\\\"customProductOptsTable\\\"></app-autocomplete>\\n              <!-- </div> -->\\n            </div>\\n            <div fxFlex=\\\"100\\\" class=\\\"mt-1\\\" *ngIf=\\\"stockLedgerRepost.get('accopyType')?.value === '1'\\\" >\\n              <app-auto-select (outPutEmitter)=\\\"receiveGroupData($event)\\\" [optionsTableDefinition]=\\\"customProductsOptsTable\\\" [filterKeys]=\\\"prodFilterKeys\\\" [dataSource]=\\\"proddropdown\\\"></app-auto-select>\\n            </div>\\n            <div fxFlex=\\\"100\\\" *ngIf=\\\"batchWise\\\">\\n              <app-auto-select (outPutEmitter)=\\\"receiveGroupData($event)\\\" [optionsTableDefinition]=\\\"customAccountsOptsTable\\\" [filterKeys]=\\\"filterKeys\\\" [dataSource]=\\\"batchewisestock\\\"></app-auto-select>\\n            </div>\\n            <!-- <div fxFlex=\\\"100\\\" class=\\\"mt-1\\\" *ngIf=\\\"stockLedgerRepost.get('accopyType')?.value === '2'\\\" >\\n              <app-auto-select (outPutEmitter)=\\\"receiveGroupData($event)\\\" [optionsTableDefinition]=\\\"customProductsOptsTable\\\" [filterKeys]=\\\"prodFilterKeys\\\" [dataSource]=\\\"proddropdown\\\"></app-auto-select>\\n            </div> -->\\n            <!-- <mat-form-field fxFlex=\\\"100\\\" appearance=\\\"outline\\\" *ngIf=\\\"stockLedgerRepost.get('accopyType')?.value === '1'\\\">\\n              <mat-label> Search with product Name</mat-label>\\n            \\n              <mat-select formControlName=\\\"accId\\\" multiple>\\n                <div class=\\\"search-container\\\">\\n                  <mat-form-field appearance=\\\"fill\\\" class=\\\"search-field\\\">\\n                    <mat-label>Search</mat-label>\\n                    <input matInput (keyup)=\\\"filterOptions($event.target.value)\\\" placeholder=\\\"Type to search\\\">\\n                  </mat-form-field>\\n                </div>\\n                <mat-checkbox [checked]=\\\"isAllSelected\\\" [indeterminate]=\\\"isIndeterminate\\\"\\n                  (change)=\\\"toggleSelectAll($event.checked)\\\">\\n                  Select All\\n                </mat-checkbox>\\n            \\n                <div class=\\\"dropdown-table header\\\">\\n                  <span>Company Name</span>\\n                  <span>Shot Name</span>\\n                  <span>Address1</span>\\n                  <span>Address1</span>\\n                  <span>Group Name</span>\\n                </div>\\n            \\n                <mat-option *ngFor=\\\"let option of filteredOptions\\\" [value]=\\\"option\\\">\\n                  <div class=\\\"dropdown-table row\\\">\\n                    <span>{{ option.compName }}</span>\\n                    <span>{{ option.compShName }}</span>\\n                    <span>{{ option.address1 }}</span>\\n                    <span>{{ option.address2 }}</span>\\n                    <span>{{ option.compGroupName }}</span>\\n                  </div>\\n                </mat-option>\\n              </mat-select>\\n              <mat-error class=\\\"error-msg\\\">\\n                <span >Company option is Required...!</span>\\n              </mat-error>\\n            </mat-form-field> -->\\n\\n            <!-- <mat-form-field fxFlex=\\\"100\\\" appearance=\\\"outline\\\" *ngIf=\\\"stockLedgerRepost.get('accopyType')?.value === '2'\\\">\\n                <mat-label>Company Group Option</mat-label>\\n              \\n                <mat-select formControlName=\\\"accId\\\" multiple>\\n                  <div class=\\\"search-container\\\">\\n                    <mat-form-field appearance=\\\"fill\\\" class=\\\"search-field\\\">\\n                      <mat-label>Search</mat-label>\\n                      <input matInput (keyup)=\\\"GroupfilterOptions($event.target.value)\\\" placeholder=\\\"Type to search\\\">\\n                    </mat-form-field>\\n                  </div>\\n                  <mat-checkbox [checked]=\\\"isAllSelected\\\" [indeterminate]=\\\"isIndeterminate\\\"\\n                    (change)=\\\"toggleSelectAllgroups($event.checked)\\\">\\n                    Select All\\n                  </mat-checkbox>\\n              \\n                  <div class=\\\"dropdown-table header\\\">\\n                    <span>CompanyGroup Name</span>\\n                  </div>\\n              \\n                  <mat-option *ngFor=\\\"let option of groupFilteredOptions\\\" [value]=\\\"option\\\">\\n                    <div class=\\\"dropdown-table row\\\">\\n                      <span>{{ option.compGroupName }}</span>\\n                    </div>\\n                  </mat-option>\\n                </mat-select>\\n                <mat-error class=\\\"error-msg\\\">\\n                  <span >Account option is Required...!</span>\\n                </mat-error>\\n            </mat-form-field> -->\\n  \\n            <!-- Buttons -->\\n          </div>\\n          <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"16px\\\" class=\\\"button-group mt-2 justify-content-end button-group\\\">\\n            <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\"  (click)=\\\"generateReport()\\\">Get</button>\\n            <button type=\\\"button\\\" mat-raised-button color=\\\"warn\\\" (click)=\\\"resetForm()\\\">Reset</button>\\n            <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" class=\\\"my-1\\\" (click)=\\\"goback()\\\">Back</button>\\n            <div class=\\\"action-icons\\\">\\n              <!-- Excel Export Button -->\\n              <button mat-icon-button>\\n                <img src=\\\"assets/new_xl.png\\\" alt=\\\"Excel\\\" class=\\\"icon-img\\\" />\\n              </button>\\n              \\n        \\n              <!-- PDF Export Button -->\\n              <button mat-icon-button >\\n                <img src=\\\"assets/new_pdf.png\\\" alt=\\\"PDF\\\" class=\\\"icon-img\\\" />\\n              </button>\\n            </div>\\n          </div>\\n        </form>\\n      </mat-expansion-panel>\\n    </mat-accordion>\\n  </div>\\n\\n  \\n<div class=\\\"mt-2\\\">\\n  <div class=\\\"master-table\\\" id=\\\"table-scroll\\\" *ngIf=\\\"showTable\\\">\\n    <!-- <app-alert [id]=\\\"'dataTableAlertId'\\\"></app-alert> -->\\n    <app-registers-table [dataSource]=\\\"dataSource\\\"></app-registers-table>\\n  </div>\\n</div>\"","export default \"\\n<div class=\\\"pharma-finance\\\">\\n  <div class=\\\"heading-container\\\">\\n    <h4 class=\\\"pharmacyHeading\\\" style=\\\"text-align: center;\\\">Stock Statement</h4>\\n  </div>\\n  <br>\\n  <!-- Stock Statement code is in stock position component and stock position code is in stock statement component. components are inter changed. -->\\n\\n  <mat-accordion>\\n    <mat-expansion-panel class=\\\"account_mat\\\" [expanded]=\\\"step === 0\\\" (opened)=\\\"setStep(0)\\\" hideToggle>\\n      <!-- [expanded]=\\\"step === 0\\\" -->\\n      <form [formGroup]=\\\"stockStatementRepost\\\">\\n        <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"16px\\\" class=\\\"CashReceiptControls\\\">\\n          <mat-form-field fxFlex=\\\"20\\\" fxFlex.sm=\\\"24\\\" fxFlex.xs=\\\"30\\\" class=\\\"e_mat_date\\\" appearance=\\\"outline\\\">\\n              <mat-label>From Date</mat-label>\\n              <input matInput [matDatepicker]=\\\"fromDatePicker\\\" formControlName=\\\"fromDate\\\" [matDatepickerFilter]=\\\"dateFilter\\\">\\n              <mat-datepicker-toggle matSuffix [for]=\\\"fromDatePicker\\\"></mat-datepicker-toggle>\\n              <mat-datepicker #fromDatePicker></mat-datepicker>\\n              <mat-error class=\\\"error-msg\\\">\\n                <span >From Date is Required...!</span>\\n              </mat-error>\\n            </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"20\\\" fxFlex.sm=\\\"24\\\" fxFlex.xs=\\\"30\\\" class=\\\"e_mat_date\\\" appearance=\\\"outline\\\">\\n              <mat-label>To Date</mat-label>\\n              <input matInput [matDatepicker]=\\\"toDatePicker\\\" formControlName=\\\"toDate\\\" [matDatepickerFilter]=\\\"dateFilter\\\">\\n              <mat-datepicker-toggle matSuffix [for]=\\\"toDatePicker\\\"></mat-datepicker-toggle>\\n              <mat-datepicker #toDatePicker></mat-datepicker>\\n              <mat-error class=\\\"error-msg\\\">\\n                <span >To Date is Required...!</span>\\n              </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlex=\\\"20\\\" fxFlex.xs=\\\"30\\\" fxFlex.sm=\\\"30\\\" appearance=\\\"outline\\\">\\n            <mat-label>Report Option</mat-label>\\n            <mat-select formControlName=\\\"accopyType\\\" (selectionChange)=\\\"typeChange($event.value)\\\">\\n              <mat-option value=1>Companywise</mat-option>\\n              <mat-option value=2>CompanyGroupwise</mat-option>\\n            </mat-select>\\n            <mat-error class=\\\"error-msg\\\">\\n              <span >Type is Required...!</span>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <!-- <mat-form-field fxFlex=\\\"100\\\" class=\\\"mt-2\\\" appearance=\\\"outline\\\" *ngIf=\\\"stockStatementRepost.get('accopyType')?.value === '1'\\\">\\n            <mat-label>Company Option</mat-label>\\n          \\n            <mat-select (selectionChange)=\\\"comp($event)\\\" formControlName=\\\"accId\\\" panelClass=\\\"account_select\\\" multiple>\\n              <mat-select-trigger>\\n                <ng-container *ngIf=\\\"selectedAccounts?.length > 0\\\">\\n                  {{ selectedAccounts[0]?.compName }}\\n                  <span *ngIf=\\\"selectedAccounts.length > 1\\\" class=\\\"example-additional-selection\\\">\\n                    (+{{ selectedAccounts.length - 1 }} {{ selectedAccounts.length === 2 ? 'other' : 'others' }})\\n                  </span>\\n                </ng-container>\\n              </mat-select-trigger>\\n              <div class=\\\"search-container\\\">\\n                <mat-form-field appearance=\\\"fill\\\" class=\\\"search-field mat_date account_search\\\">\\n                  <mat-label>Search</mat-label>\\n                  <input matInput (input)=\\\"filterOptions($event.target.value)\\\" placeholder=\\\"Type to search\\\">\\n                </mat-form-field>\\n              </div>\\n              <mat-checkbox class=\\\"d-block ml-2 mb-0\\\" [checked]=\\\"isAllSelected\\\" [indeterminate]=\\\"isIndeterminate\\\"\\n                (change)=\\\"toggleSelectAll($event.checked)\\\">\\n                Select All\\n              </mat-checkbox>\\n          \\n              <div class=\\\"row mx-0\\\">\\n                <div class=\\\"col-md-12 col-xl-8 pr-0\\\" style=\\\"max-height: 250px;overflow: auto;\\\">\\n                  <mat-option class=\\\"mat_header\\\">\\n                    <div fxLayout=\\\"row\\\" class=\\\"dropdown-table\\\">\\n                      <div fxFlex=\\\"20\\\" class=\\\"header\\\">Company Name</div>\\n                      <div fxFlex=\\\"12\\\" class=\\\"header\\\">Shot Name</div>\\n                      <div fxFlex=\\\"20\\\" class=\\\"header\\\">Address1</div>\\n                      <div fxFlex=\\\"20\\\" class=\\\"header\\\">Address2</div>\\n                      <div fxFlex=\\\"20\\\" class=\\\"header\\\">Group Name</div>\\n                    </div>\\n                  </mat-option>\\n              \\n                  <mat-option class=\\\"mat_opt\\\" *ngFor=\\\"let option of filteredOptions\\\" [value]=\\\"option\\\">\\n                    <div fxLayout=\\\"row\\\">\\n                      <div fxFlex=\\\"20\\\" class=\\\"mat_option\\\" title=\\\"{{ option.compName }}\\\">{{ option.compName }}</div>\\n                      <div fxFlex=\\\"12\\\" class=\\\"mat_option\\\">{{ option.compShName }}</div>\\n                      <div fxFlex=\\\"20\\\" class=\\\"mat_option\\\" title=\\\"{{ option.address1 }}\\\">{{ option.address1 }}</div>\\n                      <div fxFlex=\\\"20\\\" class=\\\"mat_option\\\" title=\\\"{{ option.address2}}\\\">{{ option.address2 }}</div>\\n                      <div fxFlex=\\\"20\\\" class=\\\"mat_option\\\">{{ option.compGroupName }}</div>\\n                    </div>\\n                  </mat-option>\\n                </div>\\n                <div class=\\\"col-md-12 col-xl-4 pr-0\\\" style=\\\"max-height: 250px;overflow: auto;\\\">\\n                  <div class=\\\"m-0 mat_header text-white font-weight-bold p-2\\\">\\n                    <span>Selected List</span>\\n                    <mat-checkbox class=\\\"ml-3 mat_checkbox\\\" (change)=\\\"clearSelectedItems($event.checked)\\\" [checked]=\\\"false\\\"\\n                      style=\\\"pointer-events: auto;\\\">Unselect All</mat-checkbox>\\n                  </div>\\n                  <ul class=\\\"mb-0\\\" *ngIf=\\\"stockStatementRepost.get('accId')?.value.length > 0\\\" >\\n                    <li *ngFor=\\\"let account of stockStatementRepost.get('accId')?.value\\\">{{ account.compName }} ({{ account.accShName }} - {{\\n                      account.cityName\\n                      }})</li>\\n                  </ul>\\n                  <div class=\\\"text-danger font-weight-bold\\\" *ngIf=\\\"stockStatementRepost.get('accId')?.value.length == 0\\\" >\\n                    No company is selected.\\n                  </div>\\n                </div>\\n              </div>\\n            </mat-select>\\n            <mat-error class=\\\"error-msg\\\">\\n              <span >Company option is Required...!</span>\\n            </mat-error>\\n          </mat-form-field> -->\\n          <div fxFlex=\\\"100\\\" class=\\\"mt-1\\\" *ngIf=\\\"stockStatementRepost.get('accopyType')?.value === '1'\\\" >\\n            <app-auto-select (outPutEmitter)=\\\"receiveData($event)\\\" [optionsTableDefinition]=\\\"customAccountsOptsTable\\\" [filterKeys]=\\\"filterKeys\\\" [dataSource]=\\\"dropdownOptions\\\"></app-auto-select>\\n          </div>\\n\\n          <!-- <mat-form-field fxFlex=\\\"100\\\" appearance=\\\"outline\\\" *ngIf=\\\"stockStatementRepost.get('accopyType')?.value === '2'\\\">\\n              <mat-label>Company Group Option</mat-label>\\n            \\n              <mat-select formControlName=\\\"accId\\\" multiple>\\n                <div class=\\\"search-container\\\">\\n                  <mat-form-field appearance=\\\"fill\\\" class=\\\"search-field mat_date\\\">\\n                    <mat-label>Search</mat-label>\\n                    <input matInput (keyup)=\\\"GroupfilterOptions($event.target.value)\\\" placeholder=\\\"Type to search\\\">\\n                  </mat-form-field>\\n                </div>\\n                <mat-checkbox [checked]=\\\"isAllSelected\\\" [indeterminate]=\\\"isIndeterminate\\\"\\n                  (change)=\\\"toggleSelectAllgroups($event.checked)\\\">\\n                  Select All\\n                </mat-checkbox>\\n            \\n                <div class=\\\"mat_header\\\">\\n                  <div class=\\\"header text-white p-2\\\">CompanyGroup Name</div>\\n        \\n                </div>\\n            \\n                <mat-option class=\\\"mat_option\\\" *ngFor=\\\"let option of groupFilteredOptions\\\" [value]=\\\"option\\\">\\n                  <div fxLayout=\\\" row\\\">\\n                    <span class=\\\"mat_opt\\\">{{ option.compGroupName }}</span>\\n                   \\n                  </div>\\n                </mat-option>\\n              </mat-select>\\n              <mat-error class=\\\"error-msg\\\">\\n                <span >Account option is Required...!</span>\\n              </mat-error>\\n            </mat-form-field> -->\\n            <div fxFlex=\\\"100\\\" class=\\\"mt-1\\\" *ngIf=\\\"stockStatementRepost.get('accopyType')?.value === '2'\\\" >\\n              <app-auto-select (outPutEmitter)=\\\"receiveGroupData($event)\\\" [optionsTableDefinition]=\\\"customCmpGroupsOptsTable\\\" [filterKeys]=\\\"groupfilterKeys\\\" [dataSource]=\\\"groupdropdown\\\"></app-auto-select>\\n            </div>\\n          </div>\\n        <!-- Buttons -->\\n        <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"16px\\\" class=\\\"button-group\\\">\\n          <div fxFlex=\\\"100\\\" class=\\\"d-sm-flex justify-content-end\\\">\\n            <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\"\\n              (click)=\\\"generateReport()\\\">Get</button>\\n            <button type=\\\"button\\\" mat-raised-button color=\\\"warn\\\" (click)=\\\"resetForm()\\\">Reset</button>\\n            <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" class=\\\"my-1\\\" (click)=\\\"goback()\\\">Back</button>\\n            <div class=\\\"action-icons\\\" *ngIf=\\\"isshowExcel\\\">\\n              <!-- Excel Export Button -->\\n              <button mat-icon-button  (click)=\\\"exportToExcel(stockStatementRepost.value)\\\">\\n                <img src=\\\"assets/new_xl.png\\\" alt=\\\"Excel\\\" class=\\\"icon-img\\\" />\\n              </button>\\n              \\n        \\n              <!-- PDF Export Button -->\\n              <button mat-icon-button >\\n                <img src=\\\"assets/new_pdf.png\\\" alt=\\\"PDF\\\" class=\\\"icon-img\\\" />\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n      </form>\\n    </mat-expansion-panel>\\n  </mat-accordion>\\n</div>\\n\\n\\n<div class=\\\"mt-2\\\">\\n<div class=\\\"master-table\\\" id=\\\"table-scroll\\\" *ngIf=\\\"showTable\\\">\\n  <!-- <app-alert [id]=\\\"'dataTableAlertId'\\\"></app-alert> -->\\n  <app-registers-table [dataSource]=\\\"dataSource\\\"></app-registers-table>\\n</div>\\n</div>\\n\\n\"","export default \"<div class=\\\"m-5 button-icons\\\">    \\n    \\n    <div class=\\\"row mx-0 mt-3\\\" style=\\\"column-gap: 20px;\\\">\\n\\n        <button (click)=\\\"report(item?.menuPath)\\\" class=\\\"btn btn-info p-4 col-md-2 mb-2\\\" *ngFor=\\\"let item of menuArray\\\">\\n    \\n            <div><i class=\\\"bi bi-file-earmark-bar-graph\\\"></i></div>                    \\n            <div class=\\\"text-center\\\" style=\\\"white-space: normal\\\">{{item?.menuName}} </div>\\n\\n        </button>\\n               \\n    \\n    </div>\\n\\n    \\n</div>\"","export default \"\\n<div class=\\\"pharma-finance\\\">\\n    <div class=\\\"heading-container\\\">\\n      <h4 class=\\\"pharmacyHeading\\\" style=\\\"text-align: center;\\\">Stock Position</h4>\\n<!-- please check stock-position component for stock-statement code componenets are interchanged -->\\n    </div>\\n    <br>\\n  \\n    <mat-accordion>\\n      <mat-expansion-panel class=\\\"pt-3\\\" [expanded]=\\\"step === 0\\\" (opened)=\\\"setStep(0)\\\" hideToggle>\\n        <!-- [expanded]=\\\"step === 0\\\" -->\\n        <form [formGroup]=\\\"stockPositionRepost\\\">\\n          <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"16px\\\" class=\\\"CashReceiptControls\\\">\\n            <!-- <mat-form-field fxFlex=\\\"20\\\" appearance=\\\"outline\\\">\\n                <mat-label>From Date</mat-label>\\n                <input matInput [matDatepicker]=\\\"fromDatePicker\\\" formControlName=\\\"fromDate\\\" [matDatepickerFilter]=\\\"dateFilter\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"fromDatePicker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #fromDatePicker></mat-datepicker>\\n                <mat-error class=\\\"error-msg\\\">\\n                  <span >From Date is Required...!</span>\\n                </mat-error>\\n              </mat-form-field>\\n  \\n            <mat-form-field fxFlex=\\\"20\\\" appearance=\\\"outline\\\">\\n                <mat-label>To Date</mat-label>\\n                <input matInput [matDatepicker]=\\\"toDatePicker\\\" formControlName=\\\"toDate\\\" [matDatepickerFilter]=\\\"dateFilter\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"toDatePicker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #toDatePicker></mat-datepicker>\\n                <mat-error class=\\\"error-msg\\\">\\n                  <span >To Date is Required...!</span>\\n                </mat-error>\\n            </mat-form-field> -->\\n  \\n            <mat-form-field fxFlex=\\\"20\\\" appearance=\\\"outline\\\">\\n              <mat-label>Report Option</mat-label>\\n              <mat-select formControlName=\\\"accopyType\\\" (selectionChange)=\\\"typeChange($event.value)\\\">\\n                <mat-option value=1>Detailed</mat-option>\\n                <mat-option value=2>Product Abstract</mat-option>\\n                <mat-option value=3>Company Abstract</mat-option>\\n              </mat-select>\\n              <mat-error class=\\\"error-msg\\\">\\n                <span >Type is Required...!</span>\\n              </mat-error>\\n            </mat-form-field>\\n\\n            <mat-form-field fxFlex=\\\"20\\\" appearance=\\\"outline\\\">\\n                <mat-label>Include Nill Stocks</mat-label>\\n                <mat-select formControlName=\\\"accopyType\\\" (selectionChange)=\\\"stockOptionChange($event.value)\\\">\\n                  <mat-option value=1>Yes</mat-option>\\n                  <mat-option value=2>No</mat-option>\\n                </mat-select>\\n                <!-- <mat-error class=\\\"error-msg\\\">\\n                  <span >Type is Required...!</span>\\n                </mat-error> -->\\n              </mat-form-field>\\n  \\n            <!-- <mat-form-field fxFlex=\\\"100\\\" appearance=\\\"outline\\\">\\n              <mat-label>Company Option</mat-label>\\n            \\n              <mat-select formControlName=\\\"accId\\\" multiple>\\n                <div class=\\\"search-container\\\">\\n                  <mat-form-field appearance=\\\"fill\\\" class=\\\"search-field\\\">\\n                    <mat-label>Search</mat-label>\\n                    <input matInput (keyup)=\\\"filterOptions($event.target.value)\\\" placeholder=\\\"Type to search\\\">\\n                  </mat-form-field>\\n                </div>\\n                <mat-checkbox [checked]=\\\"isAllSelected\\\" [indeterminate]=\\\"isIndeterminate\\\"\\n                  (change)=\\\"toggleSelectAll($event.checked)\\\">\\n                  Select All\\n                </mat-checkbox>\\n            \\n                <div class=\\\"dropdown-table header\\\">\\n                  <span>Company Name</span>\\n                  <span>Shot Name</span>\\n                  <span>Address1</span>\\n                  <span>Address1</span>\\n                  <span>Group Name</span>\\n                </div>\\n            \\n                <mat-option *ngFor=\\\"let option of filteredOptions\\\" [value]=\\\"option\\\">\\n                  <div class=\\\"dropdown-table row\\\">\\n                    <span>{{ option.compName }}</span>\\n                    <span>{{ option.compShName }}</span>\\n                    <span>{{ option.address1 }}</span>\\n                    <span>{{ option.address2 }}</span>\\n                    <span>{{ option.compGroupName }}</span>\\n                  </div>\\n                </mat-option>\\n              </mat-select>\\n              <mat-error class=\\\"error-msg\\\">\\n                <span >Company option is Required...!</span>\\n              </mat-error>\\n            </mat-form-field> -->\\n            <div fxFlex=\\\"100\\\" class=\\\"mt-1\\\" >\\n              <app-auto-select (outPutEmitter)=\\\"receiveData($event)\\\" [optionsTableDefinition]=\\\"customAccountsOptsTable\\\" [filterKeys]=\\\"filterKeys\\\" [dataSource]=\\\"dropdownOptions\\\"></app-auto-select>\\n            </div>\\n\\n       \\n  \\n            <!-- Buttons -->\\n            <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"16px\\\" class=\\\"button-group\\\">\\n              <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\"  (click)=\\\"generateReport()\\\">Get</button>\\n              <button type=\\\"button\\\" mat-raised-button color=\\\"warn\\\" (click)=\\\"resetForm()\\\">Reset</button>\\n              <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" class=\\\"my-1\\\" (click)=\\\"goback()\\\">Back</button>\\n              <div class=\\\"action-icons\\\" *ngIf=\\\"isShowExcelpdf\\\">\\n                <!-- Excel Export Button -->\\n                <button mat-icon-button (click)=\\\"exportToExcel(stockPositionRepost.value)\\\">\\n                  <img src=\\\"assets/new_xl.png\\\" alt=\\\"Excel\\\" class=\\\"icon-img\\\" />\\n                </button>\\n                \\n          \\n                <!-- PDF Export Button -->\\n                <button mat-icon-button (click)=\\\"exportToPdf()\\\">\\n                  <img src=\\\"assets/new_pdf.png\\\" alt=\\\"PDF\\\" class=\\\"icon-img\\\" />\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n        </form>\\n      </mat-expansion-panel>\\n    </mat-accordion>\\n  </div>\\n\\n  \\n<div class=\\\"mt-2\\\">\\n  <div class=\\\"master-table\\\" id=\\\"table-scroll\\\" *ngIf=\\\"showTable\\\">\\n    <!-- <app-alert [id]=\\\"'dataTableAlertId'\\\"></app-alert> -->\\n    <app-registers-table [dataSource]=\\\"dataSource\\\"></app-registers-table>\\n  </div>\\n</div>\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rpc3RyaWJ1dGlvbi9pbnZlbnRvcnktcmVwb3J0cy9hcmVhLXJlcG9ydHMvYXJlYS1yZXBvcnRzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-area-reports',\n  templateUrl: './area-reports.component.html',\n  styleUrls: ['./area-reports.component.scss']\n})\nexport class AreaReportsComponent implements OnInit {\n  authDetails: any;\n  menuArray: Menu[];\n\n  constructor() { }\n\n  ngOnInit() {\n    // this.authDetails= JSON.parse(localStorage.getItem(\"menuItems\"));\n    // this.menuArray = this.authDetails[4].menus[3].menus;\n    this.authDetails= JSON.parse(localStorage.getItem(\"menuItems\"));\n    this.authDetails.filter(x=>{\n      if(x.menuName == 'Inventory Reports'){\n        var menus = x.menus;\n        menus.filter(y =>{\n          if(y.menuName == 'Area Reports'){\n          this.menuArray = y.menus;\n          }\n        })\n      }\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rpc3RyaWJ1dGlvbi9pbnZlbnRvcnktcmVwb3J0cy9jb21wYW55LXJlcG9ydHMvY29tcGFueS1yZXBvcnRzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-company-reports',\n  templateUrl: './company-reports.component.html',\n  styleUrls: ['./company-reports.component.scss']\n})\nexport class CompanyReportsComponent implements OnInit {\n  authDetails: any;\n  menuArray: Menu[];\n\n  constructor() { }\n\n  ngOnInit() {\n    this.authDetails= JSON.parse(localStorage.getItem(\"menuItems\"));\n    this.authDetails.filter(x=>{\n      if(x.menuName == 'Inventory Reports'){\n        var menus = x.menus;\n        menus.filter(y =>{\n          if(y.menuName == 'Company Reports'){\n          this.menuArray = y.menus;\n          }\n        })\n      }\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { InventoryReportsComponent } from './inventory-reports.component';\nimport { StockReportsComponent } from './stock-reports/stock-reports.component';\nimport { CompanyReportsComponent } from './company-reports/company-reports.component';\nimport { ProductReportsComponent } from './product-reports/product-reports.component';\nimport { AreaReportsComponent } from './area-reports/area-reports.component';\nimport { StockPositionComponent } from './stock-reports/stock-position/stock-position.component';\nimport { StockStatementComponent } from './stock-reports/stock-statement/stock-statement.component';\nimport { StockLedgerComponent } from './stock-reports/stock-ledger/stock-ledger.component';\n\n\nconst routes: Routes = [\n  {path:'', component:InventoryReportsComponent,\n    children:[\n      {path:'stockReports', component:StockReportsComponent},\n      {path:'stockReports/stockStatement', component:StockPositionComponent},\n      {path:'stockReports/stockPosition', component:StockStatementComponent},\n      {path:'stockReports/stockLedger', component:StockLedgerComponent},\n      {path:'companyReports', component:CompanyReportsComponent},\n      {path:'productReports', component:ProductReportsComponent},\n      {path:'areaReports', component:AreaReportsComponent}\n    ]\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class InventoryReportsRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rpc3RyaWJ1dGlvbi9pbnZlbnRvcnktcmVwb3J0cy9pbnZlbnRvcnktcmVwb3J0cy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-inventory-reports',\n  templateUrl: './inventory-reports.component.html',\n  styleUrls: ['./inventory-reports.component.scss']\n})\nexport class InventoryReportsComponent implements OnInit {\n  authDetails: any;\n  menuArray: Menu[];\n\n  constructor(private route:Router) { }\n\n  ngOnInit() {    \n}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { InventoryReportsRoutingModule } from './inventory-reports-routing.module';\nimport { InventoryReportsComponent } from './inventory-reports.component';\nimport { StockReportsComponent } from './stock-reports/stock-reports.component';\nimport { CompanyReportsComponent } from './company-reports/company-reports.component';\nimport { ProductReportsComponent } from './product-reports/product-reports.component';\nimport { AreaReportsComponent } from './area-reports/area-reports.component';\nimport { StockPositionComponent } from './stock-reports/stock-position/stock-position.component';\nimport { StockStatementComponent } from './stock-reports/stock-statement/stock-statement.component';\nimport { StockLedgerComponent } from './stock-reports/stock-ledger/stock-ledger.component';\n\n\n@NgModule({\n  declarations: [InventoryReportsComponent, StockReportsComponent, CompanyReportsComponent, ProductReportsComponent, AreaReportsComponent, StockPositionComponent, StockStatementComponent, StockLedgerComponent],\n  imports: [\n    CommonModule,\n    InventoryReportsRoutingModule,\n    SharedModule\n  ]\n})\nexport class InventoryReportsModule { }\n","import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport ResponseUtils from 'src/app/shared/utils/response-utils';\nimport { InventoryHttpService } from 'src/app/shared/http-services/inventory-reports/inventory-http.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InventoryReportsService {\n\n  constructor(private httpService: InventoryHttpService) { }\n\n  getCompanyList() {\n      return this.httpService.getCompanies().pipe(map(data => {\n        if (ResponseUtils.isStatus200(data) || ResponseUtils.isStatus404(data)) {\n          return ResponseUtils.getPayload(data);\n        }\n        return null;\n      }));\n    }\n    getGroupCompanyList() {\n      return this.httpService.getCompanyGroups().pipe(map(data => {\n        if (ResponseUtils.isStatus200(data) || ResponseUtils.isStatus404(data)) {\n          return ResponseUtils.getPayload(data);\n        }\n        return null;\n      }));\n    }\n\n    getstockStstement(data:any){\n      return this.httpService.getStockStatemt(data).pipe(map(data=>{\n        if (ResponseUtils.isStatus200(data) || ResponseUtils.isStatus404(data)) {\n          return ResponseUtils.getPayload(data);\n        }\n        return null;\n      }))\n    };\n    getstockPosition(data:any){\n      return this.httpService.getStockPosition(data).pipe(map(data=>{\n        if (ResponseUtils.isStatus200(data) || ResponseUtils.isStatus404(data)) {\n          return ResponseUtils.getPayload(data);\n        }\n        return null;\n      }))\n    };\n\n    getstockLedger(data:any){\n      return this.httpService.getStockLedger(data).pipe(map(data=>{\n        if (ResponseUtils.isStatus200(data) || ResponseUtils.isStatus404(data)) {\n          return ResponseUtils.getPayload(data);\n        }\n        return null;\n      }))\n    };\n\n    getproductsList(data:any){\n      return this.httpService.getProducts(data).pipe(map(data=>{\n        if (ResponseUtils.isStatus200(data) || ResponseUtils.isStatus404(data)) {\n          return ResponseUtils.getPayload(data);\n        }\n        return null;\n      }))\n      \n    };\n\n    gettockPositionExcel(data:any){\n      return this.httpService.getStockPositionExcel(data).pipe(map(data=>{\n        if (ResponseUtils.isStatus200(data) || ResponseUtils.isStatus404(data)) {\n          return ResponseUtils.getPayload(data);\n        }\n        return null;\n      }))\n    };\n\n    gettockStatementExcel(data:any){\n      return this.httpService.getStockStatementExcel(data).pipe(map(data=>{\n        if (ResponseUtils.isStatus200(data) || ResponseUtils.isStatus404(data)) {\n          return ResponseUtils.getPayload(data);\n        }\n        return null;\n      }))\n    };\n\n    GetBatchesByProductId(data:any){\n      return this.httpService.GetBatchesByProductId(data).pipe(map(data=>{\n        if(ResponseUtils.isStatus200(data) || ResponseUtils.isStatus404(data)){\n          return ResponseUtils.getPayload(data);\n        }\n        return null;\n      }))\n    }\n\n    GetBatchWiseStockLedger(data:any){\n      return this.httpService.GetBatchWiseStockLedger(data).pipe(map(data=>{\n        if(ResponseUtils.isStatus200(data) || ResponseUtils.isStatus404(data)){\n          return ResponseUtils.getPayload(data);\n        }\n        return null;\n      }))\n    }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rpc3RyaWJ1dGlvbi9pbnZlbnRvcnktcmVwb3J0cy9wcm9kdWN0LXJlcG9ydHMvcHJvZHVjdC1yZXBvcnRzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-product-reports',\n  templateUrl: './product-reports.component.html',\n  styleUrls: ['./product-reports.component.scss']\n})\nexport class ProductReportsComponent implements OnInit {\n  authDetails: any;\n  menuArray: Menu[];\n\n  constructor() { }\n\n  ngOnInit() {\n    this.authDetails= JSON.parse(localStorage.getItem(\"menuItems\"));\n    this.authDetails.filter(x=>{\n      if(x.menuName == 'Inventory Reports'){\n        var menus = x.menus;\n        menus.filter(y =>{\n          if(y.menuName == 'Product Reports'){\n          this.menuArray = y.menus;\n          }\n        })\n      }\n    });\n  }\n\n}\n","export default \".pharmacyHeading {\\n  color: #2f8bbd;\\n  font-size: 24px;\\n  font-family: \\\"Monospace\\\", sans-serif;\\n  font-weight: bold;\\n  margin: 0;\\n  text-align: right;\\n}\\n\\n.pharma-finance {\\n  padding: 16px;\\n}\\n\\n.CashReceiptControls {\\n  width: 100%;\\n}\\n\\nbutton.mat-raised-button {\\n  border-radius: 63px;\\n  min-width: 101px;\\n  height: 48px;\\n  margin: 6px;\\n}\\n\\n.mat-form-field {\\n  width: 100%;\\n}\\n\\n.mat-select-panel {\\n  max-height: 200px;\\n  overflow: auto;\\n}\\n\\n.dropdown-table {\\n  display: grid;\\n  grid-template-columns: 2fr 2fr 3fr 2fr 2fr 2fr;\\n  /* Adjust column widths */\\n  align-items: center;\\n  gap: 16px;\\n  padding: 8px;\\n}\\n\\n.dropdown-table.header {\\n  font-weight: bold;\\n  background-color: #f5f5f5;\\n  border-bottom: 1px solid #ddd;\\n}\\n\\n.dropdown-table.row {\\n  background-color: #fff;\\n  border-bottom: 1px solid #ddd;\\n}\\n\\n.dropdown-table.row:nth-child(even) {\\n  background-color: #fafafa;\\n}\\n\\n.dropdown-table span {\\n  overflow: hidden;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  padding: 4px;\\n}\\n\\nmat-checkbox {\\n  margin: 8px 0;\\n}\\n\\n.search-container {\\n  padding: 8px;\\n}\\n\\n.search-field {\\n  width: 30%;\\n}\\n\\n.action-icons {\\n  display: flex;\\n  justify-content: flex-end;\\n  /* Align icons to the right */\\n  gap: 16px;\\n  /* Space between buttons */\\n  margin-bottom: 8px;\\n  /* Space below the buttons */\\n}\\n\\n.icon-img {\\n  width: 37px;\\n  height: 38px;\\n  -o-object-fit: contain;\\n  object-fit: contain;\\n  margin: 3px;\\n}\\n\\n::ng-deep .ledger_mat .mat-expansion-panel-body {\\n  padding: 14px 16px 24px 16px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGlzdHJpYnV0aW9uL2ludmVudG9yeS1yZXBvcnRzL3N0b2NrLXJlcG9ydHMvc3RvY2stbGVkZ2VyL0M6XFxVc2Vyc1xcVVNFUlxcRG93bmxvYWRzXFxlQnVzaW5lc3MuVWkvc3JjXFxhcHBcXGRpc3RyaWJ1dGlvblxcaW52ZW50b3J5LXJlcG9ydHNcXHN0b2NrLXJlcG9ydHNcXHN0b2NrLWxlZGdlclxcc3RvY2stbGVkZ2VyLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9kaXN0cmlidXRpb24vaW52ZW50b3J5LXJlcG9ydHMvc3RvY2stcmVwb3J0cy9zdG9jay1sZWRnZXIvc3RvY2stbGVkZ2VyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksY0FBQTtFQUNBLGVBQUE7RUFDQSxvQ0FBQTtFQUNBLGlCQUFBO0VBQ0EsU0FBQTtFQUNBLGlCQUFBO0FDQ0o7O0FERUU7RUFDRSxhQUFBO0FDQ0o7O0FERUU7RUFDRSxXQUFBO0FDQ0o7O0FERUU7RUFDRSxtQkFBQTtFQUNBLGdCQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7QUNDSjs7QURFRTtFQUNFLFdBQUE7QUNDSjs7QURFRTtFQUNFLGlCQUFBO0VBQ0EsY0FBQTtBQ0NKOztBREVFO0VBQ0UsYUFBQTtFQUNBLDhDQUFBO0VBQWdELHlCQUFBO0VBQ2hELG1CQUFBO0VBQ0EsU0FBQTtFQUNBLFlBQUE7QUNFSjs7QURDRTtFQUNFLGlCQUFBO0VBQ0EseUJBQUE7RUFDQSw2QkFBQTtBQ0VKOztBRENFO0VBQ0Usc0JBQUE7RUFDQSw2QkFBQTtBQ0VKOztBRENFO0VBQ0UseUJBQUE7QUNFSjs7QURDRTtFQUNFLGdCQUFBO0VBQ0EsbUJBQUE7RUFDQSx1QkFBQTtFQUNBLFlBQUE7QUNFSjs7QURDRTtFQUNFLGFBQUE7QUNFSjs7QURBRTtFQUNFLFlBQUE7QUNHSjs7QURBRTtFQUNFLFVBQUE7QUNHSjs7QURERTtFQUNFLGFBQUE7RUFDQSx5QkFBQTtFQUEyQiw2QkFBQTtFQUMzQixTQUFBO0VBQVcsMEJBQUE7RUFDWCxrQkFBQTtFQUFvQiw0QkFBQTtBQ094Qjs7QURKRTtFQUNFLFdBQUE7RUFDQSxZQUFBO0VBQ0Esc0JBQUE7RUFDQSxtQkFBQTtFQUNBLFdBQUE7QUNPSjs7QURKRTtFQUNFLDRCQUFBO0FDT0oiLCJmaWxlIjoic3JjL2FwcC9kaXN0cmlidXRpb24vaW52ZW50b3J5LXJlcG9ydHMvc3RvY2stcmVwb3J0cy9zdG9jay1sZWRnZXIvc3RvY2stbGVkZ2VyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnBoYXJtYWN5SGVhZGluZyB7XG4gICAgY29sb3I6ICMyZjhiYmQ7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIGZvbnQtZmFtaWx5OiAnTW9ub3NwYWNlJywgc2Fucy1zZXJpZjtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBtYXJnaW46IDA7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gIH1cbiAgXG4gIC5waGFybWEtZmluYW5jZSB7XG4gICAgcGFkZGluZzogMTZweDtcbiAgfVxuICBcbiAgLkNhc2hSZWNlaXB0Q29udHJvbHMge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIFxuICBidXR0b24ubWF0LXJhaXNlZC1idXR0b24ge1xuICAgIGJvcmRlci1yYWRpdXM6IDYzcHg7XG4gICAgbWluLXdpZHRoOiAxMDFweDtcbiAgICBoZWlnaHQ6IDQ4cHg7XG4gICAgbWFyZ2luOiA2cHhcbiAgfVxuICBcbiAgLm1hdC1mb3JtLWZpZWxkIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuICBcbiAgLm1hdC1zZWxlY3QtcGFuZWwge1xuICAgIG1heC1oZWlnaHQ6IDIwMHB4O1xuICAgIG92ZXJmbG93OiBhdXRvO1xuICB9XG4gIFxuICAuZHJvcGRvd24tdGFibGUge1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAyZnIgMmZyIDNmciAyZnIgMmZyIDJmcjsgLyogQWRqdXN0IGNvbHVtbiB3aWR0aHMgKi9cbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGdhcDogMTZweDtcbiAgICBwYWRkaW5nOiA4cHg7XG4gIH1cbiAgXG4gIC5kcm9wZG93bi10YWJsZS5oZWFkZXIge1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjU7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkZGQ7XG4gIH1cbiAgXG4gIC5kcm9wZG93bi10YWJsZS5yb3cge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkZGQ7XG4gIH1cbiAgXG4gIC5kcm9wZG93bi10YWJsZS5yb3c6bnRoLWNoaWxkKGV2ZW4pIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmFmYWZhO1xuICB9XG4gIFxuICAuZHJvcGRvd24tdGFibGUgc3BhbiB7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICAgIHBhZGRpbmc6IDRweDtcbiAgfVxuICBcbiAgbWF0LWNoZWNrYm94IHtcbiAgICBtYXJnaW46IDhweCAwO1xuICB9XG4gIC5zZWFyY2gtY29udGFpbmVyIHtcbiAgICBwYWRkaW5nOiA4cHg7XG4gIH1cbiAgXG4gIC5zZWFyY2gtZmllbGQge1xuICAgIHdpZHRoOiAzMCU7XG4gIH1cbiAgLmFjdGlvbi1pY29ucyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kOyAvKiBBbGlnbiBpY29ucyB0byB0aGUgcmlnaHQgKi9cbiAgICBnYXA6IDE2cHg7IC8qIFNwYWNlIGJldHdlZW4gYnV0dG9ucyAqL1xuICAgIG1hcmdpbi1ib3R0b206IDhweDsgLyogU3BhY2UgYmVsb3cgdGhlIGJ1dHRvbnMgKi9cbiAgfVxuICBcbiAgLmljb24taW1nIHtcbiAgICB3aWR0aDogMzdweDtcbiAgICBoZWlnaHQ6IDM4cHg7XG4gICAgLW8tb2JqZWN0LWZpdDogY29udGFpbjtcbiAgICBvYmplY3QtZml0OiBjb250YWluO1xuICAgIG1hcmdpbjogM3B4O1xuICB9XG5cbiAgOjpuZy1kZWVwIC5sZWRnZXJfbWF0IC5tYXQtZXhwYW5zaW9uLXBhbmVsLWJvZHkge1xuICAgIHBhZGRpbmc6IDE0cHggMTZweCAyNHB4IDE2cHg7XG4gIH0iLCIucGhhcm1hY3lIZWFkaW5nIHtcbiAgY29sb3I6ICMyZjhiYmQ7XG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgZm9udC1mYW1pbHk6IFwiTW9ub3NwYWNlXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBtYXJnaW46IDA7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuXG4ucGhhcm1hLWZpbmFuY2Uge1xuICBwYWRkaW5nOiAxNnB4O1xufVxuXG4uQ2FzaFJlY2VpcHRDb250cm9scyB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG5idXR0b24ubWF0LXJhaXNlZC1idXR0b24ge1xuICBib3JkZXItcmFkaXVzOiA2M3B4O1xuICBtaW4td2lkdGg6IDEwMXB4O1xuICBoZWlnaHQ6IDQ4cHg7XG4gIG1hcmdpbjogNnB4O1xufVxuXG4ubWF0LWZvcm0tZmllbGQge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLm1hdC1zZWxlY3QtcGFuZWwge1xuICBtYXgtaGVpZ2h0OiAyMDBweDtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi5kcm9wZG93bi10YWJsZSB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMmZyIDJmciAzZnIgMmZyIDJmciAyZnI7XG4gIC8qIEFkanVzdCBjb2x1bW4gd2lkdGhzICovXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGdhcDogMTZweDtcbiAgcGFkZGluZzogOHB4O1xufVxuXG4uZHJvcGRvd24tdGFibGUuaGVhZGVyIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjU7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGRkO1xufVxuXG4uZHJvcGRvd24tdGFibGUucm93IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkZGQ7XG59XG5cbi5kcm9wZG93bi10YWJsZS5yb3c6bnRoLWNoaWxkKGV2ZW4pIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZhZmFmYTtcbn1cblxuLmRyb3Bkb3duLXRhYmxlIHNwYW4ge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgcGFkZGluZzogNHB4O1xufVxuXG5tYXQtY2hlY2tib3gge1xuICBtYXJnaW46IDhweCAwO1xufVxuXG4uc2VhcmNoLWNvbnRhaW5lciB7XG4gIHBhZGRpbmc6IDhweDtcbn1cblxuLnNlYXJjaC1maWVsZCB7XG4gIHdpZHRoOiAzMCU7XG59XG5cbi5hY3Rpb24taWNvbnMge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICAvKiBBbGlnbiBpY29ucyB0byB0aGUgcmlnaHQgKi9cbiAgZ2FwOiAxNnB4O1xuICAvKiBTcGFjZSBiZXR3ZWVuIGJ1dHRvbnMgKi9cbiAgbWFyZ2luLWJvdHRvbTogOHB4O1xuICAvKiBTcGFjZSBiZWxvdyB0aGUgYnV0dG9ucyAqL1xufVxuXG4uaWNvbi1pbWcge1xuICB3aWR0aDogMzdweDtcbiAgaGVpZ2h0OiAzOHB4O1xuICAtby1vYmplY3QtZml0OiBjb250YWluO1xuICBvYmplY3QtZml0OiBjb250YWluO1xuICBtYXJnaW46IDNweDtcbn1cblxuOjpuZy1kZWVwIC5sZWRnZXJfbWF0IC5tYXQtZXhwYW5zaW9uLXBhbmVsLWJvZHkge1xuICBwYWRkaW5nOiAxNHB4IDE2cHggMjRweCAxNnB4O1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\n// import { FinanceReportsService } from '../finance-reports.service';\nimport { Router } from '@angular/router';\nimport { InventoryReportsService } from '../../inventory-reports.service';\nimport { DatePipe } from '@angular/common';\nimport { AppConst, PurchasePrefix } from 'src/app/shared/app-constants';\nimport { OptionsTableDefinition } from 'src/app/shared/components/auto-select/auto-select.component';\nimport { AutoCompleteDefinition } from 'src/app/shared/components/autocomplete/autocomplete.component';\nimport { InwardService } from 'src/app/distribution/in-ward/in-ward.service';\nimport { of } from 'rxjs';\n\n@Component({\n  selector: 'app-stock-ledger',\n  templateUrl: './stock-ledger.component.html',\n  styleUrls: ['./stock-ledger.component.scss']\n})\nexport class StockLedgerComponent implements OnInit {\n    stockLedgerRepost: FormGroup;\n    step: number = 0;\n    accountSelectionControl: FormControl;\n    dropdownOptions:any=[];\n    proddropdown:any=[];\n    filteredOptions:any=[];\n    groupFilteredOptions:any=[];\n    showAutoCompleteData:boolean = false;\n    // Updated with additional columns\n    // dropdownOptions = [\n    //   { id: 1, name: 'Account A', address: '123 Main St', city: 'New York', state: 'NY' },\n    //   { id: 2, name: 'Account B', address: '456 Elm St', city: 'Los Angeles', state: 'CA' },\n    //   { id: 3, name: 'Account C', address: '789 Oak St', city: 'Chicago', state: 'IL' },\n    //   { id: 4, name: 'Account D', address: '101 Pine St', city: 'Houston', state: 'TX' }\n    // ];\n    // dropdownOptions = [\n    //   { id: 1, name: 'A', address: '1', city: 'N', state: 'N' },\n    //   { id: 2, name: 'B', address: '4', city: 'L', state: 'C' },\n    //   ...\n    // ];\n  \n    isAllSelected = false;\n    isIndeterminate = false;\n    financialYearStart: Date;\n    financialYearEnd: Date;\n    today: string;\n    showTable: boolean = false;\n    dataSource: any;\n    ProductName = new FormControl('');\n\n    customProductAutoCompleteDef:  AutoCompleteDefinition = {\n      label:  'Product Name',\n      isRequired:  true,\n      dataSourceFn:  (name) => this.showAutoComplete(name),\n      minCount:  2,\n      keyString:  'prodName'\n    };\n  batches: any;\n  batchewisestock: any;\n  batchWise: boolean = false;\n\n    constructor(private fb: FormBuilder, private router:Router,private StockRepService:InventoryReportsService,public datepipe: DatePipe,\n    private inwardService:  InwardService,) {\n      this.today = new Date().toISOString().split('T')[0];\n      this.stockLedgerRepost = this.fb.group({\n        fromDate: [this.today, Validators.required],\n        toDate: [this.today, Validators.required],\n        accopyType: [''],\n        accId:[[], Validators.required],\n        // prodId:  [''],\n        compId:  [0],\n      });\n    }\n  \n    customProductOptsTable:  OptionsTableDefinition = {\n        panelWidth:  900,\n        columns:  [\n          { name:  'Product Name', value:  (obj) => obj['prodName'] ? obj['prodName'] :  '', fxFlex:  20,fxFlex1:20, isKeyColumn:  true },\n          { name:  'Product Pack', value:  (obj) => obj['prodPackName'] ? obj['prodPackName'] :  '', fxFlex:  16 , fxFlex1:16},\n          { name:  'HSN Code', value:  (obj) => obj['hsncode'] ? obj['hsncode'] :  '', fxFlex:  16, fxFlex1:16 },\n          { name:  'Tax%', value:  (obj) => obj['tax'] ? obj['tax']:  '', fxFlex:  16, fxFlex1:16 },\n          { name:  'Sh.Name', value:  (obj) => obj['prodShName'] ? obj['prodShName'] :  '', fxFlex:  16,fxFlex1:16 },\n          { name:  'CompanyName', value:  (obj) => obj['compName']? obj['compName'] :  '', fxFlex:  14, fxFlex1:14 }    ]\n      };\n\n    ngOnInit(): void {\n      // this.getCompanies();\n      // this.getCompaniesGroups();\n      this.lowerSearch = \"\"\n      this.getProducts();\n      this.calculateFinancialYearDates();\n      // this.createForm();\n      this.ProductName.valueChanges.subscribe(data=>{\n      // console.log(this.stockLedgerRepost.get('prodId').value.prodId);\n      if(this.ProductName.value.prodId > 0){\n        this.GetBatchesByProductId();\n      }\n      if(this.ProductName.value == \"\"){\n        this.batchWise = false;\n      }\n      if(data && this.ProductName.dirty){\n        this.showAutoCompleteData = true;\n      }\n      })\n    }    \n\n    customProductsOptsTable: OptionsTableDefinition = {\n          panelWidth: 800,\n          columns: [\n            {\n              name: 'Select All', value: (obj) => obj[''],\n              fxFlex: 10,\n              fxFlex1: 10\n            },\n            { name: 'Product Name', value: (obj) => obj['prodName'] ? obj['prodName'] : '', fxFlex: 34,fxFlex1:34, isKeyColumn: true },\n            { name: 'Shot Name', value: (obj) => obj['prodShName'] ? obj['prodShName'] : '', fxFlex: 14,fxFlex1:14 },\n            { name: 'Prod PackName', value: (obj) => obj['prodPackName'] ? obj['prodPackName'] : '', fxFlex: 16,fxFlex1:16 },\n            { name: 'Prod GroupName', value: (obj) => obj['prodGroupName'] ? obj['prodGroupName'] : '', fxFlex: 24,fxFlex1:24 },\n            { name: 'Tax', value: (obj) => obj['tax'] ? obj['tax'] : '', fxFlex: 12,fxFlex1:12 },\n            // { name: 'Mobile', value: (obj) => obj['mobile'] ? obj['mobile'] : '', fxFlex: 14,fxFlex1:14},\n          ]\n        };\n\n        prodFilterKeys = ['prodName', 'prodShName', 'prodGroupName'];\n    \n      customAccountsOptsTable: OptionsTableDefinition = {\n        panelWidth: 800,\n        columns: [\n          {\n            name: 'Select All', value: (obj) => obj[''],\n            fxFlex: 10,\n            fxFlex1: 10\n          },\n          { name: 'Company Name', value: (obj) => obj['comp_Name'] ? obj['comp_Name'] : '', fxFlex: 14,fxFlex1:14, isKeyColumn: true },\n          { name: 'Product Name', value: (obj) => obj['prod_Name'] ? obj['prod_Name'] : '', fxFlex: 14,fxFlex1:14 },\n          { name: 'Short Name', value: (obj) => obj['p_Sh_Name'] ? obj['p_Sh_Name'] : '', fxFlex: 14,fxFlex1:14 },\n          { name: 'Product Pack', value: (obj) => obj['prod_Pack'] ? obj['prod_Pack'] : '', fxFlex: 16,fxFlex1:16 },\n          { name: 'Batch', value: (obj) => obj['batch'] ? obj['batch'] : '', fxFlex: 24,fxFlex1:24 },\n          { name: 'Recd.Qty', value: (obj) => obj['recd_Qty'] ? obj['recd_Qty'] : '', fxFlex: 12,fxFlex1:12 },\n          { name: 'Supplier', value: (obj) => obj['supplier'] ? obj['supplier'] : '', fxFlex: 14,fxFlex1:14},\n        ]\n      };\n  \n      filterKeys = ['comp_Name', 'p_Sh_Name', 'prod_Name', 'batch'];\n\n    setStep(index: number): void {\n      this.step = index;\n    }\n    getProducts(){\n     let payload={\n      compId:0,\n      prodName:this.lowerSearch\n      };\n      this.StockRepService.getproductsList(payload).subscribe(res=>{\n        this.proddropdown=res;\n        this.filteredOptions = [...this.dropdownOptions];\n      })\n    };\n    getCompaniesGroups(){\n      this.StockRepService.getGroupCompanyList().subscribe(res=>{\n        this.proddropdown=res;\n        this.groupFilteredOptions = [...this.proddropdown];\n      })\n    };\n  \n    generateReport(): void {\n      // let toDate = this.stockLedgerRepost.value.toDate.split(\"T\")\n      let accId = [];\n       if(this.stockLedgerRepost.value.accId.length > 0){ \n        if(this.stockLedgerRepost.value.accopyType == 1){\n          accId = this.stockLedgerRepost.value.accId.map(item => item.prodId).toString();\n        }\n        else if(this.stockLedgerRepost.value.accopyType == 2){\n          accId = this.stockLedgerRepost.value.accId.map(item => item.compGroupId).toString();\n        }\n       }\n       const payload={\n        // \"stmntOption\": Number(this.stockLedgerRepost.controls.accopyType.value),\n        \"products\": this.selectedProducts ? this.selectedProducts.toString() :\"\",\n        \"fromDate\": this.datepipe.transform(this.stockLedgerRepost.value.fromDate, AppConst.DATE_FORMAT), \n        // this.stockLedgerRepost.value.fromDate,\n        \"toDate\": this.datepipe.transform(this.stockLedgerRepost.value.toDate,AppConst.DATE_FORMAT),\n        \"finSDate\": this.datepipe.transform(this.financialYearStart,AppConst.DATE_FORMAT),\n        \"finEDate\": this.datepipe.transform(this.financialYearEnd,AppConst.DATE_FORMAT)\n      }\n      this.showTable = false;\n  \n      this.StockRepService.getstockLedger(payload).subscribe(res =>{\n        if(res){\n          this.showTable = true;\n          // this.stockLedgerRepost.get('accopyType').setValue([\"0\"]);\n          this.dataSource = JSON.parse(res);\n        }\n      });\n    }\n    lowerSearch:any=\"\";\n    filterOptions(searchValue: string): void {\n       this.lowerSearch = searchValue.toLowerCase();\n      this.filteredOptions = this.dropdownOptions.filter(option => \n        option.compName.toLowerCase().includes(this.lowerSearch) ||\n        option.compShName.toLowerCase().includes(this.lowerSearch) ||\n        option.address1.toLowerCase().includes(this.lowerSearch) ||\n        option.address2.toLowerCase().includes(this.lowerSearch) ||\n        option.compGroupName.toString().includes(this.lowerSearch)\n        );\n    }\n    // GroupfilterOptions(searchValue: string): void {\n    //   const lowerSearch = searchValue.toLowerCase();\n    //   this.groupFilteredOptions = this.groupdropdown.filter(option => \n    //     option.compGroupName.toLowerCase().includes(lowerSearch)\n    //     );\n    // }\n  \n    resetForm(): void {\n      this.stockLedgerRepost.reset();\n      this.dataSource=[];\n      this.ProductName.setValue('');\n      this.batchWise = false;\n      this.showTable = false;\n    }\n    selectedProducts:any;\n    receiveGroupData(data){\n      this.selectedProducts =[];\n     data.forEach(x=>{\n      this.selectedProducts.push(x.prodId);\n     });\n    }\n  \n    toggleSelectAll(checked: boolean): void {\n      if (checked) {\n        this.stockLedgerRepost.get('accId').setValue(this.dropdownOptions);\n      } else {\n        this.stockLedgerRepost.get('accId').setValue([]);\n      }\n      this.updateSelectAllState();\n    }\n    toggleSelectAllgroups(checked: boolean): void {\n      if (checked) {\n        this.stockLedgerRepost.get('accId').setValue(this.proddropdown);\n      } else {\n        this.stockLedgerRepost.get('accId').setValue([]);\n      }\n      this.updateSelectAllgroupState();\n    }\n  \n    onOptionChange(): void {\n      this.updateSelectAllState();\n    }\n  \n    updateSelectAllState(): void {\n      const selectedOptions = this.stockLedgerRepost.get('accId').value || [];\n      this.isAllSelected = selectedOptions.length === this.dropdownOptions.length;\n      this.isIndeterminate =\n        selectedOptions.length > 0 && selectedOptions.length < this.dropdownOptions.length;\n    }\n    updateSelectAllgroupState(): void {\n      const selectedOptions = this.stockLedgerRepost.get('accId').value || [];\n      this.isAllSelected = selectedOptions.length === this.proddropdown.length;\n      this.isIndeterminate =\n        selectedOptions.length > 0 && selectedOptions.length < this.proddropdown.length;\n    }\n  \n    // Calculate the start and end date of the current financial year\n    calculateFinancialYearDates() {\n      const currentDate = new Date();\n      const currentYear = currentDate.getFullYear();\n  \n      // Assuming financial year starts from 1st April and ends on 31st March\n      if (currentDate.getMonth() < 3) {\n        // If current month is before April, use last year's financial year\n        this.financialYearStart = new Date(currentYear - 1, 3, 1); // 1st April of previous year\n        this.financialYearEnd = new Date(currentYear, 2, 31); // 31st March of current year\n      } else {\n        // If current month is from April onwards, use current year's financial year\n        this.financialYearStart = new Date(currentYear, 3, 1); // 1st April of current year\n        this.financialYearEnd = new Date(currentYear + 1, 2, 31); // 31st March of next year\n      }\n    }\n  \n    // Datepicker filter to disable dates outside the financial year\n    dateFilter = (date: Date | null): boolean => {\n      if (!date) return false;\n      return date >= this.financialYearStart && date <= this.financialYearEnd;\n    };\n  \n    typeChange(value){\n        // Based on the condition, set 'name' field required or not\n        const nameControl = this.stockLedgerRepost.get('accId');\n        if (+value == 1) {\n          nameControl.setValue([]);\n          nameControl.setValidators([Validators.required]);  // Set as required\n          this.batchWise = false\n        } else {\n          nameControl.setValue([]);\n          nameControl.clearValidators();  // Remove the required validator\n        }\n  \n        if(+value == 2 ){\n          this.stockLedgerRepost.get('compId').setValue(0)\n        }\n\n         // Always call updateValueAndValidity after changing the validators\n          nameControl.updateValueAndValidity();\n    }\n  \n    goback(){\n      this.router.navigate(['pharma/inventoryReports/stockReports']);\n    }\n\n  showAutoComplete(name){\n    if(this.showAutoCompleteData){\n      return this.inwardService.getCustomProductByName(name,this.stockLedgerRepost.controls.compId.value, PurchasePrefix)\n    }else{\n      return of([])\n    }\n  }\n\n    GetBatchesByProductId(){\n      this.batches = [];\n      const payload = {\n        productId: this.ProductName.value.prodId,\n        finSDate: this.datepipe.transform(this.financialYearStart,AppConst.DATE_FORMAT),\n        finEdate: this.datepipe.transform(this.financialYearEnd,AppConst.DATE_FORMAT)\n      }\n      this.StockRepService.GetBatchesByProductId(payload).subscribe(r=>{\n        if(r){\n          this.batches = r;\n          this.GetBatchWiseStockLedger();\n        }\n      })\n    }\n    \n    GetBatchWiseStockLedger(){\n      this.batchewisestock = [];\n      const payload = {\n        productId: this.ProductName.value.prodId,\n        batches: this.batches.toString(),\n        fromDate: this.datepipe.transform(this.stockLedgerRepost.value.fromDate, AppConst.DATE_FORMAT), \n        toDate: this.datepipe.transform(this.stockLedgerRepost.value.toDate,AppConst.DATE_FORMAT),\n        finSDate: this.datepipe.transform(this.financialYearStart,AppConst.DATE_FORMAT),\n        finEdate: this.datepipe.transform(this.financialYearEnd,AppConst.DATE_FORMAT)\n      }\n      this.StockRepService.GetBatchWiseStockLedger(payload).subscribe(r=>{\n        if(r){\n          this.batchewisestock = r;\n          this.batchWise = true;\n        }\n      })\n    }\n\n}\n","export default \".pharmacyHeading {\\n  color: #2f8bbd;\\n  font-size: 24px;\\n  font-family: \\\"Monospace\\\", sans-serif;\\n  font-weight: bold;\\n  margin: 0;\\n  text-align: center;\\n}\\n\\n.pharma-finance {\\n  padding: 16px;\\n}\\n\\n.CashReceiptControls {\\n  width: 100%;\\n}\\n\\nbutton.mat-raised-button {\\n  border-radius: 63px;\\n  min-width: 101px;\\n  height: 48px;\\n  margin: 6px;\\n}\\n\\n.mat-form-field {\\n  width: 100%;\\n}\\n\\n.dropdown-table .header {\\n  font-weight: bold;\\n  background-color: #006476;\\n  border-bottom: 1px solid #ddd;\\n  color: white;\\n  padding: 0 5px;\\n}\\n\\n.mat_header {\\n  padding-right: 0px !important;\\n  pointer-events: none !important;\\n  cursor: none;\\n  background: #006476;\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: -1px;\\n  z-index: 1;\\n}\\n\\n::ng-deep .mat_header .mat-pseudo-checkbox {\\n  visibility: hidden !important;\\n  pointer-events: none !important;\\n}\\n\\n::ng-deep .mat_header.mat-active {\\n  background: #006476 !important;\\n}\\n\\n.mat_opt {\\n  padding-right: 0 !important;\\n}\\n\\n.mat_option {\\n  overflow: hidden;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  padding: 0 5px;\\n}\\n\\nmat-checkbox {\\n  margin: 8px 0;\\n}\\n\\n::ng-deep .account_mat .mat-expansion-panel-body {\\n  padding: 14px 16px 24px 16px;\\n}\\n\\n::ng-deep .account_select {\\n  max-height: unset !important;\\n}\\n\\n::ng-deep .account_search .mat-form-field-flex {\\n  padding-top: 11px !important;\\n  padding-bottom: 0px !important;\\n}\\n\\n::ng-deep .account_search .mat-form-field-label-wrapper {\\n  top: -1.1em !important;\\n}\\n\\n::ng-deep .mat_checkbox label {\\n  margin-bottom: 0;\\n}\\n\\n@media screen and (max-width: 1200px) {\\n  .mat_opt, .mat_header, .mat_option {\\n    line-height: unset !important;\\n    height: unset !important;\\n    white-space: normal !important;\\n    -webkit-text-emphasis: unset !important;\\n            text-emphasis: unset !important;\\n    overflow: unset !important;\\n    word-wrap: break-word;\\n  }\\n}\\n\\n.action-icons {\\n  display: flex;\\n  justify-content: flex-end;\\n  /* Align icons to the right */\\n  gap: 16px;\\n  /* Space between buttons */\\n  margin-bottom: 8px;\\n  /* Space below the buttons */\\n}\\n\\n.icon-img {\\n  width: 37px;\\n  height: 38px;\\n  -o-object-fit: contain;\\n  object-fit: contain;\\n  margin: 3px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGlzdHJpYnV0aW9uL2ludmVudG9yeS1yZXBvcnRzL3N0b2NrLXJlcG9ydHMvc3RvY2stcG9zaXRpb24vQzpcXFVzZXJzXFxVU0VSXFxEb3dubG9hZHNcXGVCdXNpbmVzcy5VaS9zcmNcXGFwcFxcZGlzdHJpYnV0aW9uXFxpbnZlbnRvcnktcmVwb3J0c1xcc3RvY2stcmVwb3J0c1xcc3RvY2stcG9zaXRpb25cXHN0b2NrLXBvc2l0aW9uLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9kaXN0cmlidXRpb24vaW52ZW50b3J5LXJlcG9ydHMvc3RvY2stcmVwb3J0cy9zdG9jay1wb3NpdGlvbi9zdG9jay1wb3NpdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQUE7RUFDQSxlQUFBO0VBQ0Esb0NBQUE7RUFDQSxpQkFBQTtFQUNBLFNBQUE7RUFDQSxrQkFBQTtBQ0NGOztBREVBO0VBQ0UsYUFBQTtBQ0NGOztBREVBO0VBQ0UsV0FBQTtBQ0NGOztBREVBO0VBQ0UsbUJBQUE7RUFDQSxnQkFBQTtFQUNBLFlBQUE7RUFDQSxXQUFBO0FDQ0Y7O0FERUE7RUFDRSxXQUFBO0FDQ0Y7O0FERUE7RUFDRSxpQkFBQTtFQUNBLHlCQUFBO0VBQ0EsNkJBQUE7RUFDQSxZQUFBO0VBQ0EsY0FBQTtBQ0NGOztBREVBO0VBQ0UsNkJBQUE7RUFDQSwrQkFBQTtFQUNBLFlBQUE7RUFDQSxtQkFBQTtFQUNBLHdCQUFBO0VBQUEsZ0JBQUE7RUFDQSxTQUFBO0VBQ0EsVUFBQTtBQ0NGOztBREVBO0VBQ0UsNkJBQUE7RUFDQSwrQkFBQTtBQ0NGOztBREVBO0VBQ0UsOEJBQUE7QUNDRjs7QURFQTtFQUNFLDJCQUFBO0FDQ0Y7O0FERUE7RUFDRSxnQkFBQTtFQUNBLG1CQUFBO0VBQ0EsdUJBQUE7RUFDQSxjQUFBO0FDQ0Y7O0FERUE7RUFDRSxhQUFBO0FDQ0Y7O0FERUE7RUFDRSw0QkFBQTtBQ0NGOztBREVBO0VBQ0ksNEJBQUE7QUNDSjs7QURFQTtFQUNFLDRCQUFBO0VBQ0EsOEJBQUE7QUNDRjs7QURFQTtFQUNFLHNCQUFBO0FDQ0Y7O0FER0E7RUFDRSxnQkFBQTtBQ0FGOztBREdBO0VBQ0E7SUFDRSw2QkFBQTtJQUNBLHdCQUFBO0lBQ0EsOEJBQUE7SUFDQSx1Q0FBQTtZQUFBLCtCQUFBO0lBQ0EsMEJBQUE7SUFDQSxxQkFBQTtFQ0FBO0FBQ0Y7O0FERUE7RUFDRSxhQUFBO0VBQ0EseUJBQUE7RUFBMkIsNkJBQUE7RUFDM0IsU0FBQTtFQUFXLDBCQUFBO0VBQ1gsa0JBQUE7RUFBb0IsNEJBQUE7QUNHdEI7O0FEQUE7RUFDRSxXQUFBO0VBQ0EsWUFBQTtFQUNBLHNCQUFBO0VBQ0EsbUJBQUE7RUFDQSxXQUFBO0FDR0YiLCJmaWxlIjoic3JjL2FwcC9kaXN0cmlidXRpb24vaW52ZW50b3J5LXJlcG9ydHMvc3RvY2stcmVwb3J0cy9zdG9jay1wb3NpdGlvbi9zdG9jay1wb3NpdGlvbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5waGFybWFjeUhlYWRpbmcge1xuICBjb2xvcjogIzJmOGJiZDtcbiAgZm9udC1zaXplOiAyNHB4O1xuICBmb250LWZhbWlseTogJ01vbm9zcGFjZScsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBtYXJnaW46IDA7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLnBoYXJtYS1maW5hbmNlIHtcbiAgcGFkZGluZzogMTZweDtcbn1cblxuLkNhc2hSZWNlaXB0Q29udHJvbHMge1xuICB3aWR0aDogMTAwJTtcbn1cblxuYnV0dG9uLm1hdC1yYWlzZWQtYnV0dG9uIHtcbiAgYm9yZGVyLXJhZGl1czogNjNweDtcbiAgbWluLXdpZHRoOiAxMDFweDtcbiAgaGVpZ2h0OiA0OHB4O1xuICBtYXJnaW46IDZweFxufVxuXG4ubWF0LWZvcm0tZmllbGQge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmRyb3Bkb3duLXRhYmxlIC5oZWFkZXIge1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwNjQ3NjtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkZGQ7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgcGFkZGluZzogMCA1cHg7XG59XG5cbi5tYXRfaGVhZGVye1xuICBwYWRkaW5nLXJpZ2h0OiAwcHggIWltcG9ydGFudDtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmUgIWltcG9ydGFudDtcbiAgY3Vyc29yOiBub25lO1xuICBiYWNrZ3JvdW5kOiAjMDA2NDc2O1xuICBwb3NpdGlvbjogc3RpY2t5O1xuICB0b3A6IC0xcHg7XG4gIHotaW5kZXg6IDE7XG59XG5cbjo6bmctZGVlcCAubWF0X2hlYWRlciAubWF0LXBzZXVkby1jaGVja2JveHtcbiAgdmlzaWJpbGl0eTogaGlkZGVuICFpbXBvcnRhbnQ7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lICFpbXBvcnRhbnQ7XG59XG5cbjo6bmctZGVlcCAubWF0X2hlYWRlci5tYXQtYWN0aXZlIHtcbiAgYmFja2dyb3VuZDogIzAwNjQ3NiAhaW1wb3J0YW50O1xufVxuXG4ubWF0X29wdHtcbiAgcGFkZGluZy1yaWdodDogMCAhaW1wb3J0YW50O1xufVxuXG4ubWF0X29wdGlvbiB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICBwYWRkaW5nOiAwIDVweDtcbn1cblxubWF0LWNoZWNrYm94IHtcbiAgbWFyZ2luOiA4cHggMDtcbn1cblxuOjpuZy1kZWVwIC5hY2NvdW50X21hdCAubWF0LWV4cGFuc2lvbi1wYW5lbC1ib2R5IHtcbiAgcGFkZGluZzogMTRweCAxNnB4IDI0cHggMTZweDtcbn1cblxuOjpuZy1kZWVwIC5hY2NvdW50X3NlbGVjdCB7XG4gICAgbWF4LWhlaWdodDogdW5zZXQgIWltcG9ydGFudDtcbn1cblxuOjpuZy1kZWVwIC5hY2NvdW50X3NlYXJjaCAubWF0LWZvcm0tZmllbGQtZmxleCB7XG4gIHBhZGRpbmctdG9wOiAxMXB4ICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmctYm90dG9tOiAwcHggIWltcG9ydGFudDtcbn1cblxuOjpuZy1kZWVwIC5hY2NvdW50X3NlYXJjaCAubWF0LWZvcm0tZmllbGQtbGFiZWwtd3JhcHBlciB7XG4gIHRvcDogLTEuMWVtICFpbXBvcnRhbnQ7XG59XG5cblxuOjpuZy1kZWVwIC5tYXRfY2hlY2tib3ggbGFiZWwge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMjAwcHgpIHtcbi5tYXRfb3B0LCAubWF0X2hlYWRlciwgLm1hdF9vcHRpb257XG4gIGxpbmUtaGVpZ2h0OiB1bnNldCAhaW1wb3J0YW50O1xuICBoZWlnaHQ6IHVuc2V0ICFpbXBvcnRhbnQ7XG4gIHdoaXRlLXNwYWNlOiBub3JtYWwgIWltcG9ydGFudDtcbiAgdGV4dC1lbXBoYXNpczogdW5zZXQgIWltcG9ydGFudDtcbiAgb3ZlcmZsb3c6IHVuc2V0ICFpbXBvcnRhbnQ7XG4gIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbn1cbn1cbi5hY3Rpb24taWNvbnMge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kOyAvKiBBbGlnbiBpY29ucyB0byB0aGUgcmlnaHQgKi9cbiAgZ2FwOiAxNnB4OyAvKiBTcGFjZSBiZXR3ZWVuIGJ1dHRvbnMgKi9cbiAgbWFyZ2luLWJvdHRvbTogOHB4OyAvKiBTcGFjZSBiZWxvdyB0aGUgYnV0dG9ucyAqL1xufVxuXG4uaWNvbi1pbWcge1xuICB3aWR0aDogMzdweDtcbiAgaGVpZ2h0OiAzOHB4O1xuICAtby1vYmplY3QtZml0OiBjb250YWluO1xuICBvYmplY3QtZml0OiBjb250YWluO1xuICBtYXJnaW46IDNweDtcbn0iLCIucGhhcm1hY3lIZWFkaW5nIHtcbiAgY29sb3I6ICMyZjhiYmQ7XG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgZm9udC1mYW1pbHk6IFwiTW9ub3NwYWNlXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBtYXJnaW46IDA7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLnBoYXJtYS1maW5hbmNlIHtcbiAgcGFkZGluZzogMTZweDtcbn1cblxuLkNhc2hSZWNlaXB0Q29udHJvbHMge1xuICB3aWR0aDogMTAwJTtcbn1cblxuYnV0dG9uLm1hdC1yYWlzZWQtYnV0dG9uIHtcbiAgYm9yZGVyLXJhZGl1czogNjNweDtcbiAgbWluLXdpZHRoOiAxMDFweDtcbiAgaGVpZ2h0OiA0OHB4O1xuICBtYXJnaW46IDZweDtcbn1cblxuLm1hdC1mb3JtLWZpZWxkIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5kcm9wZG93bi10YWJsZSAuaGVhZGVyIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDY0NzY7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGRkO1xuICBjb2xvcjogd2hpdGU7XG4gIHBhZGRpbmc6IDAgNXB4O1xufVxuXG4ubWF0X2hlYWRlciB7XG4gIHBhZGRpbmctcmlnaHQ6IDBweCAhaW1wb3J0YW50O1xuICBwb2ludGVyLWV2ZW50czogbm9uZSAhaW1wb3J0YW50O1xuICBjdXJzb3I6IG5vbmU7XG4gIGJhY2tncm91bmQ6ICMwMDY0NzY7XG4gIHBvc2l0aW9uOiBzdGlja3k7XG4gIHRvcDogLTFweDtcbiAgei1pbmRleDogMTtcbn1cblxuOjpuZy1kZWVwIC5tYXRfaGVhZGVyIC5tYXQtcHNldWRvLWNoZWNrYm94IHtcbiAgdmlzaWJpbGl0eTogaGlkZGVuICFpbXBvcnRhbnQ7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lICFpbXBvcnRhbnQ7XG59XG5cbjo6bmctZGVlcCAubWF0X2hlYWRlci5tYXQtYWN0aXZlIHtcbiAgYmFja2dyb3VuZDogIzAwNjQ3NiAhaW1wb3J0YW50O1xufVxuXG4ubWF0X29wdCB7XG4gIHBhZGRpbmctcmlnaHQ6IDAgIWltcG9ydGFudDtcbn1cblxuLm1hdF9vcHRpb24ge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgcGFkZGluZzogMCA1cHg7XG59XG5cbm1hdC1jaGVja2JveCB7XG4gIG1hcmdpbjogOHB4IDA7XG59XG5cbjo6bmctZGVlcCAuYWNjb3VudF9tYXQgLm1hdC1leHBhbnNpb24tcGFuZWwtYm9keSB7XG4gIHBhZGRpbmc6IDE0cHggMTZweCAyNHB4IDE2cHg7XG59XG5cbjo6bmctZGVlcCAuYWNjb3VudF9zZWxlY3Qge1xuICBtYXgtaGVpZ2h0OiB1bnNldCAhaW1wb3J0YW50O1xufVxuXG46Om5nLWRlZXAgLmFjY291bnRfc2VhcmNoIC5tYXQtZm9ybS1maWVsZC1mbGV4IHtcbiAgcGFkZGluZy10b3A6IDExcHggIWltcG9ydGFudDtcbiAgcGFkZGluZy1ib3R0b206IDBweCAhaW1wb3J0YW50O1xufVxuXG46Om5nLWRlZXAgLmFjY291bnRfc2VhcmNoIC5tYXQtZm9ybS1maWVsZC1sYWJlbC13cmFwcGVyIHtcbiAgdG9wOiAtMS4xZW0gIWltcG9ydGFudDtcbn1cblxuOjpuZy1kZWVwIC5tYXRfY2hlY2tib3ggbGFiZWwge1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMjAwcHgpIHtcbiAgLm1hdF9vcHQsIC5tYXRfaGVhZGVyLCAubWF0X29wdGlvbiB7XG4gICAgbGluZS1oZWlnaHQ6IHVuc2V0ICFpbXBvcnRhbnQ7XG4gICAgaGVpZ2h0OiB1bnNldCAhaW1wb3J0YW50O1xuICAgIHdoaXRlLXNwYWNlOiBub3JtYWwgIWltcG9ydGFudDtcbiAgICB0ZXh0LWVtcGhhc2lzOiB1bnNldCAhaW1wb3J0YW50O1xuICAgIG92ZXJmbG93OiB1bnNldCAhaW1wb3J0YW50O1xuICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbiAgfVxufVxuLmFjdGlvbi1pY29ucyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gIC8qIEFsaWduIGljb25zIHRvIHRoZSByaWdodCAqL1xuICBnYXA6IDE2cHg7XG4gIC8qIFNwYWNlIGJldHdlZW4gYnV0dG9ucyAqL1xuICBtYXJnaW4tYm90dG9tOiA4cHg7XG4gIC8qIFNwYWNlIGJlbG93IHRoZSBidXR0b25zICovXG59XG5cbi5pY29uLWltZyB7XG4gIHdpZHRoOiAzN3B4O1xuICBoZWlnaHQ6IDM4cHg7XG4gIC1vLW9iamVjdC1maXQ6IGNvbnRhaW47XG4gIG9iamVjdC1maXQ6IGNvbnRhaW47XG4gIG1hcmdpbjogM3B4O1xufSJdfQ== */\"","\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\n// import { FinanceReportsService } from '../finance-reports.service';\nimport { Router } from '@angular/router';\nimport { InventoryReportsService } from '../../inventory-reports.service';\nimport { DatePipe } from '@angular/common';\nimport { AppConst } from 'src/app/shared/app-constants';\nimport { OptionsTableDefinition } from 'src/app/shared/components/auto-select/auto-select.component';\n\n@Component({\n  selector: 'app-stock-position',\n  templateUrl: './stock-position.component.html',\n  styleUrls: ['./stock-position.component.scss']\n})\nexport class StockPositionComponent implements OnInit {\n    stockStatementRepost: FormGroup;\n    step: number = 0;\n    accountSelectionControl: FormControl;\n    dropdownOptions:any=[];\n    groupdropdown:any=[];\n    filteredOptions:any=[];\n    groupFilteredOptions:any=[];\n    // Updated with additional columns\n    // dropdownOptions = [\n    //   { id: 1, name: 'Account A', address: '123 Main St', city: 'New York', state: 'NY' },\n    //   { id: 2, name: 'Account B', address: '456 Elm St', city: 'Los Angeles', state: 'CA' },\n    //   { id: 3, name: 'Account C', address: '789 Oak St', city: 'Chicago', state: 'IL' },\n    //   { id: 4, name: 'Account D', address: '101 Pine St', city: 'Houston', state: 'TX' }\n    // ];\n    // dropdownOptions = [\n    //   { id: 1, name: 'A', address: '1', city: 'N', state: 'N' },\n    //   { id: 2, name: 'B', address: '4', city: 'L', state: 'C' },\n    //   ...\n    // ];\n  \n    isAllSelected = false;\n    isIndeterminate = false;\n    financialYearStart: Date;\n    financialYearEnd: Date;\n    today: string;\n    showTable: boolean = false;\n    dataSource: any;\n    isshowExcel:boolean=false;\n  selectedAccounts: any [] = [];\n    constructor(private fb: FormBuilder, private router:Router,private StockRepService:InventoryReportsService,public datepipe: DatePipe\n    ) {\n      this.today = new Date().toISOString().split('T')[0];\n      this.stockStatementRepost = this.fb.group({\n        fromDate: [this.today, Validators.required],\n        toDate: [this.today, Validators.required],\n        accopyType: [''],\n        accId:[[], Validators.required]\n      });\n    }\n  \n    ngOnInit(): void {\n      this.getCompanies();\n      this.getCompaniesGroups();\n      this.calculateFinancialYearDates();\n      // this.createForm();\n      this.stockStatementRepost.get('accId').valueChanges.subscribe((selectedValues) => {\n        if (selectedValues.length > 0) {\n          // Preserve previously selected accounts even after filtering\n          this.selectedAccounts = this.dropdownOptions.filter(account =>\n            selectedValues.some((selected) => selected.compName === account.compName)\n          );\n        //   const commonObjects = this.filteredOptions.filter(person1 =>\n        //     this.selectedAccounts.some(person2 => person2.compId === person1.compId)\n        //   );\n        //   if(svalues.length > 0){\n        //     svalues.forEach(x=>{\n        //       const duplival = this.selectedAccounts.find(y=>y.compId == x.compId);\n        //       if(!duplival){\n        //       this.selectedAccounts.push(x);\n        //       }\n        //     })\n          }\n        //  else {\n        //   this.selectedAccounts = [];\n        // }\n      });\n    }\n\n    customAccountsOptsTable: OptionsTableDefinition = {\n      panelWidth: 800,\n      columns: [\n        {\n          name: 'Select All', value: (obj) => obj[''],\n          fxFlex: 10,\n          fxFlex1: 0\n        },\n        { name: 'Company Name', value: (obj) => obj['compName'] ? obj['compName'] : '', fxFlex: 34,fxFlex1:34, isKeyColumn: true },\n        { name: 'Shot Name', value: (obj) => obj['compShName'] ? obj['compShName'] : '', fxFlex: 14,fxFlex1:14 },\n        { name: 'Address1', value: (obj) => obj['address1'] ? obj['address1'] : '', fxFlex: 16,fxFlex1:16 },\n        { name: 'Address2', value: (obj) => obj['address2'] ? obj['address2'] : '', fxFlex: 24,fxFlex1:24 },\n        { name: 'Company Group Name', value: (obj) => obj['compGroupName'] ? obj['compGroupName'] : '', fxFlex: 12,fxFlex1:12 },\n        // { name: 'Mobile', value: (obj) => obj['mobile'] ? obj['mobile'] : '', fxFlex: 14,fxFlex1:14},\n      ]\n    };\n    filterKeys = ['compName', 'compShName', 'compGroupName'];\n\n    customCmpGroupsOptsTable: OptionsTableDefinition = {\n      panelWidth: 500,\n      columns: [\n        {\n          name: 'Select All', value: (obj) => obj[''],\n          fxFlex: 10,\n          fxFlex1: 0\n        },\n        { name: 'Company Group Name', value: (obj) => obj['compGroupName'] ? obj['compGroupName'] : '', fxFlex: 34,fxFlex1:34, isKeyColumn: true },\n        // { name: 'Shot Name', value: (obj) => obj['compShName'] ? obj['compShName'] : '', fxFlex: 14,fxFlex1:14 },\n        // { name: 'Address1', value: (obj) => obj['address1'] ? obj['address1'] : '', fxFlex: 16,fxFlex1:16 },\n        // { name: 'Address2', value: (obj) => obj['address2'] ? obj['address2'] : '', fxFlex: 24,fxFlex1:24 },\n        // { name: 'Company Group Name', value: (obj) => obj['compGroupName'] ? obj['compGroupName'] : '', fxFlex: 12,fxFlex1:12 },\n        // { name: 'Mobile', value: (obj) => obj['mobile'] ? obj['mobile'] : '', fxFlex: 14,fxFlex1:14},\n      ]\n    };\n    groupfilterKeys = ['compGroupName'];\n    \n    selectedCompanies:any;\n    receiveData(data){\n      this.selectedCompanies =[];\n     data.forEach(x=>{\n      this.selectedCompanies.push(x.compId);\n     });\n    }\n\n    receiveGroupData(data){\n      this.selectedCompanies =[];\n     data.forEach(x=>{\n      this.selectedCompanies.push(x.compGroupId);\n     });\n    }\n    setStep(index: number): void {\n      this.step = index;\n    }\n    getCompanies(){\n      this.StockRepService.getCompanyList().subscribe(res=>{\n        console.log(res);\n        this.dropdownOptions=res;\n        this.filteredOptions = res;\n      })\n    };\n    getCompaniesGroups(){\n      this.StockRepService.getGroupCompanyList().subscribe(res=>{\n        console.log(res);\n        this.groupdropdown=res;\n        this.groupFilteredOptions = [...this.groupdropdown];\n      })\n    };\n    accountType:any;\n    generateReport(): void {\n      console.log('Selected Accounts:', this.stockStatementRepost.value);\n      // let toDate = this.stockStatementRepost.value.toDate.split(\"T\")\n      let accId = [];\n      this.accountType = Number(this.stockStatementRepost.controls.accopyType.value)\n      //  if(this.stockStatementRepost.value.accId.length > 0){ \n      //   if(this.stockStatementRepost.value.accopyType == 1){\n      //     accId = this.stockStatementRepost.value.accId.map(item => item.compId).toString();\n      //   }\n      //   else if(this.stockStatementRepost.value.accopyType == 2){\n      //     accId = this.stockStatementRepost.value.accId.map(item => item.compGroupId).toString();\n      //   }\n      //  }\n\n      const acctype =  +this.stockStatementRepost.get('accopyType').value;\n      if(acctype == 1){\n        if(this.selectedCompanies.length == 0 ){\n          return \n        }\n      }\n       const payload={\n        \"stmntOption\": Number(this.stockStatementRepost.controls.accopyType.value),\n        \"compGrps\":this.selectedCompanies ? this.selectedCompanies.toString() :\"\",\n        \"fromDate\": this.datepipe.transform(this.stockStatementRepost.value.fromDate, AppConst.DATE_FORMAT), \n        // this.stockStatementRepost.value.fromDate,\n        \"toDate\": this.datepipe.transform(this.stockStatementRepost.value.toDate,AppConst.DATE_FORMAT),\n        \"finSDate\": this.datepipe.transform(this.financialYearStart,AppConst.DATE_FORMAT),\n        \"finEDate\": this.datepipe.transform(this.financialYearEnd,AppConst.DATE_FORMAT)\n      }\n      console.log('payload', payload);\n      this.showTable = false;\n  \n      this.StockRepService.getstockStstement(payload).subscribe(res =>{\n        if(res){\n          this.showTable = true;\n          this.isshowExcel = true;\n          this.stockStatementRepost.get('accopyType').setValue([\"0\"]);\n          console.log('res', res);\n          this.dataSource = JSON.parse(res);\n        }\n      });\n    }\n\n    downloadFile(filePath:any) {\n      const link = document.createElement('a');\n      link.href = filePath.resultObject; // The path returned by your API\n      link.download = filePath.resultObject.split('/').pop() || 'download.xlsx'; // Extract filename or use default\n      link.target = '_blank';\n    \n      // Append link to the body\n      document.body.appendChild(link);\n    \n      // Trigger the click\n      link.click();\n    \n      // Remove the link from the DOM\n      document.body.removeChild(link);\n    }\n\n    exportToExcel(data: any) {\n      const payload={\n        \"stmntOption\": this.accountType ? this.accountType:0,\n        \"compGrps\":this.selectedCompanies ? this.selectedCompanies.toString() :\"\",\n        \"fromDate\": this.datepipe.transform(this.stockStatementRepost.value.fromDate, AppConst.DATE_FORMAT), \n        \"toDate\": this.datepipe.transform(this.stockStatementRepost.value.toDate,AppConst.DATE_FORMAT),\n        \"finSDate\": this.datepipe.transform(this.financialYearStart,AppConst.DATE_FORMAT),\n        \"finEDate\": this.datepipe.transform(this.financialYearEnd,AppConst.DATE_FORMAT)\n      }\n  \n      this.StockRepService.gettockStatementExcel(payload).subscribe(\n        (res: any) => {\n          const base64String = res;\n          const fileName = 'StockStatementReport.xlsx'; // Desired file name\n          // Decode Base64 to binary data\n          const binaryData = atob(base64String);\n          const byteNumbers = new Array(binaryData.length);\n          for (let i = 0; i < binaryData.length; i++) {\n            byteNumbers[i] = binaryData.charCodeAt(i);\n          }\n          const byteArray = new Uint8Array(byteNumbers);\n          // Create a Blob from the binary data\n          const blob = new Blob([byteArray], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n          // Create a URL for the Blob\n          const url = window.URL.createObjectURL(blob);\n          // Create an anchor element and trigger the download\n          const anchor = document.createElement('a');\n          anchor.href = url;\n          anchor.download = fileName;\n          anchor.click();\n  \n          // Clean up the URL\n          window.URL.revokeObjectURL(url);\n        },\n        (err) => {\n          console.error('Error generating Excel file:', err);\n        }\n      );\n    }\n  \n    // filterOptions(searchValue: string): void {\n    //   const lowerSearch = searchValue.toLowerCase();\n    //   this.filteredOptions = this.dropdownOptions.filter(option => \n    //     option.compName.toLowerCase().includes(lowerSearch) ||\n    //     option.compShName.toLowerCase().includes(lowerSearch) ||\n    //     option.address1.toLowerCase().includes(lowerSearch) ||\n    //     option.address2.toLowerCase().includes(lowerSearch) ||\n    //     option.compGroupName.toString().includes(lowerSearch)\n    //     );\n    //     const commonObjects = this.filteredOptions.filter(person1 =>\n    //       this.selectedAccounts.some(person2 => person2.compId === person1.compId)\n    //     );\n    //     this.stockStatementRepost.get('accId').setValue(commonObjects);\n    // }\n\n\n    filterOptions(searchValue: string): void {\n      const lowerSearch = searchValue.toLowerCase();\n      this.filteredOptions = this.dropdownOptions.filter(option => {\n        const compName = option.compName ? option.compName.toLowerCase() : '';\n        const compShName = option.compShName ? option.compShName.toLowerCase() : '';\n        const address1 = option.address1 ? option.address1.toLowerCase() : '';\n        const address2 = option.address2 ? option.address2.toLowerCase() : '';\n        const compGroupName = option.compGroupName ? option.compGroupName.toString() : '';\n    \n        return compName.includes(lowerSearch) ||\n               compShName.includes(lowerSearch) ||\n               address1.includes(lowerSearch) ||\n               address2.includes(lowerSearch)||\n               compGroupName.includes(lowerSearch);\n\n      });\n\n    }\n  GroupfilterOptions(searchValue: string): void {\n    const lowerSearch = searchValue.toLowerCase();\n    this.groupFilteredOptions = this.groupdropdown.filter(option => {\n      const cmpGroupname = option.compGroupName ? option.compGroupName.toLowerCase() : '';\n      return cmpGroupname.includes(lowerSearch)\n    }\n    );\n  }\n  \n    resetForm(): void {\n      this.stockStatementRepost.reset();\n      this.dataSource=[];\n    }\n  \n   \n  \n    toggleSelectAll(checked: boolean): void {\n      if (checked) {\n        this.stockStatementRepost.get('accId').setValue(this.dropdownOptions);\n      } else {\n        this.stockStatementRepost.get('accId').setValue([]);\n      }\n      this.updateSelectAllState();\n    }\n    toggleSelectAllgroups(checked: boolean): void {\n      if (checked) {\n        this.stockStatementRepost.get('accId').setValue(this.groupdropdown);\n      } else {\n        this.stockStatementRepost.get('accId').setValue([]);\n      }\n      this.updateSelectAllgroupState();\n    }\n  \n    onOptionChange(): void {\n      this.updateSelectAllState();\n    }\n  \n    updateSelectAllState(): void {\n      const selectedOptions = this.stockStatementRepost.get('accId').value || [];\n      this.isAllSelected = selectedOptions.length === this.dropdownOptions.length;\n      this.isIndeterminate =\n        selectedOptions.length > 0 && selectedOptions.length < this.dropdownOptions.length;\n    }\n    updateSelectAllgroupState(): void {\n      const selectedOptions = this.stockStatementRepost.get('accId').value || [];\n      this.isAllSelected = selectedOptions.length === this.groupdropdown.length;\n      this.isIndeterminate =\n        selectedOptions.length > 0 && selectedOptions.length < this.groupdropdown.length;\n    }\n  \n    // Calculate the start and end date of the current financial year\n    calculateFinancialYearDates() {\n      const currentDate = new Date();\n      const currentYear = currentDate.getFullYear();\n  \n      // Assuming financial year starts from 1st April and ends on 31st March\n      if (currentDate.getMonth() < 3) {\n        // If current month is before April, use last year's financial year\n        this.financialYearStart = new Date(currentYear - 1, 3, 1); // 1st April of previous year\n        this.financialYearEnd = new Date(currentYear, 2, 31); // 31st March of current year\n      } else {\n        // If current month is from April onwards, use current year's financial year\n        this.financialYearStart = new Date(currentYear, 3, 1); // 1st April of current year\n        this.financialYearEnd = new Date(currentYear + 1, 2, 31); // 31st March of next year\n      }\n    }\n  \n    // Datepicker filter to disable dates outside the financial year\n    dateFilter = (date: Date | null): boolean => {\n      if (!date) return false;\n      return date >= this.financialYearStart && date <= this.financialYearEnd;\n    };\n  \n    typeChange(value){\n     console.log(value);\n        // Based on the condition, set 'name' field required or not\n        const nameControl = this.stockStatementRepost.get('accId');\n        if (+value == 1) {\n          nameControl.setValue([]);\n          nameControl.setValidators([Validators.required]);  // Set as required\n        } else {\n          nameControl.setValue([]);\n          nameControl.clearValidators();  // Remove the required validator\n        }\n  \n         // Always call updateValueAndValidity after changing the validators\n          nameControl.updateValueAndValidity();\n    }\n  \n    goback(){\n      this.router.navigate(['pharma/inventoryReports/stockReports']);\n    }\n\n    clearSelectedItems(isChecked: boolean): void {\n      if (isChecked) {\n        // Clear selected items\n        this.stockStatementRepost.get('accId').setValue([]);\n        this.selectedAccounts = [];\n      }\n    }\n  \n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rpc3RyaWJ1dGlvbi9pbnZlbnRvcnktcmVwb3J0cy9zdG9jay1yZXBvcnRzL3N0b2NrLXJlcG9ydHMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-stock-reports',\n  templateUrl: './stock-reports.component.html',\n  styleUrls: ['./stock-reports.component.scss']\n})\nexport class StockReportsComponent implements OnInit {\n  authDetails: any;\n  menuArray: Menu[];\n\n  constructor(private router:Router,) { }\n\n  ngOnInit() {\n    this.authDetails= JSON.parse(localStorage.getItem(\"menuItems\"));\n    this.authDetails.filter(x=>{\n      if(x.menuName == 'Inventory Reports'){\n        var menus = x.menus;\n        menus.filter(y =>{\n          if(y.menuName == 'Stock Reports'){\n          this.menuArray = y.menus;\n          }\n        })\n      }\n    });\n  }\n\n\n  report(data:any){\n    var r  = data.split(\"ebusiness\");\n    r = r[1];\n    console.log(r);\n    this.router.navigate([r]);\n  //   debugger;\n  //  console.log(data);\n  //  this.router.navigate(['.pharma/inventoryReports/stockReports/stockPosition']);\n  }\n\n}\n","export default \".pharmacyHeading {\\n  color: #2f8bbd;\\n  font-size: 24px;\\n  font-family: \\\"Monospace\\\", sans-serif;\\n  font-weight: bold;\\n  margin: 0;\\n  text-align: right;\\n}\\n\\n.pharma-finance {\\n  padding: 16px;\\n}\\n\\n.CashReceiptControls {\\n  width: 100%;\\n}\\n\\nbutton.mat-raised-button {\\n  border-radius: 63px;\\n  min-width: 101px;\\n  height: 48px;\\n  margin: 6px;\\n}\\n\\n.mat-form-field {\\n  width: 100%;\\n}\\n\\n.mat-select-panel {\\n  max-height: 200px;\\n  overflow: auto;\\n}\\n\\n.dropdown-table {\\n  display: grid;\\n  grid-template-columns: 2fr 2fr 3fr 2fr 2fr 2fr;\\n  /* Adjust column widths */\\n  align-items: center;\\n  gap: 16px;\\n  padding: 8px;\\n}\\n\\n.dropdown-table.header {\\n  font-weight: bold;\\n  background-color: #f5f5f5;\\n  border-bottom: 1px solid #ddd;\\n}\\n\\n.dropdown-table.row {\\n  background-color: #fff;\\n  border-bottom: 1px solid #ddd;\\n}\\n\\n.dropdown-table.row:nth-child(even) {\\n  background-color: #fafafa;\\n}\\n\\n.dropdown-table span {\\n  overflow: hidden;\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  padding: 4px;\\n}\\n\\nmat-checkbox {\\n  margin: 8px 0;\\n}\\n\\n.search-container {\\n  padding: 8px;\\n}\\n\\n.search-field {\\n  width: 30%;\\n}\\n\\n.action-icons {\\n  display: flex;\\n  justify-content: flex-end;\\n  /* Align icons to the right */\\n  gap: 16px;\\n  /* Space between buttons */\\n  margin-bottom: 8px;\\n  /* Space below the buttons */\\n}\\n\\n.icon-img {\\n  width: 37px;\\n  height: 38px;\\n  -o-object-fit: contain;\\n  object-fit: contain;\\n  margin: 3px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGlzdHJpYnV0aW9uL2ludmVudG9yeS1yZXBvcnRzL3N0b2NrLXJlcG9ydHMvc3RvY2stc3RhdGVtZW50L0M6XFxVc2Vyc1xcVVNFUlxcRG93bmxvYWRzXFxlQnVzaW5lc3MuVWkvc3JjXFxhcHBcXGRpc3RyaWJ1dGlvblxcaW52ZW50b3J5LXJlcG9ydHNcXHN0b2NrLXJlcG9ydHNcXHN0b2NrLXN0YXRlbWVudFxcc3RvY2stc3RhdGVtZW50LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9kaXN0cmlidXRpb24vaW52ZW50b3J5LXJlcG9ydHMvc3RvY2stcmVwb3J0cy9zdG9jay1zdGF0ZW1lbnQvc3RvY2stc3RhdGVtZW50LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksY0FBQTtFQUNBLGVBQUE7RUFDQSxvQ0FBQTtFQUNBLGlCQUFBO0VBQ0EsU0FBQTtFQUNBLGlCQUFBO0FDQ0o7O0FERUU7RUFDRSxhQUFBO0FDQ0o7O0FERUU7RUFDRSxXQUFBO0FDQ0o7O0FERUU7RUFDRSxtQkFBQTtFQUNBLGdCQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7QUNDSjs7QURFRTtFQUNFLFdBQUE7QUNDSjs7QURFRTtFQUNFLGlCQUFBO0VBQ0EsY0FBQTtBQ0NKOztBREVFO0VBQ0UsYUFBQTtFQUNBLDhDQUFBO0VBQWdELHlCQUFBO0VBQ2hELG1CQUFBO0VBQ0EsU0FBQTtFQUNBLFlBQUE7QUNFSjs7QURDRTtFQUNFLGlCQUFBO0VBQ0EseUJBQUE7RUFDQSw2QkFBQTtBQ0VKOztBRENFO0VBQ0Usc0JBQUE7RUFDQSw2QkFBQTtBQ0VKOztBRENFO0VBQ0UseUJBQUE7QUNFSjs7QURDRTtFQUNFLGdCQUFBO0VBQ0EsbUJBQUE7RUFDQSx1QkFBQTtFQUNBLFlBQUE7QUNFSjs7QURDRTtFQUNFLGFBQUE7QUNFSjs7QURBRTtFQUNFLFlBQUE7QUNHSjs7QURBRTtFQUNFLFVBQUE7QUNHSjs7QURERTtFQUNFLGFBQUE7RUFDQSx5QkFBQTtFQUEyQiw2QkFBQTtFQUMzQixTQUFBO0VBQVcsMEJBQUE7RUFDWCxrQkFBQTtFQUFvQiw0QkFBQTtBQ094Qjs7QURKRTtFQUNFLFdBQUE7RUFDQSxZQUFBO0VBQ0Esc0JBQUE7RUFDQSxtQkFBQTtFQUNBLFdBQUE7QUNPSiIsImZpbGUiOiJzcmMvYXBwL2Rpc3RyaWJ1dGlvbi9pbnZlbnRvcnktcmVwb3J0cy9zdG9jay1yZXBvcnRzL3N0b2NrLXN0YXRlbWVudC9zdG9jay1zdGF0ZW1lbnQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucGhhcm1hY3lIZWFkaW5nIHtcbiAgICBjb2xvcjogIzJmOGJiZDtcbiAgICBmb250LXNpemU6IDI0cHg7XG4gICAgZm9udC1mYW1pbHk6ICdNb25vc3BhY2UnLCBzYW5zLXNlcmlmO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIG1hcmdpbjogMDtcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgfVxuICBcbiAgLnBoYXJtYS1maW5hbmNlIHtcbiAgICBwYWRkaW5nOiAxNnB4O1xuICB9XG4gIFxuICAuQ2FzaFJlY2VpcHRDb250cm9scyB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbiAgXG4gIGJ1dHRvbi5tYXQtcmFpc2VkLWJ1dHRvbiB7XG4gICAgYm9yZGVyLXJhZGl1czogNjNweDtcbiAgICBtaW4td2lkdGg6IDEwMXB4O1xuICAgIGhlaWdodDogNDhweDtcbiAgICBtYXJnaW46IDZweFxuICB9XG4gIFxuICAubWF0LWZvcm0tZmllbGQge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIFxuICAubWF0LXNlbGVjdC1wYW5lbCB7XG4gICAgbWF4LWhlaWdodDogMjAwcHg7XG4gICAgb3ZlcmZsb3c6IGF1dG87XG4gIH1cbiAgXG4gIC5kcm9wZG93bi10YWJsZSB7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDJmciAyZnIgM2ZyIDJmciAyZnIgMmZyOyAvKiBBZGp1c3QgY29sdW1uIHdpZHRocyAqL1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgZ2FwOiAxNnB4O1xuICAgIHBhZGRpbmc6IDhweDtcbiAgfVxuICBcbiAgLmRyb3Bkb3duLXRhYmxlLmhlYWRlciB7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjVmNTtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2RkZDtcbiAgfVxuICBcbiAgLmRyb3Bkb3duLXRhYmxlLnJvdyB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2RkZDtcbiAgfVxuICBcbiAgLmRyb3Bkb3duLXRhYmxlLnJvdzpudGgtY2hpbGQoZXZlbikge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmYWZhZmE7XG4gIH1cbiAgXG4gIC5kcm9wZG93bi10YWJsZSBzcGFuIHtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gICAgcGFkZGluZzogNHB4O1xuICB9XG4gIFxuICBtYXQtY2hlY2tib3gge1xuICAgIG1hcmdpbjogOHB4IDA7XG4gIH1cbiAgLnNlYXJjaC1jb250YWluZXIge1xuICAgIHBhZGRpbmc6IDhweDtcbiAgfVxuICBcbiAgLnNlYXJjaC1maWVsZCB7XG4gICAgd2lkdGg6IDMwJTtcbiAgfVxuICAuYWN0aW9uLWljb25zIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7IC8qIEFsaWduIGljb25zIHRvIHRoZSByaWdodCAqL1xuICAgIGdhcDogMTZweDsgLyogU3BhY2UgYmV0d2VlbiBidXR0b25zICovXG4gICAgbWFyZ2luLWJvdHRvbTogOHB4OyAvKiBTcGFjZSBiZWxvdyB0aGUgYnV0dG9ucyAqL1xuICB9XG4gIFxuICAuaWNvbi1pbWcge1xuICAgIHdpZHRoOiAzN3B4O1xuICAgIGhlaWdodDogMzhweDtcbiAgICAtby1vYmplY3QtZml0OiBjb250YWluO1xuICAgIG9iamVjdC1maXQ6IGNvbnRhaW47XG4gICAgbWFyZ2luOiAzcHg7XG4gIH0iLCIucGhhcm1hY3lIZWFkaW5nIHtcbiAgY29sb3I6ICMyZjhiYmQ7XG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgZm9udC1mYW1pbHk6IFwiTW9ub3NwYWNlXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBtYXJnaW46IDA7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuXG4ucGhhcm1hLWZpbmFuY2Uge1xuICBwYWRkaW5nOiAxNnB4O1xufVxuXG4uQ2FzaFJlY2VpcHRDb250cm9scyB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG5idXR0b24ubWF0LXJhaXNlZC1idXR0b24ge1xuICBib3JkZXItcmFkaXVzOiA2M3B4O1xuICBtaW4td2lkdGg6IDEwMXB4O1xuICBoZWlnaHQ6IDQ4cHg7XG4gIG1hcmdpbjogNnB4O1xufVxuXG4ubWF0LWZvcm0tZmllbGQge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLm1hdC1zZWxlY3QtcGFuZWwge1xuICBtYXgtaGVpZ2h0OiAyMDBweDtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi5kcm9wZG93bi10YWJsZSB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMmZyIDJmciAzZnIgMmZyIDJmciAyZnI7XG4gIC8qIEFkanVzdCBjb2x1bW4gd2lkdGhzICovXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGdhcDogMTZweDtcbiAgcGFkZGluZzogOHB4O1xufVxuXG4uZHJvcGRvd24tdGFibGUuaGVhZGVyIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjU7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGRkO1xufVxuXG4uZHJvcGRvd24tdGFibGUucm93IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkZGQ7XG59XG5cbi5kcm9wZG93bi10YWJsZS5yb3c6bnRoLWNoaWxkKGV2ZW4pIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZhZmFmYTtcbn1cblxuLmRyb3Bkb3duLXRhYmxlIHNwYW4ge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgcGFkZGluZzogNHB4O1xufVxuXG5tYXQtY2hlY2tib3gge1xuICBtYXJnaW46IDhweCAwO1xufVxuXG4uc2VhcmNoLWNvbnRhaW5lciB7XG4gIHBhZGRpbmc6IDhweDtcbn1cblxuLnNlYXJjaC1maWVsZCB7XG4gIHdpZHRoOiAzMCU7XG59XG5cbi5hY3Rpb24taWNvbnMge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xuICAvKiBBbGlnbiBpY29ucyB0byB0aGUgcmlnaHQgKi9cbiAgZ2FwOiAxNnB4O1xuICAvKiBTcGFjZSBiZXR3ZWVuIGJ1dHRvbnMgKi9cbiAgbWFyZ2luLWJvdHRvbTogOHB4O1xuICAvKiBTcGFjZSBiZWxvdyB0aGUgYnV0dG9ucyAqL1xufVxuXG4uaWNvbi1pbWcge1xuICB3aWR0aDogMzdweDtcbiAgaGVpZ2h0OiAzOHB4O1xuICAtby1vYmplY3QtZml0OiBjb250YWluO1xuICBvYmplY3QtZml0OiBjb250YWluO1xuICBtYXJnaW46IDNweDtcbn0iXX0= */\"","\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\n// import { FinanceReportsService } from '../finance-reports.service';\nimport { Router } from '@angular/router';\nimport { InventoryReportsService } from '../../inventory-reports.service';\nimport { DatePipe } from '@angular/common';\nimport { AppConst } from 'src/app/shared/app-constants';\nimport { OptionsTableDefinition } from 'src/app/shared/components/auto-select/auto-select.component';\n@Component({\n  selector: 'app-stock-statement',\n  templateUrl: './stock-statement.component.html',\n  styleUrls: ['./stock-statement.component.scss']\n})\nexport class StockStatementComponent implements OnInit {\n    stockPositionRepost: FormGroup;\n    step: number = 0;\n    accountSelectionControl: FormControl;\n    dropdownOptions:any=[];\n    groupdropdown:any=[];\n    filteredOptions:any=[];\n    groupFilteredOptions:any=[];\n    isAllSelected = false;\n    isIndeterminate = false;\n    financialYearStart: Date;\n    financialYearEnd: Date;\n    today: string;\n    showTable: boolean = false;\n    dataSource: any;\n    isShowExcelpdf:boolean=false;\n    constructor(private fb: FormBuilder, private router:Router,private StockRepService:InventoryReportsService,public datepipe: DatePipe\n    ) {\n      this.today = new Date().toISOString().split('T')[0];\n      this.stockPositionRepost = this.fb.group({\n        fromDate: [this.today, Validators.required],\n        toDate: [this.today, Validators.required],\n        accopyType: [''],\n        accId:[[], Validators.required]\n      });\n    }\n  \n    ngOnInit(): void {\n      this.getCompanies();\n      // this.getCompaniesGroups();\n      this.calculateFinancialYearDates();\n      // this.createForm();\n    }\n\n      customAccountsOptsTable: OptionsTableDefinition = {\n        panelWidth: 800,\n        columns: [\n          {\n            name: 'Select All', value: (obj) => obj[''],\n            fxFlex: 10,\n            fxFlex1: 0\n          },\n          { name: 'Company Name', value: (obj) => obj['compName'] ? obj['compName'] : '', fxFlex: 34,fxFlex1:34, isKeyColumn: true },\n          { name: 'Shot Name', value: (obj) => obj['compShName'] ? obj['compShName'] : '', fxFlex: 14,fxFlex1:14 },\n          { name: 'Address1', value: (obj) => obj['address1'] ? obj['address1'] : '', fxFlex: 16,fxFlex1:16 },\n          { name: 'Address2', value: (obj) => obj['address2'] ? obj['address2'] : '', fxFlex: 24,fxFlex1:24 },\n          { name: 'Company Group Name', value: (obj) => obj['compGroupName'] ? obj['compGroupName'] : '', fxFlex: 12,fxFlex1:12 },\n          // { name: 'Mobile', value: (obj) => obj['mobile'] ? obj['mobile'] : '', fxFlex: 14,fxFlex1:14},\n        ]\n      };\n      filterKeys = ['compName', 'compShName', 'compGroupName'];\n    \n  \n    setStep(index: number): void {\n      this.step = index;\n    }\n    selectedCompanies:any;\n    receiveData(data){\n      this.selectedCompanies =[];\n     data.forEach(x=>{\n      this.selectedCompanies.push(x.compId);\n     });\n    }\n    getCompanies(){\n      this.StockRepService.getCompanyList().subscribe(res=>{\n        console.log(res);\n        this.dropdownOptions=res;\n        // this.filteredOptions = [...this.dropdownOptions];\n      })\n    };\n    getCompaniesGroups(){\n      this.StockRepService.getGroupCompanyList().subscribe(res=>{\n        console.log(res);\n        this.groupdropdown=res;\n        this.groupFilteredOptions = [...this.groupdropdown];\n      })\n    };\n  \n    generateReport(): void {\n      console.log('Selected Companies:', this.stockPositionRepost.value);\n      // let toDate = this.stockPositionRepost.value.toDate.split(\"T\")\n      let accId = [];\n      //  if(this.stockPositionRepost.value.accId.length > 0){ \n      //     accId = this.stockPositionRepost.value.accId.map(item => item.compId).toString();\n      //  }\n       if(this.selectedCompanies.length == 0 ){\n        return \n      }\n       const payload={\n        \"reportOption\": Number(this.stockPositionRepost.controls.accopyType.value),\n        \"companies\": this.selectedCompanies ? this.selectedCompanies.toString() :\"\",\n        // \"fromDate\": this.datepipe.transform(this.stockPositionRepost.value.fromDate, AppConst.DATE_FORMAT), \n        // this.stockPositionRepost.value.fromDate,\n        // \"toDate\": this.datepipe.transform(this.stockPositionRepost.value.toDate,AppConst.DATE_FORMAT),\n        \"finSDate\": this.datepipe.transform(this.financialYearStart,AppConst.DATE_FORMAT),\n        \"finEDate\": this.datepipe.transform(this.financialYearEnd,AppConst.DATE_FORMAT)\n      }\n      console.log('payload', payload);\n      this.showTable = false;\n  \n      this.StockRepService.getstockPosition(payload).subscribe(res =>{\n        if(res){\n          this.showTable = true;\n          this.isShowExcelpdf=true;\n          console.log('res', res);\n          this.dataSource = JSON.parse(res);\n          this.dropdownOptions =[];\n        }\n      });\n    }\n  exportToExcel(data: any) {\n    let reBody = {\n      companies: this.selectedCompanies ? this.selectedCompanies.toString() : \"\",\n      reportOption: Number(this.stockPositionRepost.controls.accopyType.value),\n      finSDate: this.datepipe.transform(this.financialYearStart, AppConst.DATE_FORMAT),\n      finEDate: this.datepipe.transform(this.financialYearEnd, AppConst.DATE_FORMAT)\n    };\n\n    this.StockRepService.gettockPositionExcel(reBody).subscribe(\n      (res: any) => {\n        const base64String = res;\n        const fileName = 'StockPositionReport.xlsx'; // Desired file name\n        // Decode Base64 to binary data\n        const binaryData = atob(base64String);\n        const byteNumbers = new Array(binaryData.length);\n        for (let i = 0; i < binaryData.length; i++) {\n          byteNumbers[i] = binaryData.charCodeAt(i);\n        }\n        const byteArray = new Uint8Array(byteNumbers);\n        // Create a Blob from the binary data\n        const blob = new Blob([byteArray], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n        // Create a URL for the Blob\n        const url = window.URL.createObjectURL(blob);\n        // Create an anchor element and trigger the download\n        const anchor = document.createElement('a');\n        anchor.href = url;\n        anchor.download = fileName;\n        anchor.click();\n\n        // Clean up the URL\n        window.URL.revokeObjectURL(url);\n      },\n      (err) => {\n        console.error('Error generating Excel file:', err);\n      }\n    );\n  }\n\n  exportToPdf(){\n\n  }\n  \n    filterOptions(searchValue: string): void {\n      const lowerSearch = searchValue.toLowerCase();\n\n      this.filteredOptions = this.dropdownOptions.filter(option => {\n        const compName = option.compName ? option.compName.toLowerCase() : '';\n        const compShName = option.compShName ? option.compShName.toLowerCase() : '';\n        const address1 = option.address1 ? option.address1.toLowerCase() : '';\n        const address2 = option.address2 ? option.address2.toLowerCase() : '';\n        const compGroupName = option.compGroupName ? option.compGroupName.toString() : '';\n    \n        return compName.includes(lowerSearch) ||\n               compShName.includes(lowerSearch) ||\n               address1.includes(lowerSearch) ||\n               address2.includes(lowerSearch)||\n               compGroupName.includes(lowerSearch);\n\n      });\n      // this.filteredOptions = this.dropdownOptions.filter(option => \n      //   option.compName.toLowerCase().includes(lowerSearch) ||\n      //   option.compShName.toLowerCase().includes(lowerSearch) ||\n      //   option.address1.toLowerCase().includes(lowerSearch) ||\n      //   option.address2.toLowerCase().includes(lowerSearch) ||\n      //   option.compGroupName.toString().includes(lowerSearch)\n      //   );\n    }\n    GroupfilterOptions(searchValue: string): void {\n      const lowerSearch = searchValue.toLowerCase();\n      this.groupFilteredOptions = this.groupdropdown.filter(option => \n        option.compGroupName.toLowerCase().includes(lowerSearch)\n        );\n    }\n  \n    resetForm(): void {\n      this.stockPositionRepost.reset();\n      this.dataSource=[];\n      this.dropdownOptions = [];\n    }\n  \n   \n  \n    toggleSelectAll(checked: boolean): void {\n      if (checked) {\n        this.stockPositionRepost.get('accId').setValue(this.dropdownOptions);\n      } else {\n        this.stockPositionRepost.get('accId').setValue([]);\n      }\n      this.updateSelectAllState();\n    }\n    toggleSelectAllgroups(checked: boolean): void {\n      if (checked) {\n        this.stockPositionRepost.get('accId').setValue(this.groupdropdown);\n      } else {\n        this.stockPositionRepost.get('accId').setValue([]);\n      }\n      this.updateSelectAllgroupState();\n    }\n  \n    onOptionChange(): void {\n      this.updateSelectAllState();\n    }\n  \n    updateSelectAllState(): void {\n      const selectedOptions = this.stockPositionRepost.get('accId').value || [];\n      this.isAllSelected = selectedOptions.length === this.dropdownOptions.length;\n      this.isIndeterminate =\n        selectedOptions.length > 0 && selectedOptions.length < this.dropdownOptions.length;\n    }\n    updateSelectAllgroupState(): void {\n      const selectedOptions = this.stockPositionRepost.get('accId').value || [];\n      this.isAllSelected = selectedOptions.length === this.groupdropdown.length;\n      this.isIndeterminate =\n        selectedOptions.length > 0 && selectedOptions.length < this.groupdropdown.length;\n    }\n  \n    // Calculate the start and end date of the current financial year\n    calculateFinancialYearDates() {\n      const currentDate = new Date();\n      const currentYear = currentDate.getFullYear();\n  \n      // Assuming financial year starts from 1st April and ends on 31st March\n      if (currentDate.getMonth() < 3) {\n        // If current month is before April, use last year's financial year\n        this.financialYearStart = new Date(currentYear - 1, 3, 1); // 1st April of previous year\n        this.financialYearEnd = new Date(currentYear, 2, 31); // 31st March of current year\n      } else {\n        // If current month is from April onwards, use current year's financial year\n        this.financialYearStart = new Date(currentYear, 3, 1); // 1st April of current year\n        this.financialYearEnd = new Date(currentYear + 1, 2, 31); // 31st March of next year\n      }\n    }\n  \n    // Datepicker filter to disable dates outside the financial year\n    dateFilter = (date: Date | null): boolean => {\n      if (!date) return false;\n      return date >= this.financialYearStart && date <= this.financialYearEnd;\n    };\n  \n    typeChange(value){\n     console.log(value);\n        // Based on the condition, set 'name' field required or not\n        const nameControl = this.stockPositionRepost.get('accId');\n        if (+value == 1) {\n          nameControl.setValue([]);\n          nameControl.setValidators([Validators.required]);  // Set as required\n        } else {\n          nameControl.setValue([]);\n          nameControl.clearValidators();  // Remove the required validator\n        }\n  \n         // Always call updateValueAndValidity after changing the validators\n          nameControl.updateValueAndValidity();\n    }\n  \n    goback(){\n      this.router.navigate(['pharma/inventoryReports/stockReports']);\n    }\n  \n\n\n\n}\n","import { Injectable } from '@angular/core';\n// import { CoreHttpService } from '../core/core-http.service';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { APIConst } from '../../app-constants';\nimport { HttpService } from '../../services/http.service';\nimport { ThrowStmt } from '@angular/compiler';\nimport { platform } from 'os';\n@Injectable({\n  providedIn: 'root'\n})\nexport class InventoryHttpService {\n\n   constructor(private httpService:HttpService) { }\n\n getCompanies(): Observable<any> {\n    return this.httpService.doGet(APIConst.companiesMaster);\n  }\n\n  getCompanyGroups(): Observable<any> {\n    return this.httpService.doGet(APIConst.companiesGroups);\n  }\n\n  getStockStatemt(payload:any):Observable<any>{\n    return this.httpService.doPost(APIConst.stockStatement,payload);\n  }\n\n  getStockPosition(payload:any):Observable<any>{\n    return this.httpService.doPost(APIConst.stockPosition,payload);\n  }\n\n  getStockLedger(payload:any):Observable<any>{\n    return this.httpService.doPost(APIConst.stockLedger, payload);\n  }\n\n  getProducts(payload:any):Observable<any>{\n    return this.httpService.doPost(APIConst.GETCUSTOMPRODUCTS , payload);\n  }\n  getStockPositionExcel(payload:any):Observable<any>{\n   return this.httpService.doPost(APIConst.stockPositionExcel, payload);\n  }\n  getStockStatementExcel(payload:any):Observable<any>{\n    return this.httpService.doPost(APIConst.stockStatementExcel, payload);\n   }\n   GetBatchesByProductId(payload:any):Observable<any>{\n    return this.httpService.doGet(APIConst.batchesByProductId, payload);\n   }\n   GetBatchWiseStockLedger(payload:any):Observable<any>{\n    return this.httpService.doGet(APIConst.batchWiseStockLedger, payload);\n   }\n}\n"],"sourceRoot":"webpack:///","file":"inventory-reports-inventory-reports-module-es5.js"}